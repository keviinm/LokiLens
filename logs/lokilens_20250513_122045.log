2025-05-13 12:20:46,276 - slack - INFO - [slack_app.py:26] - Loading environment variables...
2025-05-13 12:20:46,276 - slack - INFO - [slack_app.py:28] - Environment variables loaded successfully
2025-05-13 12:20:46,276 - slack - INFO - [slack_app.py:31] - Initializing Slack app...
2025-05-13 12:20:46,315 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 12:20:47,073 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 09:20:46 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5f291444f6ebbb5faf1c02d7e91cdd7f', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'commands,chat:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCMO7tnt2OxocrBT1FD7CwAAECc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '189', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-hyvqwzys,envoy-edge-bom-idwbdxmr', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '214', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-wqaj', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https:\/\/cell-logs.slack.com\/","team":"Cell-logs","user":"lokilens","team_id":"T08RN80K1N3","user_id":"U08SQGNTJU8","bot_id":"B08SQGNSACQ","is_enterprise_install":false}
2025-05-13 12:20:47,074 - slack - INFO - [slack_app.py:33] - Slack app initialized successfully
2025-05-13 12:20:47,074 - slack - INFO - [slack_app.py:36] - Initializing S3 operations...
2025-05-13 12:20:47,074 - s3 - INFO - [s3_operations.py:14] - Initializing S3 operations
2025-05-13 12:20:47,074 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
2025-05-13 12:20:47,075 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-call.apigateway to before-call.api-gateway
2025-05-13 12:20:47,075 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
2025-05-13 12:20:47,076 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
2025-05-13 12:20:47,076 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
2025-05-13 12:20:47,076 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
2025-05-13 12:20:47,076 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
2025-05-13 12:20:47,077 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
2025-05-13 12:20:47,077 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
2025-05-13 12:20:47,077 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
2025-05-13 12:20:47,077 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
2025-05-13 12:20:47,080 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/endpoints.json
2025-05-13 12:20:47,090 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/sdk-default-configuration.json
2025-05-13 12:20:47,090 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-service-name: calling handler <function handle_service_name_alias at 0x105625620>
2025-05-13 12:20:47,102 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-05-13 12:20:47,107 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-05-13 12:20:47,117 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-05-13 12:20:47,120 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/partitions.json
2025-05-13 12:20:47,120 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x10554b6a0>
2025-05-13 12:20:47,120 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x107846160>
2025-05-13 12:20:47,136 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x10554b420>
2025-05-13 12:20:47,136 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_service
2025-05-13 12:20:47,136 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_global
2025-05-13 12:20:47,136 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_service
2025-05-13 12:20:47,136 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_global
2025-05-13 12:20:47,136 - botocore.configprovider - DEBUG - [configprovider.py:1005] - No configured endpoint found.
2025-05-13 12:20:47,138 - botocore.endpoint - DEBUG - [endpoint.py:414] - Setting s3 timeout as (60, 60)
2025-05-13 12:20:47,139 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/_retry.json
2025-05-13 12:20:47,139 - botocore.client - DEBUG - [client.py:290] - Registering retry handlers for service: s3
2025-05-13 12:20:47,139 - botocore.utils - DEBUG - [utils.py:1718] - Registering S3 region redirector handler
2025-05-13 12:20:47,140 - botocore.utils - DEBUG - [utils.py:1666] - Registering S3Express Identity Resolver
2025-05-13 12:20:47,140 - s3 - INFO - [s3_operations.py:24] - S3 client initialized successfully
2025-05-13 12:20:47,140 - slack - INFO - [slack_app.py:41] - S3 operations initialized successfully
2025-05-13 12:20:47,140 - slack - INFO - [slack_app.py:44] - Initializing OpenAI client...
2025-05-13 12:20:47,162 - slack - INFO - [slack_app.py:46] - OpenAI client initialized successfully
2025-05-13 12:20:47,162 - slack - INFO - [slack_app.py:49] - Initializing MCP client...
2025-05-13 12:20:47,162 - mcp - INFO - [mcp_client.py:30] - Initializing LogSearchClient...
2025-05-13 12:20:47,162 - mcp - INFO - [mcp_client.py:45] - Initializing OpenAI client...
2025-05-13 12:20:47,167 - mcp - INFO - [mcp_client.py:48] - OpenAI client initialized successfully
2025-05-13 12:20:47,167 - mcp - INFO - [mcp_client.py:53] - Initializing MCP tools...
2025-05-13 12:20:47,167 - mcp - INFO - [mcp_client.py:165] - Connecting to MCP server at http://localhost:8000/mcp
2025-05-13 12:20:47,169 - urllib3.connectionpool - DEBUG - [connectionpool.py:241] - Starting new HTTP connection (1): localhost:8000
2025-05-13 12:20:47,187 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - http://localhost:8000 "GET /mcp HTTP/1.1" 200 None
2025-05-13 12:20:47,187 - mcp - INFO - [mcp_client.py:180] - Response status code: 200
2025-05-13 12:20:47,187 - mcp - INFO - [mcp_client.py:181] - Response headers: {'date': 'Tue, 13 May 2025 09:20:46 GMT', 'server': 'uvicorn', 'cache-control': 'no-store', 'connection': 'keep-alive', 'x-accel-buffering': 'no', 'content-type': 'text/event-stream; charset=utf-8', 'Transfer-Encoding': 'chunked'}
2025-05-13 12:20:47,187 - sseclient - DEBUG - [__init__.py:32] - Initialized SSE client from event source <Response [200]>
2025-05-13 12:20:47,187 - sseclient - DEBUG - [__init__.py:108] - Dispatching endpoint event, 58 bytes...
2025-05-13 12:20:47,187 - mcp - INFO - [mcp_client.py:190] - Received session ID: cf28d0be528d44efadb8ce6b4fbdf8b2
2025-05-13 12:20:47,187 - mcp - INFO - [mcp_client.py:56] - MCP tools initialized successfully
2025-05-13 12:20:47,188 - slack - INFO - [slack_app.py:51] - MCP client initialized successfully
2025-05-13 12:20:47,188 - __main__ - INFO - [main.py:34] - 🚀 Starting Loki Lens application...
2025-05-13 12:20:47,188 - s3 - INFO - [s3_operations.py:14] - Initializing S3 operations
2025-05-13 12:20:47,188 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-service-name: calling handler <function handle_service_name_alias at 0x105625620>
2025-05-13 12:20:47,189 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x10554b6a0>
2025-05-13 12:20:47,189 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x107846160>
2025-05-13 12:20:47,189 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x10554b420>
2025-05-13 12:20:47,189 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_service
2025-05-13 12:20:47,189 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_global
2025-05-13 12:20:47,189 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_service
2025-05-13 12:20:47,189 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_global
2025-05-13 12:20:47,189 - botocore.configprovider - DEBUG - [configprovider.py:1005] - No configured endpoint found.
2025-05-13 12:20:47,190 - botocore.endpoint - DEBUG - [endpoint.py:414] - Setting s3 timeout as (60, 60)
2025-05-13 12:20:47,191 - botocore.client - DEBUG - [client.py:290] - Registering retry handlers for service: s3
2025-05-13 12:20:47,191 - botocore.utils - DEBUG - [utils.py:1718] - Registering S3 region redirector handler
2025-05-13 12:20:47,191 - botocore.utils - DEBUG - [utils.py:1666] - Registering S3Express Identity Resolver
2025-05-13 12:20:47,192 - s3 - INFO - [s3_operations.py:24] - S3 client initialized successfully
2025-05-13 12:20:47,192 - slack - INFO - [slack_app.py:337] - Starting Slack app in Socket Mode
2025-05-13 12:20:47,192 - __main__ - INFO - [main.py:53] - ✅ Slack integration started
2025-05-13 12:20:47,192 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 12:20:48,009 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 09:20:47 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '844700e862517358f73f6f0fbc9d8aa5', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write,authorizations:read', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCMO7wtqBP51HZ-IT6N5sAAAEC0', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-cudkynnp,envoy-edge-bom-oeihwgvh', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '206', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-qezy', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=5c0d055e-afd2-49f4-8c83-dc7debca36e4&app_id=80ecbf266142da985b68b05f1ff313c100b9cdf30b305f7e8a16dce5f531ab94"}
2025-05-13 12:20:48,940 - slack_bolt.App - INFO - [client.py:193] - A new session has been established (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab)
2025-05-13 12:20:48,940 - slack_bolt.App - INFO - [base_handler.py:51] - ⚡️ Bolt app is running!
2025-05-13 12:20:48,972 - slack_bolt.App - INFO - [client.py:266] - Starting to receive messages from a new connection (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab)
2025-05-13 12:20:48,985 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-12","build_number":117,"approximate_connection_time":18060},"connection_info":{"app_id":"A08SQGEHMSL"}})
2025-05-13 12:20:48,985 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:20:48,985 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:20:49,004 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-05-13 12:20:49,016 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-05-13 12:21:21,740 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"71813236-b35a-4315-81ab-694f160120b7","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","team_domain":"cell-logs","channel_id":"C08RN80PTP1","channel_name":"all-cell-logs","user_id":"U08RN80KECX","user_name":"emmanuel.kipngetich","command":"\/lokilens","text":"what happened to this  transaction  672375962477797376 on February 2, 2025 at 23:29","api_app_id":"A08SQGEHMSL","is_enterprise_install":"false","response_url":"https:\/\/hooks.slack.com\/commands\/T08RN80K1N3\/8891617831828\/NwmQPsXQRPcQG3XNlqhHcorB","trigger_id":"8891617894900.8872272647751.f21053ddeb9e611448886fddb9dcde65"},"type":"slash_commands","accepts_response_payload":true})
2025-05-13 12:21:21,754 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:21:21,759 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:21:21,772 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: slash_commands, envelope_id: 71813236-b35a-4315-81ab-694f160120b7)
2025-05-13 12:21:21,781 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:21:21,792 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:21:21,805 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:21:21,813 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:21:21,820 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 12:21:21,827 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 12:21:21,840 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 12:21:21,854 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 12:21:21,860 - slack_bolt.App - DEBUG - [app.py:612] - Running listener: handle_lokilens_command ...
2025-05-13 12:21:21,874 - slack - INFO - [slack_app.py:280] - Received /lokilens command: {'token': 'K4ZhpQOf4Bh1W7IgNZugkX3V', 'team_id': 'T08RN80K1N3', 'team_domain': 'cell-logs', 'channel_id': 'C08RN80PTP1', 'channel_name': 'all-cell-logs', 'user_id': 'U08RN80KECX', 'user_name': 'emmanuel.kipngetich', 'command': '/lokilens', 'text': 'what happened to this  transaction  672375962477797376 on February 2, 2025 at 23:29', 'api_app_id': 'A08SQGEHMSL', 'is_enterprise_install': 'false', 'response_url': 'https://hooks.slack.com/commands/T08RN80K1N3/8891617831828/NwmQPsXQRPcQG3XNlqhHcorB', 'trigger_id': '8891617894900.8872272647751.f21053ddeb9e611448886fddb9dcde65'}
2025-05-13 12:21:21,887 - slack - DEBUG - [slack_app.py:285] - Command text: what happened to this  transaction  672375962477797376 on February 2, 2025 at 23:29
2025-05-13 12:21:21,894 - slack_bolt.App - DEBUG - [thread_runner.py:202] - Responding with status: 200 body: "" (20 millis)
2025-05-13 12:21:21,900 - slack - INFO - [slack_app.py:294] - Starting natural language parsing
2025-05-13 12:21:21,919 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab, message: {"envelope_id": "71813236-b35a-4315-81ab-694f160120b7"})
2025-05-13 12:21:21,937 - slack - INFO - [slack_app.py:141] - Parsing natural language input: what happened to this  transaction  672375962477797376 on February 2, 2025 at 23:29
2025-05-13 12:21:21,962 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 181 milliseconds
2025-05-13 12:21:21,975 - slack - DEBUG - [slack_app.py:167] - Sending request to OpenAI for parsing
2025-05-13 12:21:21,982 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: slash_commands, envelope_id: 71813236-b35a-4315-81ab-694f160120b7)
2025-05-13 12:21:26,893 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c3330eb5-625e-47ec-8024-91cb32717480', 'json_data': {'messages': [{'role': 'user', 'content': "\n    Parse the following text into a search ID and a time range.\n    The time range should be in the format YYYYMMDDHHMM (e.g., 202205130933 for May 13, 2022 at 09:33).\n    If the time is not specified, use the current time.\n    If the date is not specified, use today's date.\n    \n    Text: what happened to this  transaction  672375962477797376 on February 2, 2025 at 23:29\n    \n    Return ONLY the search ID and time range in this exact format:\n    search_id: <id>\n    time_range: <YYYYMMDDHHMM>\n    \n    Do not include any other text or explanation.\n    "}], 'model': 'gpt-4', 'max_tokens': 100}}
2025-05-13 12:21:27,019 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 12:21:27,026 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-13 12:21:27,072 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x115c9f230>
2025-05-13 12:21:27,085 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x1145feb10> server_hostname='api.openai.com' timeout=5.0
2025-05-13 12:21:27,144 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116ac25d0>
2025-05-13 12:21:27,150 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 12:21:27,169 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 12:21:27,170 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 12:21:27,182 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 12:21:27,182 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 12:21:29,550 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 09:21:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'1676'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1683'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9858'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'852ms'), (b'x-request-id', b'req_b2a4ac8ef5dbe7491ce41ba47fe7f406'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=T5Ti6WTu_hNEcicDwhzFW3sJjx8NTAJIsDSbdkNtCRs-1747128089-1.0.1.1-G6y6Flyt6B5On8Qha06C7l6tpio5pXUMd2mlMSwpEaLfv3LJkHyndA4cuUSqB98KlGxH47_g2325piBOW8PbUeSdLYNjRhIcLziV9.eiw60; path=/; expires=Tue, 13-May-25 09:51:29 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=mXwol6WuM82oupc0FYoLCqsUJJFXdL.7fOWSA_80xdc-1747128089679-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f115f1cc1b8a65-MBA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 12:21:29,558 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 12:21:29,558 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 12:21:29,571 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 12:21:29,571 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 12:21:29,577 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 12:21:29,583 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 13 May 2025 09:21:29 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-hhmri584teit9d0pqdaekcnd'), ('openai-processing-ms', '1676'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1683'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '10000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '9858'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '852ms'), ('x-request-id', 'req_b2a4ac8ef5dbe7491ce41ba47fe7f406'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=T5Ti6WTu_hNEcicDwhzFW3sJjx8NTAJIsDSbdkNtCRs-1747128089-1.0.1.1-G6y6Flyt6B5On8Qha06C7l6tpio5pXUMd2mlMSwpEaLfv3LJkHyndA4cuUSqB98KlGxH47_g2325piBOW8PbUeSdLYNjRhIcLziV9.eiw60; path=/; expires=Tue, 13-May-25 09:51:29 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=mXwol6WuM82oupc0FYoLCqsUJJFXdL.7fOWSA_80xdc-1747128089679-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '93f115f1cc1b8a65-MBA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-13 12:21:29,590 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_b2a4ac8ef5dbe7491ce41ba47fe7f406
2025-05-13 12:21:29,595 - slack - DEBUG - [slack_app.py:176] - Received parsing response: search_id: 672375962477797376
time_range: 202502022329
2025-05-13 12:21:29,595 - slack - INFO - [slack_app.py:185] - Successfully parsed input - search_id: 672375962477797376, time_range: 202502022329
2025-05-13 12:21:29,595 - slack - INFO - [slack_app.py:296] - Parsed input - search_id: 672375962477797376, time_range: 202502022329, is_followup: True
2025-05-13 12:21:29,596 - slack - INFO - [slack_app.py:308] - Searching logs using MCP client
2025-05-13 12:21:29,602 - mcp - INFO - [mcp_client.py:239] - Searching logs for ID: 672375962477797376 with time ranges: ['202502022329']
2025-05-13 12:21:29,634 - urllib3.connectionpool - DEBUG - [connectionpool.py:241] - Starting new HTTP connection (1): localhost:8000
2025-05-13 12:21:32,558 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - http://localhost:8000 "POST /api/search HTTP/1.1" 200 20802
2025-05-13 12:21:32,566 - slack - DEBUG - [slack_app.py:310] - MCP client response: {'search_id': '672375962477797376', 'time_ranges': ['202502022329'], 'results': {'checkout-request-service': [{'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}], 'checkout-payment-service': [{'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\"extraData\\":{\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}},\\"amount_paid\\":1591.0,\\"payment_option_transaction_id\\":\\"9d72720e-3682-428e-9dbd-b474683a9d76\\",\\"gateway_transaction_id\\":\\"672375962477797376\\",\\"currency_code\\":\\"KES\\",\\"country_code\\":\\"KEN\\",\\"account_number\\":\\"acc_3209028\\",\\"customer_name\\":\\"Customer\\",\\"payment_msisdn\\":254700000000,\\"payment_option_narration\\":\\"INV_6799f155a66887.86544965\\",\\"date_payment_received\\":\\"2025-01-29 12:42:06\\",\\"service_charge_amount\\":0.0,\\"service_code\\":\\"KQSBOX\\",\\"gateway_overall_status\\":139,\\"payment_option_code\\":\\"DTBKE-MB\\",\\"psedo_service_code\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}]}, 'total_results': 10}
2025-05-13 12:21:32,572 - slack - INFO - [slack_app.py:320] - Found 2 containers with logs
2025-05-13 12:21:32,572 - slack - INFO - [slack_app.py:65] - Cached search results for 672375962477797376_202502022329
2025-05-13 12:21:32,578 - slack - INFO - [slack_app.py:326] - Generating response
2025-05-13 12:21:32,578 - slack - INFO - [slack_app.py:86] - Generating response for search_id: 672375962477797376 (followup: False)
2025-05-13 12:21:32,585 - slack - DEBUG - [slack_app.py:93] - Formatting results for OpenAI prompt
2025-05-13 12:21:32,585 - slack - DEBUG - [slack_app.py:118] - Sending request to OpenAI
2025-05-13 12:21:32,586 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e444ca8c-fb82-4066-8d06-2cfdf5f90de5', 'json_data': {'messages': [{'role': 'user', 'content': '\n    I searched for logs with ID: 672375962477797376. Here are the results:\n    Container: checkout-request-service (2 matches)\n{\n  "container_name": "checkout-request-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\\t{\\"time\\":\\"2025-02-02T23:29:00.202066773Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-request-service-778b5dbb86-m9b8x\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"101d3d24-2784-46e4-9cf5-2ab4567d4764\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-request-service\\",\\"app.kubernetes.io/name\\":\\"checkout-request-service\\",\\"pod-template-hash\\":\\"778b5dbb86\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-request-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\",\\"prometheus.io/path\\":\\"/actuator/prometheus\\",\\"prometheus.io/port\\":\\"8080\\",\\"prometheus.io/scrape\\":\\"true\\"},\\"host\\":\\"ip-10-107-118-6.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-request-service\\",\\"docker_id\\":\\"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-request-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\\t{\\"time\\":\\"2025-02-02T23:29:00.202066773Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-request-service-778b5dbb86-m9b8x\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"101d3d24-2784-46e4-9cf5-2ab4567d4764\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-request-service\\",\\"app.kubernetes.io/name\\":\\"checkout-request-service\\",\\"pod-template-hash\\":\\"778b5dbb86\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-request-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\",\\"prometheus.io/path\\":\\"/actuator/prometheus\\",\\"prometheus.io/port\\":\\"8080\\",\\"prometheus.io/scrape\\":\\"true\\"},\\"host\\":\\"ip-10-107-118-6.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-request-service\\",\\"docker_id\\":\\"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\nContainer: checkout-payment-service (8 matches)\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.18618989Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\\\\\"extraData\\\\\\":{\\\\\\"115651388\\\\\\":{\\\\\\"hubID\\\\\\":0,\\\\\\"callbackUrl\\\\\\":\\\\\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\\\\\"}},\\\\\\"amount_paid\\\\\\":1591.0,\\\\\\"payment_option_transaction_id\\\\\\":\\\\\\"9d72720e-3682-428e-9dbd-b474683a9d76\\\\\\",\\\\\\"gateway_transaction_id\\\\\\":\\\\\\"672375962477797376\\\\\\",\\\\\\"currency_code\\\\\\":\\\\\\"KES\\\\\\",\\\\\\"country_code\\\\\\":\\\\\\"KEN\\\\\\",\\\\\\"account_number\\\\\\":\\\\\\"acc_3209028\\\\\\",\\\\\\"customer_name\\\\\\":\\\\\\"Customer\\\\\\",\\\\\\"payment_msisdn\\\\\\":254700000000,\\\\\\"payment_option_narration\\\\\\":\\\\\\"INV_6799f155a66887.86544965\\\\\\",\\\\\\"date_payment_received\\\\\\":\\\\\\"2025-01-29 12:42:06\\\\\\",\\\\\\"service_charge_amount\\\\\\":0.0,\\\\\\"service_code\\\\\\":\\\\\\"KQSBOX\\\\\\",\\\\\\"gateway_overall_status\\\\\\":139,\\\\\\"payment_option_code\\\\\\":\\\\\\"DTBKE-MB\\\\\\",\\\\\\"psedo_service_code\\\\\\":null}\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.187788894Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\\\\\"115651388\\\\\\":{\\\\\\"hubID\\\\\\":0,\\\\\\"callbackUrl\\\\\\":\\\\\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\\\\\"}})\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.205908023Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.212786936Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.220445314Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.228701396Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.228790144Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... \\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.231421227Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n\n    \n    Please provide:\n    1. A concise summary of what happened\n    2. Any errors or issues found\n    3. Suggested follow-up actions or questions\n    \n    If this is a follow-up question, focus on providing additional insights or analysis based on the existing logs.\n    '}], 'model': 'gpt-4', 'max_tokens': 500}}
2025-05-13 12:21:32,594 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 12:21:32,607 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 12:21:32,619 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 12:21:32,625 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 12:21:32,645 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 12:21:32,645 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 12:21:42,107 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 09:21:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'9137'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'9141'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'4690'), (b'x-ratelimit-reset-requests', b'12.192s'), (b'x-ratelimit-reset-tokens', b'31.86s'), (b'x-request-id', b'req_b2c767a0786f5e69c9b7645d6ffa6d78'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f11613dfd38a65-MBA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 12:21:42,121 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 12:21:42,129 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 12:21:42,161 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 12:21:42,174 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 12:21:42,186 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 12:21:42,206 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 09:21:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '9137', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '9141', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '4690', 'x-ratelimit-reset-requests': '12.192s', 'x-ratelimit-reset-tokens': '31.86s', 'x-request-id': 'req_b2c767a0786f5e69c9b7645d6ffa6d78', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f11613dfd38a65-MBA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 12:21:42,217 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_b2c767a0786f5e69c9b7645d6ffa6d78
2025-05-13 12:21:42,227 - slack - INFO - [slack_app.py:328] - Sending response to Slack
2025-05-13 12:21:42,240 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'C08RN80PTP1', 'text': '1. Summary:\nThe logs are related to transactions involving two container services named "checkout-request-service" and "checkout-payment-service". The services were handling a transaction with the ID 672375962477797376. The logs show activities such as finding an existing transaction in the checkout request service and receiving and processing payment in the checkout payment service.\n\n2. Errors or Issues:\nThere are no issues or errors in the logs from "checkout-request-service". However, there is an error in "checkout-payment-service". The error message "672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null" suggests that there was a problem saving the payment request.\n\n3. Suggested Follow-ups:\nThe checkout payment service\'s failure to save the payment request requires further investigation for potential underlying problems. You may want to examine the state of the data store where the payment request was being saved or look closer into the function related to saving the request. It may also be beneficial to look into the configuration of the checkout payment service or check if there are any network issues that could be contributing to the problem.\n\n💡 You can ask follow-up questions about these logs using the same search ID and time range.', 'team_id': 'T08RN80K1N3'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 12:21:43,203 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 09:21:43 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'fd3aab8925caae3d163bb45622b01273', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'commands,chat:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCMPJx_yEBKPjGuUcj_FiAAAEAc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '3454', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ifgefhum,envoy-edge-bom-kjqsqjia', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '270', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ujxu', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C08RN80PTP1","ts":"1747128103.080429","message":{"user":"U08SQGNTJU8","type":"message","ts":"1747128103.080429","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"1. Summary:\nThe logs are related to transactions involving two container services named \"checkout-request-service\" and \"checkout-payment-service\". The services were handling a transaction with the ID 672375962477797376. The logs show activities such as finding an existing transaction in the checkout request service and receiving and processing payment in the checkout payment service.\n\n2. Errors or Issues:\nThere are no issues or errors in the logs from \"checkout-request-service\". However, there is an error in \"checkout-payment-service\". The error message \"672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null\" suggests that there was a problem saving the payment request.\n\n3. Suggested Follow-ups:\nThe checkout payment service's failure to save the payment request requires further investigation for potential underlying problems. You may want to examine the state of the data store where the payment request was being saved or look closer into the function related to saving the request. It may also be beneficial to look into the configuration of the checkout payment service or check if there are any network issues that could be contributing to the problem.\n\n:bulb: You can ask follow-up questions about these logs using the same search ID and time range.","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","name":"Lokilens","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1747104773,"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"snj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1. Summary:\nThe logs are related to transactions involving two container services named \"checkout-request-service\" and \"checkout-payment-service\". The services were handling a transaction with the ID 672375962477797376. The logs show activities such as finding an existing transaction in the checkout request service and receiving and processing payment in the checkout payment service.\n\n2. Errors or Issues:\nThere are no issues or errors in the logs from \"checkout-request-service\". However, there is an error in \"checkout-payment-service\". The error message \"672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null\" suggests that there was a problem saving the payment request.\n\n3. Suggested Follow-ups:\nThe checkout payment service's failure to save the payment request requires further investigation for potential underlying problems. You may want to examine the state of the data store where the payment request was being saved or look closer into the function related to saving the request. It may also be beneficial to look into the configuration of the checkout payment service or check if there are any network issues that could be contributing to the problem.\n\n"},{"type":"emoji","name":"bulb","unicode":"1f4a1"},{"type":"text","text":" You can ask follow-up questions about these logs using the same search ID and time range."}]}]}]}}
2025-05-13 12:23:08,872 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"7d3048e5-5590-4ef0-9291-c702eb012c2b","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","team_domain":"cell-logs","channel_id":"C08RN80PTP1","channel_name":"all-cell-logs","user_id":"U08RN80KECX","user_name":"emmanuel.kipngetich","command":"\/lokilens","text":"where are the exact logs 672375962477797376 on February 2, 2025 at 23:29","api_app_id":"A08SQGEHMSL","is_enterprise_install":"false","response_url":"https:\/\/hooks.slack.com\/commands\/T08RN80K1N3\/8900750152417\/6MCV2anxrSmYqFKCxQhw6auw","trigger_id":"8900750152481.8872272647751.743268e9bce03d8d4b5418ab70f89fbb"},"type":"slash_commands","accepts_response_payload":true})
2025-05-13 12:23:08,880 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:23:08,886 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:23:08,887 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: slash_commands, envelope_id: 7d3048e5-5590-4ef0-9291-c702eb012c2b)
2025-05-13 12:23:08,889 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:23:08,895 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:23:08,907 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:23:08,907 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:23:08,907 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 12:23:08,907 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 12:23:08,912 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 12:23:08,919 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 12:23:08,932 - slack_bolt.App - DEBUG - [app.py:612] - Running listener: handle_lokilens_command ...
2025-05-13 12:23:08,952 - slack - INFO - [slack_app.py:280] - Received /lokilens command: {'token': 'K4ZhpQOf4Bh1W7IgNZugkX3V', 'team_id': 'T08RN80K1N3', 'team_domain': 'cell-logs', 'channel_id': 'C08RN80PTP1', 'channel_name': 'all-cell-logs', 'user_id': 'U08RN80KECX', 'user_name': 'emmanuel.kipngetich', 'command': '/lokilens', 'text': 'where are the exact logs 672375962477797376 on February 2, 2025 at 23:29', 'api_app_id': 'A08SQGEHMSL', 'is_enterprise_install': 'false', 'response_url': 'https://hooks.slack.com/commands/T08RN80K1N3/8900750152417/6MCV2anxrSmYqFKCxQhw6auw', 'trigger_id': '8900750152481.8872272647751.743268e9bce03d8d4b5418ab70f89fbb'}
2025-05-13 12:23:08,965 - slack - DEBUG - [slack_app.py:285] - Command text: where are the exact logs 672375962477797376 on February 2, 2025 at 23:29
2025-05-13 12:23:08,971 - slack_bolt.App - DEBUG - [thread_runner.py:202] - Responding with status: 200 body: "" (25 millis)
2025-05-13 12:23:08,978 - slack - INFO - [slack_app.py:294] - Starting natural language parsing
2025-05-13 12:23:08,996 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab, message: {"envelope_id": "7d3048e5-5590-4ef0-9291-c702eb012c2b"})
2025-05-13 12:23:09,015 - slack - INFO - [slack_app.py:141] - Parsing natural language input: where are the exact logs 672375962477797376 on February 2, 2025 at 23:29
2025-05-13 12:23:09,033 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 145 milliseconds
2025-05-13 12:23:09,033 - slack - DEBUG - [slack_app.py:167] - Sending request to OpenAI for parsing
2025-05-13 12:23:09,039 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: slash_commands, envelope_id: 7d3048e5-5590-4ef0-9291-c702eb012c2b)
2025-05-13 12:23:09,063 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e7d8c559-69fa-4be5-9704-c975bbb2187a', 'json_data': {'messages': [{'role': 'user', 'content': "\n    Parse the following text into a search ID and a time range.\n    The time range should be in the format YYYYMMDDHHMM (e.g., 202205130933 for May 13, 2022 at 09:33).\n    If the time is not specified, use the current time.\n    If the date is not specified, use today's date.\n    \n    Text: where are the exact logs 672375962477797376 on February 2, 2025 at 23:29\n    \n    Return ONLY the search ID and time range in this exact format:\n    search_id: <id>\n    time_range: <YYYYMMDDHHMM>\n    \n    Do not include any other text or explanation.\n    "}], 'model': 'gpt-4', 'max_tokens': 100}}
2025-05-13 12:23:09,064 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 12:23:09,071 - httpcore.connection - DEBUG - [_trace.py:47] - close.started
2025-05-13 12:23:09,093 - httpcore.connection - DEBUG - [_trace.py:47] - close.complete
2025-05-13 12:23:09,099 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-13 12:23:09,160 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116bf8b90>
2025-05-13 12:23:09,160 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x1145feb10> server_hostname='api.openai.com' timeout=5.0
2025-05-13 12:23:09,207 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x115c1e8b0>
2025-05-13 12:23:09,214 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 12:23:09,220 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 12:23:09,227 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 12:23:09,246 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 12:23:09,252 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 12:23:11,043 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 09:23:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'1053'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1059'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9861'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_31f4cf1e98e239c054ba30756be4529f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f1186f9850b199-NBO'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 12:23:11,056 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 12:23:11,063 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 12:23:11,064 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 12:23:11,064 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 12:23:11,064 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 12:23:11,075 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 09:23:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '1053', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1059', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9861', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '834ms', 'x-request-id': 'req_31f4cf1e98e239c054ba30756be4529f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f1186f9850b199-NBO', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 12:23:11,088 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_31f4cf1e98e239c054ba30756be4529f
2025-05-13 12:23:11,092 - slack - DEBUG - [slack_app.py:176] - Received parsing response: search_id: 672375962477797376
time_range: 202502022329
2025-05-13 12:23:11,092 - slack - INFO - [slack_app.py:185] - Successfully parsed input - search_id: 672375962477797376, time_range: 202502022329
2025-05-13 12:23:11,092 - slack - INFO - [slack_app.py:296] - Parsed input - search_id: 672375962477797376, time_range: 202502022329, is_followup: False
2025-05-13 12:23:11,098 - slack - INFO - [slack_app.py:308] - Searching logs using MCP client
2025-05-13 12:23:11,104 - mcp - INFO - [mcp_client.py:239] - Searching logs for ID: 672375962477797376 with time ranges: ['202502022329']
2025-05-13 12:23:11,123 - urllib3.connectionpool - DEBUG - [connectionpool.py:241] - Starting new HTTP connection (1): localhost:8000
2025-05-13 12:23:13,865 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - http://localhost:8000 "POST /api/search HTTP/1.1" 200 20802
2025-05-13 12:23:13,879 - slack - DEBUG - [slack_app.py:310] - MCP client response: {'search_id': '672375962477797376', 'time_ranges': ['202502022329'], 'results': {'checkout-request-service': [{'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}], 'checkout-payment-service': [{'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\"extraData\\":{\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}},\\"amount_paid\\":1591.0,\\"payment_option_transaction_id\\":\\"9d72720e-3682-428e-9dbd-b474683a9d76\\",\\"gateway_transaction_id\\":\\"672375962477797376\\",\\"currency_code\\":\\"KES\\",\\"country_code\\":\\"KEN\\",\\"account_number\\":\\"acc_3209028\\",\\"customer_name\\":\\"Customer\\",\\"payment_msisdn\\":254700000000,\\"payment_option_narration\\":\\"INV_6799f155a66887.86544965\\",\\"date_payment_received\\":\\"2025-01-29 12:42:06\\",\\"service_charge_amount\\":0.0,\\"service_code\\":\\"KQSBOX\\",\\"gateway_overall_status\\":139,\\"payment_option_code\\":\\"DTBKE-MB\\",\\"psedo_service_code\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}]}, 'total_results': 10}
2025-05-13 12:23:13,891 - slack - INFO - [slack_app.py:320] - Found 2 containers with logs
2025-05-13 12:23:13,898 - slack - INFO - [slack_app.py:65] - Cached search results for 672375962477797376_202502022329
2025-05-13 12:23:13,898 - slack - INFO - [slack_app.py:326] - Generating response
2025-05-13 12:23:13,898 - slack - INFO - [slack_app.py:86] - Generating response for search_id: 672375962477797376 (followup: False)
2025-05-13 12:23:13,898 - slack - DEBUG - [slack_app.py:93] - Formatting results for OpenAI prompt
2025-05-13 12:23:13,905 - slack - DEBUG - [slack_app.py:118] - Sending request to OpenAI
2025-05-13 12:23:13,919 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a334714b-4a39-4e60-9c2f-c71f894e3f3f', 'json_data': {'messages': [{'role': 'user', 'content': '\n    I searched for logs with ID: 672375962477797376. Here are the results:\n    Container: checkout-request-service (2 matches)\n{\n  "container_name": "checkout-request-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\\t{\\"time\\":\\"2025-02-02T23:29:00.202066773Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-request-service-778b5dbb86-m9b8x\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"101d3d24-2784-46e4-9cf5-2ab4567d4764\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-request-service\\",\\"app.kubernetes.io/name\\":\\"checkout-request-service\\",\\"pod-template-hash\\":\\"778b5dbb86\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-request-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\",\\"prometheus.io/path\\":\\"/actuator/prometheus\\",\\"prometheus.io/port\\":\\"8080\\",\\"prometheus.io/scrape\\":\\"true\\"},\\"host\\":\\"ip-10-107-118-6.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-request-service\\",\\"docker_id\\":\\"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-request-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\\t{\\"time\\":\\"2025-02-02T23:29:00.202066773Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-request-service-778b5dbb86-m9b8x\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"101d3d24-2784-46e4-9cf5-2ab4567d4764\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-request-service\\",\\"app.kubernetes.io/name\\":\\"checkout-request-service\\",\\"pod-template-hash\\":\\"778b5dbb86\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-request-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\",\\"prometheus.io/path\\":\\"/actuator/prometheus\\",\\"prometheus.io/port\\":\\"8080\\",\\"prometheus.io/scrape\\":\\"true\\"},\\"host\\":\\"ip-10-107-118-6.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-request-service\\",\\"docker_id\\":\\"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\nContainer: checkout-payment-service (8 matches)\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.18618989Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\\\\\"extraData\\\\\\":{\\\\\\"115651388\\\\\\":{\\\\\\"hubID\\\\\\":0,\\\\\\"callbackUrl\\\\\\":\\\\\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\\\\\"}},\\\\\\"amount_paid\\\\\\":1591.0,\\\\\\"payment_option_transaction_id\\\\\\":\\\\\\"9d72720e-3682-428e-9dbd-b474683a9d76\\\\\\",\\\\\\"gateway_transaction_id\\\\\\":\\\\\\"672375962477797376\\\\\\",\\\\\\"currency_code\\\\\\":\\\\\\"KES\\\\\\",\\\\\\"country_code\\\\\\":\\\\\\"KEN\\\\\\",\\\\\\"account_number\\\\\\":\\\\\\"acc_3209028\\\\\\",\\\\\\"customer_name\\\\\\":\\\\\\"Customer\\\\\\",\\\\\\"payment_msisdn\\\\\\":254700000000,\\\\\\"payment_option_narration\\\\\\":\\\\\\"INV_6799f155a66887.86544965\\\\\\",\\\\\\"date_payment_received\\\\\\":\\\\\\"2025-01-29 12:42:06\\\\\\",\\\\\\"service_charge_amount\\\\\\":0.0,\\\\\\"service_code\\\\\\":\\\\\\"KQSBOX\\\\\\",\\\\\\"gateway_overall_status\\\\\\":139,\\\\\\"payment_option_code\\\\\\":\\\\\\"DTBKE-MB\\\\\\",\\\\\\"psedo_service_code\\\\\\":null}\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.187788894Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\\\\\"115651388\\\\\\":{\\\\\\"hubID\\\\\\":0,\\\\\\"callbackUrl\\\\\\":\\\\\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\\\\\"}})\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.205908023Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.212786936Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.220445314Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.228701396Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.228790144Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... \\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.231421227Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n\n    \n    Please provide:\n    1. A concise summary of what happened\n    2. Any errors or issues found\n    3. Suggested follow-up actions or questions\n    \n    If this is a follow-up question, focus on providing additional insights or analysis based on the existing logs.\n    '}], 'model': 'gpt-4', 'max_tokens': 500}}
2025-05-13 12:23:13,933 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 12:23:13,946 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 12:23:13,959 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 12:23:13,966 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 12:23:13,978 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 12:23:13,984 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 12:23:27,275 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 09:23:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'12996'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'12998'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'4690'), (b'x-ratelimit-reset-requests', b'12.981s'), (b'x-ratelimit-reset-tokens', b'31.86s'), (b'x-request-id', b'req_ad206a14688429c8e88448480194cc89'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f1188d3af1b199-NBO'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 12:23:27,292 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 12:23:27,305 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 12:23:27,331 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 12:23:27,337 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 12:23:27,337 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 12:23:27,344 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 09:23:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '12996', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '12998', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '4690', 'x-ratelimit-reset-requests': '12.981s', 'x-ratelimit-reset-tokens': '31.86s', 'x-request-id': 'req_ad206a14688429c8e88448480194cc89', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f1188d3af1b199-NBO', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 12:23:27,350 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_ad206a14688429c8e88448480194cc89
2025-05-13 12:23:27,351 - slack - INFO - [slack_app.py:328] - Sending response to Slack
2025-05-13 12:23:27,352 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'C08RN80PTP1', 'text': '1. Summary of Events:\nThe logs presented hint at some transactions being processed by the `checkout-request-service` and `checkout-payment-service`. These transactions are specifically tied to the `gatewayTransactionId=672375962477797376`. To begin with, the `checkout-request-service` is attempting to find a transaction based on this gateway transaction ID. Subsequently, the `checkout-payment-service` receives a payment payload and attempts to process it.\n\n2. Errors or Issues:\nThere\'s a repeating log message from `checkout-payment-service` "ServiceCode : KQSBOX - Request Successful". It may indicate a loop, retry mechanism, or an error in logging. It appears 5 times within a second. It could also indicate that the same transaction was processed (or attempt to process) multiple times erroneously. Finally, there is an error message: "Error while saving the payment request: null" which indicates a failure in saving the payment request.\n\n3. Suggested Follow-up Actions:\nInvestigate further why the same transaction is being processed multiple times. Verify if this is an intended behavior (e.g., due to a built-in retry mechanism) or an issue with the service. Identify why there was an error in saving the payment request. Is it a database issue, a network issue, or related to the transaction data itself? Starting from these points, we should be able to gather more information and zero down on the issue. Also, confirm that the logging level is correctly set, as this may influence how many log entries we see and might explain the repeated messages.\n\n💡 You can ask follow-up questions about these logs using the same search ID and time range.', 'team_id': 'T08RN80K1N3'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 12:23:28,238 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 09:23:28 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '19adbe1af7a4b6676baad4d3af4bb78e', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'commands,chat:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCMPkBThew5PpQkhw507yQAAADA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '4602', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ajalgzac,envoy-edge-bom-nazhddlb', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '274', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-iegb', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C08RN80PTP1","ts":"1747128208.118489","message":{"user":"U08SQGNTJU8","type":"message","ts":"1747128208.118489","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"1. Summary of Events:\nThe logs presented hint at some transactions being processed by the `checkout-request-service` and `checkout-payment-service`. These transactions are specifically tied to the `gatewayTransactionId=672375962477797376`. To begin with, the `checkout-request-service` is attempting to find a transaction based on this gateway transaction ID. Subsequently, the `checkout-payment-service` receives a payment payload and attempts to process it.\n\n2. Errors or Issues:\nThere's a repeating log message from `checkout-payment-service` \"ServiceCode : KQSBOX - Request Successful\". It may indicate a loop, retry mechanism, or an error in logging. It appears 5 times within a second. It could also indicate that the same transaction was processed (or attempt to process) multiple times erroneously. Finally, there is an error message: \"Error while saving the payment request: null\" which indicates a failure in saving the payment request.\n\n3. Suggested Follow-up Actions:\nInvestigate further why the same transaction is being processed multiple times. Verify if this is an intended behavior (e.g., due to a built-in retry mechanism) or an issue with the service. Identify why there was an error in saving the payment request. Is it a database issue, a network issue, or related to the transaction data itself? Starting from these points, we should be able to gather more information and zero down on the issue. Also, confirm that the logging level is correctly set, as this may influence how many log entries we see and might explain the repeated messages.\n\n:bulb: You can ask follow-up questions about these logs using the same search ID and time range.","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","name":"Lokilens","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1747104773,"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"A4V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1. Summary of Events:\nThe logs presented hint at some transactions being processed by the "},{"type":"text","text":"checkout-request-service","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"checkout-payment-service","style":{"code":true}},{"type":"text","text":". These transactions are specifically tied to the "},{"type":"text","text":"gatewayTransactionId=672375962477797376","style":{"code":true}},{"type":"text","text":". To begin with, the "},{"type":"text","text":"checkout-request-service","style":{"code":true}},{"type":"text","text":" is attempting to find a transaction based on this gateway transaction ID. Subsequently, the "},{"type":"text","text":"checkout-payment-service","style":{"code":true}},{"type":"text","text":" receives a payment payload and attempts to process it.\n\n2. Errors or Issues:\nThere's a repeating log message from "},{"type":"text","text":"checkout-payment-service","style":{"code":true}},{"type":"text","text":" \"ServiceCode : KQSBOX - Request Successful\". It may indicate a loop, retry mechanism, or an error in logging. It appears 5 times within a second. It could also indicate that the same transaction was processed (or attempt to process) multiple times erroneously. Finally, there is an error message: \"Error while saving the payment request: null\" which indicates a failure in saving the payment request.\n\n3. Suggested Follow-up Actions:\nInvestigate further why the same transaction is being processed multiple times. Verify if this is an intended behavior (e.g., due to a built-in retry mechanism) or an issue with the service. Identify why there was an error in saving the payment request. Is it a database issue, a network issue, or related to the transaction data itself? Starting from these points, we should be able to gather more information and zero down on the issue. Also, confirm that the logging level is correctly set, as this may influence how many log entries we see and might explain the repeated messages.\n\n"},{"type":"emoji","name":"bulb","unicode":"1f4a1"},{"type":"text","text":" You can ask follow-up questions about these logs using the same search ID and time range."}]}]}]}}
2025-05-13 12:30:48,536 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"9282e635-878c-46d0-8ec2-86190f4b725d","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","context_team_id":"T08RN80K1N3","context_enterprise_id":null,"api_app_id":"A08SQGEHMSL","event":{"user":"U08RN80KECX","type":"message","ts":"1747128647.622069","client_msg_id":"ecc76544-c448-4677-9e95-c45dd8034922","text":"can i get the exact logs without any filter","team":"T08RN80K1N3","blocks":[{"type":"rich_text","block_id":"OzW4Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can i get the exact logs without any filter"}]}]}],"channel":"C08RN80PTP1","event_ts":"1747128647.622069","channel_type":"channel"},"type":"event_callback","event_id":"Ev08S68F8N4A","event_time":1747128647,"authorizations":[{"enterprise_id":null,"team_id":"T08RN80K1N3","user_id":"U08SQGNTJU8","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDhSTjgwSzFOMyIsImFpZCI6IkEwOFNRR0VITVNMIiwiY2lkIjoiQzA4Uk44MFBUUDEifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-05-13 12:30:48,561 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:30:48,568 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:30:48,572 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 9282e635-878c-46d0-8ec2-86190f4b725d)
2025-05-13 12:30:48,587 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:30:48,599 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:30:48,605 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:30:48,619 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:30:48,626 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 12:30:48,632 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 12:30:48,638 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 12:30:48,651 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 12:30:48,665 - slack_bolt.App - WARNING - [app.py:648] - Unhandled request ({'type': 'event_callback', 'event': {'type': 'message'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

2025-05-13 12:30:48,672 - slack_bolt.App - INFO - [internals.py:44] - Unsuccessful Bolt execution result (status: 404, body: {"error": "unhandled request"})
2025-05-13 12:30:48,685 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 9282e635-878c-46d0-8ec2-86190f4b725d)
2025-05-13 12:30:52,240 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"3bbc6b86-a644-4204-b1dc-ec9233641d7e","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","context_team_id":"T08RN80K1N3","context_enterprise_id":null,"api_app_id":"A08SQGEHMSL","event":{"user":"U08RN80KECX","type":"message","ts":"1747128647.622069","client_msg_id":"ecc76544-c448-4677-9e95-c45dd8034922","text":"can i get the exact logs without any filter","team":"T08RN80K1N3","blocks":[{"type":"rich_text","block_id":"OzW4Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can i get the exact logs without any filter"}]}]}],"channel":"C08RN80PTP1","event_ts":"1747128647.622069","channel_type":"channel"},"type":"event_callback","event_id":"Ev08S68F8N4A","event_time":1747128647,"authorizations":[{"enterprise_id":null,"team_id":"T08RN80K1N3","user_id":"U08SQGNTJU8","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDhSTjgwSzFOMyIsImFpZCI6IkEwOFNRR0VITVNMIiwiY2lkIjoiQzA4Uk44MFBUUDEifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":1,"retry_reason":"timeout"})
2025-05-13 12:30:52,247 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:30:52,254 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:30:52,286 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 3bbc6b86-a644-4204-b1dc-ec9233641d7e)
2025-05-13 12:30:52,293 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:30:52,293 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:30:52,293 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:30:52,298 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:30:52,298 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 12:30:52,298 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 12:30:52,298 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 12:30:52,299 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 12:30:52,299 - slack_bolt.App - WARNING - [app.py:648] - Unhandled request ({'type': 'event_callback', 'event': {'type': 'message'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

2025-05-13 12:30:52,304 - slack_bolt.App - INFO - [internals.py:44] - Unsuccessful Bolt execution result (status: 404, body: {"error": "unhandled request"})
2025-05-13 12:30:52,311 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 3bbc6b86-a644-4204-b1dc-ec9233641d7e)
2025-05-13 12:30:55,624 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"f3b12020-17e7-453e-a2d0-bf72c15b86a8","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","team_domain":"cell-logs","channel_id":"C08RN80PTP1","channel_name":"all-cell-logs","user_id":"U08RN80KECX","user_name":"emmanuel.kipngetich","command":"\/lokilens","text":"can i get the exact logs without any filter","api_app_id":"A08SQGEHMSL","is_enterprise_install":"false","response_url":"https:\/\/hooks.slack.com\/commands\/T08RN80K1N3\/8900793107313\/hu5UCHDc9YWN0mTixSAVwV8s","trigger_id":"8900793141313.8872272647751.11d726b7fd32858de8fbb27ce1955d69"},"type":"slash_commands","accepts_response_payload":true})
2025-05-13 12:30:55,631 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:30:55,637 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:30:55,637 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: slash_commands, envelope_id: f3b12020-17e7-453e-a2d0-bf72c15b86a8)
2025-05-13 12:30:55,637 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:30:55,644 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:30:55,644 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:30:55,644 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:30:55,644 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 12:30:55,644 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 12:30:55,644 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 12:30:55,644 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 12:30:55,644 - slack_bolt.App - DEBUG - [app.py:612] - Running listener: handle_lokilens_command ...
2025-05-13 12:30:55,656 - slack - INFO - [slack_app.py:280] - Received /lokilens command: {'token': 'K4ZhpQOf4Bh1W7IgNZugkX3V', 'team_id': 'T08RN80K1N3', 'team_domain': 'cell-logs', 'channel_id': 'C08RN80PTP1', 'channel_name': 'all-cell-logs', 'user_id': 'U08RN80KECX', 'user_name': 'emmanuel.kipngetich', 'command': '/lokilens', 'text': 'can i get the exact logs without any filter', 'api_app_id': 'A08SQGEHMSL', 'is_enterprise_install': 'false', 'response_url': 'https://hooks.slack.com/commands/T08RN80K1N3/8900793107313/hu5UCHDc9YWN0mTixSAVwV8s', 'trigger_id': '8900793141313.8872272647751.11d726b7fd32858de8fbb27ce1955d69'}
2025-05-13 12:30:55,663 - slack - DEBUG - [slack_app.py:285] - Command text: can i get the exact logs without any filter
2025-05-13 12:30:55,675 - slack_bolt.App - DEBUG - [thread_runner.py:202] - Responding with status: 200 body: "" (25 millis)
2025-05-13 12:30:55,676 - slack - INFO - [slack_app.py:294] - Starting natural language parsing
2025-05-13 12:30:55,688 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab, message: {"envelope_id": "f3b12020-17e7-453e-a2d0-bf72c15b86a8"})
2025-05-13 12:30:55,707 - slack - INFO - [slack_app.py:141] - Parsing natural language input: can i get the exact logs without any filter
2025-05-13 12:30:55,729 - slack - DEBUG - [slack_app.py:167] - Sending request to OpenAI for parsing
2025-05-13 12:30:55,742 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 105 milliseconds
2025-05-13 12:30:55,748 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-73a64bd6-01fd-4782-954a-ba5681ba1690', 'json_data': {'messages': [{'role': 'user', 'content': "\n    Parse the following text into a search ID and a time range.\n    The time range should be in the format YYYYMMDDHHMM (e.g., 202205130933 for May 13, 2022 at 09:33).\n    If the time is not specified, use the current time.\n    If the date is not specified, use today's date.\n    \n    Text: can i get the exact logs without any filter\n    \n    Return ONLY the search ID and time range in this exact format:\n    search_id: <id>\n    time_range: <YYYYMMDDHHMM>\n    \n    Do not include any other text or explanation.\n    "}], 'model': 'gpt-4', 'max_tokens': 100}}
2025-05-13 12:30:55,755 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: slash_commands, envelope_id: f3b12020-17e7-453e-a2d0-bf72c15b86a8)
2025-05-13 12:30:55,770 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 12:30:55,796 - httpcore.connection - DEBUG - [_trace.py:47] - close.started
2025-05-13 12:30:55,815 - httpcore.connection - DEBUG - [_trace.py:47] - close.complete
2025-05-13 12:30:55,815 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-13 12:30:55,865 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116c00d60>
2025-05-13 12:30:55,871 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x1145feb10> server_hostname='api.openai.com' timeout=5.0
2025-05-13 12:30:55,914 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116b09d90>
2025-05-13 12:30:55,915 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 12:30:55,934 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 12:30:55,940 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 12:30:55,958 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 12:30:55,971 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 12:30:57,599 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 09:30:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'777'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'782'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9868'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_3c988240d1747030876b5ed220a47d94'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f123d4ade71b5a-NBO'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 12:30:57,612 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 12:30:57,625 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 12:30:57,638 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 12:30:57,638 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 12:30:57,638 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 12:30:57,645 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 09:30:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '777', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '782', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9868', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '792ms', 'x-request-id': 'req_3c988240d1747030876b5ed220a47d94', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f123d4ade71b5a-NBO', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 12:30:57,657 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_3c988240d1747030876b5ed220a47d94
2025-05-13 12:30:57,665 - slack - DEBUG - [slack_app.py:176] - Received parsing response: The text provided does not contain any search ID or time range.
2025-05-13 12:30:57,674 - slack - ERROR - [slack_app.py:216] - Error parsing natural language input: Could not parse the input into a search ID and time range
2025-05-13 12:30:57,681 - slack - ERROR - [slack_app.py:332] - Error processing command: Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'
Traceback (most recent call last):
  File "/Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/app/slack/slack_app.py", line 213, in parse_natural_language_input
    raise ValueError("Could not parse the input into a search ID and time range")
ValueError: Could not parse the input into a search ID and time range

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/app/slack/slack_app.py", line 295, in handle_lokilens_command
    ack(f"Searching logs for: {command_text}")
                                         ^^^^^
  File "/Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/app/slack/slack_app.py", line 217, in parse_natural_language_input
    raise ValueError(f"Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'")
ValueError: Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'
2025-05-13 12:30:57,777 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'C08RN80PTP1', 'text': "Error processing command: Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'", 'team_id': 'T08RN80K1N3'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 12:30:58,450 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 09:30:58 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '314795b29c6d05c9c3e9f3be02ce4db9', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'commands,chat:write,channels:history,groups:history,im:history', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCMRUhPvmD2sYurTvZTRgwAAACE', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '1031', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ztfnaecp,envoy-edge-cpt-zextrpsm', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '325', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-ahgo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C08RN80PTP1","ts":"1747128658.412719","message":{"user":"U08SQGNTJU8","type":"message","ts":"1747128658.412719","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"Error processing command: Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","name":"Lokilens","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1747104773,"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"j0x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Error processing command: Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'"}]}]}]}}
2025-05-13 12:30:59,060 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"1e256583-bb83-4c3d-998e-8083df1c9ebf","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","context_team_id":"T08RN80K1N3","context_enterprise_id":null,"api_app_id":"A08SQGEHMSL","event":{"user":"U08SQGNTJU8","type":"message","ts":"1747128658.412719","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"Error processing command: Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","deleted":false,"name":"Lokilens","updated":1747104773,"app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"aDsr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Error processing command: Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'"}]}]}],"channel":"C08RN80PTP1","event_ts":"1747128658.412719","channel_type":"channel"},"type":"event_callback","event_id":"Ev08RPTW2H39","event_time":1747128658,"authorizations":[{"enterprise_id":null,"team_id":"T08RN80K1N3","user_id":"U08SQGNTJU8","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDhSTjgwSzFOMyIsImFpZCI6IkEwOFNRR0VITVNMIiwiY2lkIjoiQzA4Uk44MFBUUDEifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-05-13 12:30:59,073 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:30:59,079 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:30:59,092 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 1e256583-bb83-4c3d-998e-8083df1c9ebf)
2025-05-13 12:30:59,098 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:30:59,105 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:30:59,118 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:30:59,124 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:30:59,130 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:71] - Skipped self event: {'user': 'U08SQGNTJU8', 'type': 'message', 'ts': '1747128658.412719', 'bot_id': 'B08SQGNSACQ', 'app_id': 'A08SQGEHMSL', 'text': "Error processing command: Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'", 'team': 'T08RN80K1N3', 'bot_profile': {'id': 'B08SQGNSACQ', 'deleted': False, 'name': 'Lokilens', 'updated': 1747104773, 'app_id': 'A08SQGEHMSL', 'user_id': 'U08SQGNTJU8', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T08RN80K1N3'}, 'blocks': [{'type': 'rich_text', 'block_id': 'aDsr', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': "Error processing command: Could not understand the input. Please try again with a clearer format. Example: '12345 happened yesterday at 3pm'"}]}]}], 'channel': 'C08RN80PTP1', 'event_ts': '1747128658.412719', 'channel_type': 'channel'}
2025-05-13 12:30:59,143 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab, message: {"envelope_id": "1e256583-bb83-4c3d-998e-8083df1c9ebf"})
2025-05-13 12:30:59,162 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 64 milliseconds
2025-05-13 12:30:59,169 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 1e256583-bb83-4c3d-998e-8083df1c9ebf)
2025-05-13 12:31:36,889 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"ee3773b3-7f3e-4959-b09c-c1c1f691a375","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","team_domain":"cell-logs","channel_id":"C08RN80PTP1","channel_name":"all-cell-logs","user_id":"U08RN80KECX","user_name":"emmanuel.kipngetich","command":"\/lokilens","text":"can i get the exact logs without any filter  for this 672375962477797376","api_app_id":"A08SQGEHMSL","is_enterprise_install":"false","response_url":"https:\/\/hooks.slack.com\/commands\/T08RN80K1N3\/8890290555314\/pozj1T7TWAJdGdI6unnZZO15","trigger_id":"8890290555522.8872272647751.a6fbc2dc5d723f36572e98baf0340d7b"},"type":"slash_commands","accepts_response_payload":true})
2025-05-13 12:31:36,896 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:31:36,902 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:31:36,908 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: slash_commands, envelope_id: ee3773b3-7f3e-4959-b09c-c1c1f691a375)
2025-05-13 12:31:36,921 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:31:36,928 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:31:36,934 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:31:36,935 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:31:36,935 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 12:31:36,935 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 12:31:36,935 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 12:31:36,941 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 12:31:36,947 - slack_bolt.App - DEBUG - [app.py:612] - Running listener: handle_lokilens_command ...
2025-05-13 12:31:36,973 - slack - INFO - [slack_app.py:280] - Received /lokilens command: {'token': 'K4ZhpQOf4Bh1W7IgNZugkX3V', 'team_id': 'T08RN80K1N3', 'team_domain': 'cell-logs', 'channel_id': 'C08RN80PTP1', 'channel_name': 'all-cell-logs', 'user_id': 'U08RN80KECX', 'user_name': 'emmanuel.kipngetich', 'command': '/lokilens', 'text': 'can i get the exact logs without any filter  for this 672375962477797376', 'api_app_id': 'A08SQGEHMSL', 'is_enterprise_install': 'false', 'response_url': 'https://hooks.slack.com/commands/T08RN80K1N3/8890290555314/pozj1T7TWAJdGdI6unnZZO15', 'trigger_id': '8890290555522.8872272647751.a6fbc2dc5d723f36572e98baf0340d7b'}
2025-05-13 12:31:36,979 - slack - DEBUG - [slack_app.py:285] - Command text: can i get the exact logs without any filter  for this 672375962477797376
2025-05-13 12:31:36,979 - slack - INFO - [slack_app.py:294] - Starting natural language parsing
2025-05-13 12:31:36,985 - slack_bolt.App - DEBUG - [thread_runner.py:202] - Responding with status: 200 body: "" (25 millis)
2025-05-13 12:31:36,991 - slack - INFO - [slack_app.py:141] - Parsing natural language input: can i get the exact logs without any filter  for this 672375962477797376
2025-05-13 12:31:36,991 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab, message: {"envelope_id": "ee3773b3-7f3e-4959-b09c-c1c1f691a375"})
2025-05-13 12:31:36,997 - slack - DEBUG - [slack_app.py:167] - Sending request to OpenAI for parsing
2025-05-13 12:31:37,020 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7a92ea0a-bcfd-4a0a-92b2-3b4e5d0a27eb', 'json_data': {'messages': [{'role': 'user', 'content': "\n    Parse the following text into a search ID and a time range.\n    The time range should be in the format YYYYMMDDHHMM (e.g., 202205130933 for May 13, 2022 at 09:33).\n    If the time is not specified, use the current time.\n    If the date is not specified, use today's date.\n    \n    Text: can i get the exact logs without any filter  for this 672375962477797376\n    \n    Return ONLY the search ID and time range in this exact format:\n    search_id: <id>\n    time_range: <YYYYMMDDHHMM>\n    \n    Do not include any other text or explanation.\n    "}], 'model': 'gpt-4', 'max_tokens': 100}}
2025-05-13 12:31:37,020 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 99 milliseconds
2025-05-13 12:31:37,040 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 12:31:37,052 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: slash_commands, envelope_id: ee3773b3-7f3e-4959-b09c-c1c1f691a375)
2025-05-13 12:31:37,083 - httpcore.connection - DEBUG - [_trace.py:47] - close.started
2025-05-13 12:31:37,089 - httpcore.connection - DEBUG - [_trace.py:47] - close.complete
2025-05-13 12:31:37,096 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-13 12:31:37,136 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116b86140>
2025-05-13 12:31:37,136 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x1145feb10> server_hostname='api.openai.com' timeout=5.0
2025-05-13 12:31:37,173 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116b85f20>
2025-05-13 12:31:37,173 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 12:31:37,179 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 12:31:37,179 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 12:31:37,185 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 12:31:37,192 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 12:31:38,930 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 09:31:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'1015'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1021'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9861'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_91c654b87b445b60b23cf57e0bfff324'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f124d67d32b199-NBO'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 12:31:38,942 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 12:31:38,942 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 12:31:38,948 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 12:31:38,948 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 12:31:38,955 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 12:31:38,967 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 09:31:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '1015', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1021', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9861', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '834ms', 'x-request-id': 'req_91c654b87b445b60b23cf57e0bfff324', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f124d67d32b199-NBO', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 12:31:38,974 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_91c654b87b445b60b23cf57e0bfff324
2025-05-13 12:31:38,982 - slack - DEBUG - [slack_app.py:176] - Received parsing response: search_id: 672375962477797376
time_range: N/A
2025-05-13 12:31:38,994 - slack - INFO - [slack_app.py:185] - Successfully parsed input - search_id: 672375962477797376, time_range: N/A
2025-05-13 12:31:39,007 - slack - INFO - [slack_app.py:296] - Parsed input - search_id: 672375962477797376, time_range: N/A, is_followup: False
2025-05-13 12:31:39,019 - slack - INFO - [slack_app.py:308] - Searching logs using MCP client
2025-05-13 12:31:39,031 - mcp - INFO - [mcp_client.py:239] - Searching logs for ID: 672375962477797376 with time ranges: ['N/A']
2025-05-13 12:31:39,066 - urllib3.connectionpool - DEBUG - [connectionpool.py:241] - Starting new HTTP connection (1): localhost:8000
2025-05-13 12:31:39,203 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - http://localhost:8000 "POST /api/search HTTP/1.1" 200 87
2025-05-13 12:31:39,216 - slack - DEBUG - [slack_app.py:310] - MCP client response: {'search_id': '672375962477797376', 'time_ranges': ['N/A'], 'results': {}, 'total_results': 0}
2025-05-13 12:31:39,222 - slack - INFO - [slack_app.py:320] - Found 0 containers with logs
2025-05-13 12:31:39,234 - slack - INFO - [slack_app.py:65] - Cached search results for 672375962477797376_N/A
2025-05-13 12:31:39,240 - slack - INFO - [slack_app.py:326] - Generating response
2025-05-13 12:31:39,247 - slack - INFO - [slack_app.py:86] - Generating response for search_id: 672375962477797376 (followup: False)
2025-05-13 12:31:39,253 - slack - WARNING - [slack_app.py:89] - No logs found for ID: 672375962477797376
2025-05-13 12:31:39,253 - slack - INFO - [slack_app.py:328] - Sending response to Slack
2025-05-13 12:31:39,254 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'C08RN80PTP1', 'text': 'No logs found for ID: 672375962477797376. Would you like to try another search?', 'team_id': 'T08RN80K1N3'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 12:31:40,132 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 09:31:40 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'ee3bfea795624fd31a8fec336e133e8a', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'commands,chat:write,channels:history,groups:history,im:history', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCMRe1jInurHzEreBhWIXQAAAB4', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '909', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-unzrupnw,envoy-edge-bom-njencnfd', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '280', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-prkt', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C08RN80PTP1","ts":"1747128700.021129","message":{"user":"U08SQGNTJU8","type":"message","ts":"1747128700.021129","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"No logs found for ID: 672375962477797376. Would you like to try another search?","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","name":"Lokilens","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1747104773,"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"sPL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No logs found for ID: 672375962477797376. Would you like to try another search?"}]}]}]}}
2025-05-13 12:31:41,754 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"127a3713-d616-4595-8b50-5a0e3f3e7ecd","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","context_team_id":"T08RN80K1N3","context_enterprise_id":null,"api_app_id":"A08SQGEHMSL","event":{"user":"U08SQGNTJU8","type":"message","ts":"1747128700.021129","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"No logs found for ID: 672375962477797376. Would you like to try another search?","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","deleted":false,"name":"Lokilens","updated":1747104773,"app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"gIdq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No logs found for ID: 672375962477797376. Would you like to try another search?"}]}]}],"channel":"C08RN80PTP1","event_ts":"1747128700.021129","channel_type":"channel"},"type":"event_callback","event_id":"Ev08S7KVQM28","event_time":1747128700,"authorizations":[{"enterprise_id":null,"team_id":"T08RN80K1N3","user_id":"U08SQGNTJU8","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDhSTjgwSzFOMyIsImFpZCI6IkEwOFNRR0VITVNMIiwiY2lkIjoiQzA4Uk44MFBUUDEifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-05-13 12:31:41,767 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:31:41,780 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:31:41,785 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 127a3713-d616-4595-8b50-5a0e3f3e7ecd)
2025-05-13 12:31:41,792 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:31:41,792 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:31:41,798 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:31:41,811 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:31:41,811 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:71] - Skipped self event: {'user': 'U08SQGNTJU8', 'type': 'message', 'ts': '1747128700.021129', 'bot_id': 'B08SQGNSACQ', 'app_id': 'A08SQGEHMSL', 'text': 'No logs found for ID: 672375962477797376. Would you like to try another search?', 'team': 'T08RN80K1N3', 'bot_profile': {'id': 'B08SQGNSACQ', 'deleted': False, 'name': 'Lokilens', 'updated': 1747104773, 'app_id': 'A08SQGEHMSL', 'user_id': 'U08SQGNTJU8', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T08RN80K1N3'}, 'blocks': [{'type': 'rich_text', 'block_id': 'gIdq', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': 'No logs found for ID: 672375962477797376. Would you like to try another search?'}]}]}], 'channel': 'C08RN80PTP1', 'event_ts': '1747128700.021129', 'channel_type': 'channel'}
2025-05-13 12:31:41,824 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab, message: {"envelope_id": "127a3713-d616-4595-8b50-5a0e3f3e7ecd"})
2025-05-13 12:31:41,836 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 44 milliseconds
2025-05-13 12:31:41,849 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 127a3713-d616-4595-8b50-5a0e3f3e7ecd)
2025-05-13 12:31:56,471 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"110cd192-2ecb-4a2a-9b15-e4648b24dc36","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","context_team_id":"T08RN80K1N3","context_enterprise_id":null,"api_app_id":"A08SQGEHMSL","event":{"user":"U08RN80KECX","type":"message","ts":"1747128647.622069","client_msg_id":"ecc76544-c448-4677-9e95-c45dd8034922","text":"can i get the exact logs without any filter","team":"T08RN80K1N3","blocks":[{"type":"rich_text","block_id":"OzW4Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can i get the exact logs without any filter"}]}]}],"channel":"C08RN80PTP1","event_ts":"1747128647.622069","channel_type":"channel"},"type":"event_callback","event_id":"Ev08S68F8N4A","event_time":1747128647,"authorizations":[{"enterprise_id":null,"team_id":"T08RN80K1N3","user_id":"U08SQGNTJU8","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDhSTjgwSzFOMyIsImFpZCI6IkEwOFNRR0VITVNMIiwiY2lkIjoiQzA4Uk44MFBUUDEifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":2,"retry_reason":"timeout"})
2025-05-13 12:31:56,485 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:31:56,491 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:31:56,492 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: 110cd192-2ecb-4a2a-9b15-e4648b24dc36)
2025-05-13 12:31:56,492 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:31:56,492 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:31:56,498 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:31:56,504 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:31:56,511 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 12:31:56,517 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 12:31:56,517 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 12:31:56,517 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 12:31:56,517 - slack_bolt.App - WARNING - [app.py:648] - Unhandled request ({'type': 'event_callback', 'event': {'type': 'message'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

2025-05-13 12:31:56,517 - slack_bolt.App - INFO - [internals.py:44] - Unsuccessful Bolt execution result (status: 404, body: {"error": "unhandled request"})
2025-05-13 12:31:56,524 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: 110cd192-2ecb-4a2a-9b15-e4648b24dc36)
2025-05-13 12:34:19,923 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"93aa7c61-43fa-49bd-8019-fc893321c3f5","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","team_domain":"cell-logs","channel_id":"C08RN80PTP1","channel_name":"all-cell-logs","user_id":"U08RN80KECX","user_name":"emmanuel.kipngetich","command":"\/lokilens","text":"can i get the more logs without any filter for this 672375962477797376 on n February 2, 2025 at 23:29","api_app_id":"A08SQGEHMSL","is_enterprise_install":"false","response_url":"https:\/\/hooks.slack.com\/commands\/T08RN80K1N3\/8910264406512\/SPXME5566S5nxjkRk6UghZmM","trigger_id":"8910264411760.8872272647751.781b87e1ce2daa3138ca7744b5554432"},"type":"slash_commands","accepts_response_payload":true})
2025-05-13 12:34:19,943 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:34:19,943 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:34:20,011 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: slash_commands, envelope_id: 93aa7c61-43fa-49bd-8019-fc893321c3f5)
2025-05-13 12:34:20,015 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:34:20,024 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:34:20,024 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:34:20,025 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:34:20,025 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 12:34:20,025 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 12:34:20,025 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 12:34:20,025 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 12:34:20,038 - slack_bolt.App - DEBUG - [app.py:612] - Running listener: handle_lokilens_command ...
2025-05-13 12:34:20,050 - slack - INFO - [slack_app.py:280] - Received /lokilens command: {'token': 'K4ZhpQOf4Bh1W7IgNZugkX3V', 'team_id': 'T08RN80K1N3', 'team_domain': 'cell-logs', 'channel_id': 'C08RN80PTP1', 'channel_name': 'all-cell-logs', 'user_id': 'U08RN80KECX', 'user_name': 'emmanuel.kipngetich', 'command': '/lokilens', 'text': 'can i get the more logs without any filter for this 672375962477797376 on n February 2, 2025 at 23:29', 'api_app_id': 'A08SQGEHMSL', 'is_enterprise_install': 'false', 'response_url': 'https://hooks.slack.com/commands/T08RN80K1N3/8910264406512/SPXME5566S5nxjkRk6UghZmM', 'trigger_id': '8910264411760.8872272647751.781b87e1ce2daa3138ca7744b5554432'}
2025-05-13 12:34:20,056 - slack - DEBUG - [slack_app.py:285] - Command text: can i get the more logs without any filter for this 672375962477797376 on n February 2, 2025 at 23:29
2025-05-13 12:34:20,056 - slack - INFO - [slack_app.py:294] - Starting natural language parsing
2025-05-13 12:34:20,056 - slack - INFO - [slack_app.py:141] - Parsing natural language input: can i get the more logs without any filter for this 672375962477797376 on n February 2, 2025 at 23:29
2025-05-13 12:34:20,063 - slack_bolt.App - DEBUG - [thread_runner.py:202] - Responding with status: 200 body: "" (13 millis)
2025-05-13 12:34:20,068 - slack - DEBUG - [slack_app.py:167] - Sending request to OpenAI for parsing
2025-05-13 12:34:20,086 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab, message: {"envelope_id": "93aa7c61-43fa-49bd-8019-fc893321c3f5"})
2025-05-13 12:34:20,101 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a841a713-47b9-4e16-bd77-e002e907b4e3', 'json_data': {'messages': [{'role': 'user', 'content': "\n    Parse the following text into a search ID and a time range.\n    The time range should be in the format YYYYMMDDHHMM (e.g., 202205130933 for May 13, 2022 at 09:33).\n    If the time is not specified, use the current time.\n    If the date is not specified, use today's date.\n    \n    Text: can i get the more logs without any filter for this 672375962477797376 on n February 2, 2025 at 23:29\n    \n    Return ONLY the search ID and time range in this exact format:\n    search_id: <id>\n    time_range: <YYYYMMDDHHMM>\n    \n    Do not include any other text or explanation.\n    "}], 'model': 'gpt-4', 'max_tokens': 100}}
2025-05-13 12:34:20,127 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 12:34:20,132 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 120 milliseconds
2025-05-13 12:34:20,139 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: slash_commands, envelope_id: 93aa7c61-43fa-49bd-8019-fc893321c3f5)
2025-05-13 12:34:20,150 - httpcore.connection - DEBUG - [_trace.py:47] - close.started
2025-05-13 12:34:20,163 - httpcore.connection - DEBUG - [_trace.py:47] - close.complete
2025-05-13 12:34:20,170 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-13 12:34:20,221 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116b9b250>
2025-05-13 12:34:20,233 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x1145feb10> server_hostname='api.openai.com' timeout=5.0
2025-05-13 12:34:20,279 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116b9a750>
2025-05-13 12:34:20,292 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 12:34:20,310 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 12:34:20,311 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 12:34:20,323 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 12:34:20,323 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 12:34:22,020 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 09:34:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'1017'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1021'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9854'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'876ms'), (b'x-request-id', b'req_64e61517866f41a2087b88a2fc6f096d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f128d21cad0372-NBO'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 12:34:22,039 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 12:34:22,040 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 12:34:22,040 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 12:34:22,040 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 12:34:22,040 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 12:34:22,052 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 09:34:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '1017', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1021', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9854', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '876ms', 'x-request-id': 'req_64e61517866f41a2087b88a2fc6f096d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f128d21cad0372-NBO', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 12:34:22,058 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_64e61517866f41a2087b88a2fc6f096d
2025-05-13 12:34:22,059 - slack - DEBUG - [slack_app.py:176] - Received parsing response: search_id: 672375962477797376
time_range: 202502022329
2025-05-13 12:34:22,059 - slack - INFO - [slack_app.py:185] - Successfully parsed input - search_id: 672375962477797376, time_range: 202502022329
2025-05-13 12:34:22,059 - slack - INFO - [slack_app.py:296] - Parsed input - search_id: 672375962477797376, time_range: 202502022329, is_followup: True
2025-05-13 12:34:22,065 - slack - INFO - [slack_app.py:75] - Retrieved cached results for 672375962477797376_202502022329
2025-05-13 12:34:22,072 - slack - INFO - [slack_app.py:302] - Using cached results for follow-up question
2025-05-13 12:34:22,072 - slack - INFO - [slack_app.py:86] - Generating response for search_id: 672375962477797376 (followup: True)
2025-05-13 12:34:22,072 - slack - DEBUG - [slack_app.py:93] - Formatting results for OpenAI prompt
2025-05-13 12:34:22,078 - slack - DEBUG - [slack_app.py:118] - Sending request to OpenAI
2025-05-13 12:34:22,085 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-06674107-fc6a-48cb-8b28-fec8c4d0df29', 'json_data': {'messages': [{'role': 'user', 'content': '\n    I searched for logs with ID: 672375962477797376. Here are the results:\n    Container: checkout-request-service (2 matches)\n{\n  "container_name": "checkout-request-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\\t{\\"time\\":\\"2025-02-02T23:29:00.202066773Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-request-service-778b5dbb86-m9b8x\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"101d3d24-2784-46e4-9cf5-2ab4567d4764\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-request-service\\",\\"app.kubernetes.io/name\\":\\"checkout-request-service\\",\\"pod-template-hash\\":\\"778b5dbb86\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-request-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\",\\"prometheus.io/path\\":\\"/actuator/prometheus\\",\\"prometheus.io/port\\":\\"8080\\",\\"prometheus.io/scrape\\":\\"true\\"},\\"host\\":\\"ip-10-107-118-6.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-request-service\\",\\"docker_id\\":\\"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-request-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\\t{\\"time\\":\\"2025-02-02T23:29:00.202066773Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-request-service-778b5dbb86-m9b8x\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"101d3d24-2784-46e4-9cf5-2ab4567d4764\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-request-service\\",\\"app.kubernetes.io/name\\":\\"checkout-request-service\\",\\"pod-template-hash\\":\\"778b5dbb86\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-request-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\",\\"prometheus.io/path\\":\\"/actuator/prometheus\\",\\"prometheus.io/port\\":\\"8080\\",\\"prometheus.io/scrape\\":\\"true\\"},\\"host\\":\\"ip-10-107-118-6.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-request-service\\",\\"docker_id\\":\\"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\nContainer: checkout-payment-service (8 matches)\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.18618989Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\\\\\"extraData\\\\\\":{\\\\\\"115651388\\\\\\":{\\\\\\"hubID\\\\\\":0,\\\\\\"callbackUrl\\\\\\":\\\\\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\\\\\"}},\\\\\\"amount_paid\\\\\\":1591.0,\\\\\\"payment_option_transaction_id\\\\\\":\\\\\\"9d72720e-3682-428e-9dbd-b474683a9d76\\\\\\",\\\\\\"gateway_transaction_id\\\\\\":\\\\\\"672375962477797376\\\\\\",\\\\\\"currency_code\\\\\\":\\\\\\"KES\\\\\\",\\\\\\"country_code\\\\\\":\\\\\\"KEN\\\\\\",\\\\\\"account_number\\\\\\":\\\\\\"acc_3209028\\\\\\",\\\\\\"customer_name\\\\\\":\\\\\\"Customer\\\\\\",\\\\\\"payment_msisdn\\\\\\":254700000000,\\\\\\"payment_option_narration\\\\\\":\\\\\\"INV_6799f155a66887.86544965\\\\\\",\\\\\\"date_payment_received\\\\\\":\\\\\\"2025-01-29 12:42:06\\\\\\",\\\\\\"service_charge_amount\\\\\\":0.0,\\\\\\"service_code\\\\\\":\\\\\\"KQSBOX\\\\\\",\\\\\\"gateway_overall_status\\\\\\":139,\\\\\\"payment_option_code\\\\\\":\\\\\\"DTBKE-MB\\\\\\",\\\\\\"psedo_service_code\\\\\\":null}\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.187788894Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\\\\\"115651388\\\\\\":{\\\\\\"hubID\\\\\\":0,\\\\\\"callbackUrl\\\\\\":\\\\\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\\\\\"}})\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.205908023Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.212786936Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.220445314Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.228701396Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.228790144Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... \\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n{\n  "container_name": "checkout-payment-service",\n  "message": "2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{\\"time\\":\\"2025-02-02T23:29:00.231421227Z\\",\\"stream\\":\\"stdout\\",\\"logtag\\":\\"F\\",\\"message\\":\\"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null\\",\\"kubernetes\\":{\\"pod_name\\":\\"checkout-payment-service-7d998df944-hmk6j\\",\\"namespace_name\\":\\"approval\\",\\"pod_id\\":\\"8346f6de-d3b5-4601-9633-a2cb6cf84814\\",\\"labels\\":{\\"admission.datadoghq.com/enabled\\":\\"true\\",\\"app.kubernetes.io/instance\\":\\"checkout-payment-service\\",\\"app.kubernetes.io/name\\":\\"checkout-payment-service\\",\\"pod-template-hash\\":\\"7d998df944\\",\\"tags.datadoghq.com/env\\":\\"approval\\",\\"tags.datadoghq.com/service\\":\\"checkout-payment-service-approval\\"},\\"annotations\\":{\\"admission.datadoghq.com/java-lib.version\\":\\"v1.41.1\\"},\\"host\\":\\"ip-10-107-152-189.eu-west-1.compute.internal\\",\\"container_name\\":\\"checkout-payment-service\\",\\"docker_id\\":\\"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66\\",\\"container_hash\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416\\",\\"container_image\\":\\"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3\\"},\\"kubernetes_namespace\\":{\\"name\\":\\"approval\\",\\"labels\\":{\\"field.cattle.io/projectId\\":\\"p-vnx8p\\",\\"kubernetes.io/metadata.name\\":\\"approval\\"}}}",\n  "timestamp": "202502022329"\n}\n\n    \n    Please provide:\n    1. A concise summary of what happened\n    2. Any errors or issues found\n    3. Suggested follow-up actions or questions\n    \n    If this is a follow-up question, focus on providing additional insights or analysis based on the existing logs.\n    '}], 'model': 'gpt-4', 'max_tokens': 500}}
2025-05-13 12:34:22,103 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 12:34:22,109 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 12:34:22,128 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 12:34:22,135 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 12:34:22,154 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 12:34:22,154 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 12:34:35,261 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 09:34:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'12774'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'12776'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'4690'), (b'x-ratelimit-reset-requests', b'15.8s'), (b'x-ratelimit-reset-tokens', b'31.86s'), (b'x-request-id', b'req_5d0ba6ad292c43f1f14021e49cee89a7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f128dd6c280372-NBO'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 12:34:35,275 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 12:34:35,288 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 12:34:35,307 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 12:34:35,314 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 12:34:35,327 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 12:34:35,339 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 09:34:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '12774', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '12776', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '4690', 'x-ratelimit-reset-requests': '15.8s', 'x-ratelimit-reset-tokens': '31.86s', 'x-request-id': 'req_5d0ba6ad292c43f1f14021e49cee89a7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f128dd6c280372-NBO', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 12:34:35,352 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_5d0ba6ad292c43f1f14021e49cee89a7
2025-05-13 12:34:35,362 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'C08RN80PTP1', 'text': '1. Summary:\n\n   The logs focus on two services – `checkout-request-service` and `checkout-payment-service`. There is an attempt to find a transaction based on the `gatewayTransactionId=672375962477797376` in the `checkout-request-service`. Meanwhile, the `checkout-payment-service` receives a payment payload with the same transaction ID. The ServiceCode `KQSBOX` for the transaction is created. However, an error occurs while saving the payment request.\n\n2. Errors or issues:\n\n   An error is indicated in the logs for the `checkout-payment-service`: "Error while saving the payment request: null." No further details or specific error messages are provided, making it difficult to understand the root cause of the error.\n\n3. Suggested follow-up actions or questions:\n\n   - Further examination of the code where the payment request is being saved could be beneficial to understanding why the save process failed.\n   - Checking if the saving process was expecting particular data that was not provided. \n   - Are there any success scenarios for the save operation for comparison? This might help to identify what\'s different in the unsuccessful cases.\n   - If this error is sporadic, finding out when it happens would help identify triggers or commonalities in the failing transactions. \n   - Existence and examination of a more detailed error log or backend system would also be useful.', 'team_id': 'T08RN80K1N3'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 12:34:36,465 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 09:34:36 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '166616483eac43430e14e670cfaff09c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'commands,chat:write,channels:history,groups:history,im:history', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCMSLBSIDauVLv76ZQSxogAAEAI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '4071', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-wcirpowk,envoy-edge-bom-xlwbjvhz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '495', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-noln', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C08RN80PTP1","ts":"1747128876.367029","message":{"user":"U08SQGNTJU8","type":"message","ts":"1747128876.367029","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"1. Summary:\n\n   The logs focus on two services \u2013 `checkout-request-service` and `checkout-payment-service`. There is an attempt to find a transaction based on the `gatewayTransactionId=672375962477797376` in the `checkout-request-service`. Meanwhile, the `checkout-payment-service` receives a payment payload with the same transaction ID. The ServiceCode `KQSBOX` for the transaction is created. However, an error occurs while saving the payment request.\n\n2. Errors or issues:\n\n   An error is indicated in the logs for the `checkout-payment-service`: \"Error while saving the payment request: null.\" No further details or specific error messages are provided, making it difficult to understand the root cause of the error.\n\n3. Suggested follow-up actions or questions:\n\n   - Further examination of the code where the payment request is being saved could be beneficial to understanding why the save process failed.\n   - Checking if the saving process was expecting particular data that was not provided. \n   - Are there any success scenarios for the save operation for comparison? This might help to identify what's different in the unsuccessful cases.\n   - If this error is sporadic, finding out when it happens would help identify triggers or commonalities in the failing transactions. \n   - Existence and examination of a more detailed error log or backend system would also be useful.","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","name":"Lokilens","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1747104773,"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"Ds9+t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1. Summary:\n\n   The logs focus on two services \u2013 "},{"type":"text","text":"checkout-request-service","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"checkout-payment-service","style":{"code":true}},{"type":"text","text":". There is an attempt to find a transaction based on the "},{"type":"text","text":"gatewayTransactionId=672375962477797376","style":{"code":true}},{"type":"text","text":" in the "},{"type":"text","text":"checkout-request-service","style":{"code":true}},{"type":"text","text":". Meanwhile, the "},{"type":"text","text":"checkout-payment-service","style":{"code":true}},{"type":"text","text":" receives a payment payload with the same transaction ID. The ServiceCode "},{"type":"text","text":"KQSBOX","style":{"code":true}},{"type":"text","text":" for the transaction is created. However, an error occurs while saving the payment request.\n\n2. Errors or issues:\n\n   An error is indicated in the logs for the "},{"type":"text","text":"checkout-payment-service","style":{"code":true}},{"type":"text","text":": \"Error while saving the payment request: null.\" No further details or specific error messages are provided, making it difficult to understand the root cause of the error.\n\n3. Suggested follow-up actions or questions:\n\n   - Further examination of the code where the payment request is being saved could be beneficial to understanding why the save process failed.\n   - Checking if the saving process was expecting particular data that was not provided. \n   - Are there any success scenarios for the save operation for comparison? This might help to identify what's different in the unsuccessful cases.\n   - If this error is sporadic, finding out when it happens would help identify triggers or commonalities in the failing transactions. \n   - Existence and examination of a more detailed error log or backend system would also be useful."}]}]}]}}
2025-05-13 12:34:38,149 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"ab93c70a-cc93-4f88-af36-8a4ecb8c3a15","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","context_team_id":"T08RN80K1N3","context_enterprise_id":null,"api_app_id":"A08SQGEHMSL","event":{"user":"U08SQGNTJU8","type":"message","ts":"1747128876.367029","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"1. Summary:\n\n   The logs focus on two services \u2013 `checkout-request-service` and `checkout-payment-service`. There is an attempt to find a transaction based on the `gatewayTransactionId=672375962477797376` in the `checkout-request-service`. Meanwhile, the `checkout-payment-service` receives a payment payload with the same transaction ID. The ServiceCode `KQSBOX` for the transaction is created. However, an error occurs while saving the payment request.\n\n2. Errors or issues:\n\n   An error is indicated in the logs for the `checkout-payment-service`: \"Error while saving the payment request: null.\" No further details or specific error messages are provided, making it difficult to understand the root cause of the error.\n\n3. Suggested follow-up actions or questions:\n\n   - Further examination of the code where the payment request is being saved could be beneficial to understanding why the save process failed.\n   - Checking if the saving process was expecting particular data that was not provided. \n   - Are there any success scenarios for the save operation for comparison? This might help to identify what's different in the unsuccessful cases.\n   - If this error is sporadic, finding out when it happens would help identify triggers or commonalities in the failing transactions. \n   - Existence and examination of a more detailed error log or backend system would also be useful.","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","deleted":false,"name":"Lokilens","updated":1747104773,"app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"SRRun","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1. Summary:\n\n   The logs focus on two services \u2013 "},{"type":"text","text":"checkout-request-service","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"checkout-payment-service","style":{"code":true}},{"type":"text","text":". There is an attempt to find a transaction based on the "},{"type":"text","text":"gatewayTransactionId=672375962477797376","style":{"code":true}},{"type":"text","text":" in the "},{"type":"text","text":"checkout-request-service","style":{"code":true}},{"type":"text","text":". Meanwhile, the "},{"type":"text","text":"checkout-payment-service","style":{"code":true}},{"type":"text","text":" receives a payment payload with the same transaction ID. The ServiceCode "},{"type":"text","text":"KQSBOX","style":{"code":true}},{"type":"text","text":" for the transaction is created. However, an error occurs while saving the payment request.\n\n2. Errors or issues:\n\n   An error is indicated in the logs for the "},{"type":"text","text":"checkout-payment-service","style":{"code":true}},{"type":"text","text":": \"Error while saving the payment request: null.\" No further details or specific error messages are provided, making it difficult to understand the root cause of the error.\n\n3. Suggested follow-up actions or questions:\n\n   - Further examination of the code where the payment request is being saved could be beneficial to understanding why the save process failed.\n   - Checking if the saving process was expecting particular data that was not provided. \n   - Are there any success scenarios for the save operation for comparison? This might help to identify what's different in the unsuccessful cases.\n   - If this error is sporadic, finding out when it happens would help identify triggers or commonalities in the failing transactions. \n   - Existence and examination of a more detailed error log or backend system would also be useful."}]}]}],"channel":"C08RN80PTP1","event_ts":"1747128876.367029","channel_type":"channel"},"type":"event_callback","event_id":"Ev08SGPX2DHP","event_time":1747128876,"authorizations":[{"enterprise_id":null,"team_id":"T08RN80K1N3","user_id":"U08SQGNTJU8","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDhSTjgwSzFOMyIsImFpZCI6IkEwOFNRR0VITVNMIiwiY2lkIjoiQzA4Uk44MFBUUDEifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":0,"retry_reason":""})
2025-05-13 12:34:38,162 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:34:38,168 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:34:38,198 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: ab93c70a-cc93-4f88-af36-8a4ecb8c3a15)
2025-05-13 12:34:38,205 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:34:38,205 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:34:38,218 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:34:38,218 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:34:38,224 - slack_bolt.IgnoringSelfEvents - DEBUG - [ignoring_self_events.py:71] - Skipped self event: {'user': 'U08SQGNTJU8', 'type': 'message', 'ts': '1747128876.367029', 'bot_id': 'B08SQGNSACQ', 'app_id': 'A08SQGEHMSL', 'text': '1. Summary:\n\n   The logs focus on two services – `checkout-request-service` and `checkout-payment-service`. There is an attempt to find a transaction based on the `gatewayTransactionId=672375962477797376` in the `checkout-request-service`. Meanwhile, the `checkout-payment-service` receives a payment payload with the same transaction ID. The ServiceCode `KQSBOX` for the transaction is created. However, an error occurs while saving the payment request.\n\n2. Errors or issues:\n\n   An error is indicated in the logs for the `checkout-payment-service`: "Error while saving the payment request: null." No further details or specific error messages are provided, making it difficult to understand the root cause of the error.\n\n3. Suggested follow-up actions or questions:\n\n   - Further examination of the code where the payment request is being saved could be beneficial to understanding why the save process failed.\n   - Checking if the saving process was expecting particular data that was not provided. \n   - Are there any success scenarios for the save operation for comparison? This might help to identify what\'s different in the unsuccessful cases.\n   - If this error is sporadic, finding out when it happens would help identify triggers or commonalities in the failing transactions. \n   - Existence and examination of a more detailed error log or backend system would also be useful.', 'team': 'T08RN80K1N3', 'bot_profile': {'id': 'B08SQGNSACQ', 'deleted': False, 'name': 'Lokilens', 'updated': 1747104773, 'app_id': 'A08SQGEHMSL', 'user_id': 'U08SQGNTJU8', 'icons': {'image_36': 'https://a.slack-edge.com/80588/img/plugins/app/bot_36.png', 'image_48': 'https://a.slack-edge.com/80588/img/plugins/app/bot_48.png', 'image_72': 'https://a.slack-edge.com/80588/img/plugins/app/service_72.png'}, 'team_id': 'T08RN80K1N3'}, 'blocks': [{'type': 'rich_text', 'block_id': 'SRRun', 'elements': [{'type': 'rich_text_section', 'elements': [{'type': 'text', 'text': '1. Summary:\n\n   The logs focus on two services – '}, {'type': 'text', 'text': 'checkout-request-service', 'style': {'code': True}}, {'type': 'text', 'text': ' and '}, {'type': 'text', 'text': 'checkout-payment-service', 'style': {'code': True}}, {'type': 'text', 'text': '. There is an attempt to find a transaction based on the '}, {'type': 'text', 'text': 'gatewayTransactionId=672375962477797376', 'style': {'code': True}}, {'type': 'text', 'text': ' in the '}, {'type': 'text', 'text': 'checkout-request-service', 'style': {'code': True}}, {'type': 'text', 'text': '. Meanwhile, the '}, {'type': 'text', 'text': 'checkout-payment-service', 'style': {'code': True}}, {'type': 'text', 'text': ' receives a payment payload with the same transaction ID. The ServiceCode '}, {'type': 'text', 'text': 'KQSBOX', 'style': {'code': True}}, {'type': 'text', 'text': ' for the transaction is created. However, an error occurs while saving the payment request.\n\n2. Errors or issues:\n\n   An error is indicated in the logs for the '}, {'type': 'text', 'text': 'checkout-payment-service', 'style': {'code': True}}, {'type': 'text', 'text': ': "Error while saving the payment request: null." No further details or specific error messages are provided, making it difficult to understand the root cause of the error.\n\n3. Suggested follow-up actions or questions:\n\n   - Further examination of the code where the payment request is being saved could be beneficial to understanding why the save process failed.\n   - Checking if the saving process was expecting particular data that was not provided. \n   - Are there any success scenarios for the save operation for comparison? This might help to identify what\'s different in the unsuccessful cases.\n   - If this error is sporadic, finding out when it happens would help identify triggers or commonalities in the failing transactions. \n   - Existence and examination of a more detailed error log or backend system would also be useful.'}]}]}], 'channel': 'C08RN80PTP1', 'event_ts': '1747128876.367029', 'channel_type': 'channel'}
2025-05-13 12:34:38,230 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 8fe15a89-fb71-4d44-ab50-77ad1f28a8ab, message: {"envelope_id": "ab93c70a-cc93-4f88-af36-8a4ecb8c3a15"})
2025-05-13 12:34:38,236 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 31 milliseconds
2025-05-13 12:34:38,236 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: ab93c70a-cc93-4f88-af36-8a4ecb8c3a15)
2025-05-13 12:36:59,844 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"e03032af-5d89-4835-a6b4-be39620b3e3a","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","context_team_id":"T08RN80K1N3","context_enterprise_id":null,"api_app_id":"A08SQGEHMSL","event":{"user":"U08RN80KECX","type":"message","ts":"1747128647.622069","client_msg_id":"ecc76544-c448-4677-9e95-c45dd8034922","text":"can i get the exact logs without any filter","team":"T08RN80K1N3","blocks":[{"type":"rich_text","block_id":"OzW4Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can i get the exact logs without any filter"}]}]}],"channel":"C08RN80PTP1","event_ts":"1747128647.622069","channel_type":"channel"},"type":"event_callback","event_id":"Ev08S68F8N4A","event_time":1747128647,"authorizations":[{"enterprise_id":null,"team_id":"T08RN80K1N3","user_id":"U08SQGNTJU8","is_bot":true,"is_enterprise_install":false}],"is_ext_shared_channel":false,"event_context":"4-eyJldCI6Im1lc3NhZ2UiLCJ0aWQiOiJUMDhSTjgwSzFOMyIsImFpZCI6IkEwOFNRR0VITVNMIiwiY2lkIjoiQzA4Uk44MFBUUDEifQ"},"type":"events_api","accepts_response_payload":false,"retry_attempt":3,"retry_reason":"timeout"})
2025-05-13 12:36:59,857 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 12:36:59,864 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 12:36:59,891 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: events_api, envelope_id: e03032af-5d89-4835-a6b4-be39620b3e3a)
2025-05-13 12:36:59,894 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 12:36:59,907 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 12:36:59,919 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 12:36:59,932 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 12:36:59,939 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 12:36:59,944 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 12:36:59,957 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 12:36:59,957 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 12:36:59,962 - slack_bolt.App - WARNING - [app.py:648] - Unhandled request ({'type': 'event_callback', 'event': {'type': 'message'}})
---
[Suggestion] You can handle this type of event with the following listener function:

@app.event("message")
def handle_message_events(body, logger):
    logger.info(body)

2025-05-13 12:36:59,969 - slack_bolt.App - INFO - [internals.py:44] - Unsuccessful Bolt execution result (status: 404, body: {"error": "unhandled request"})
2025-05-13 12:36:59,969 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: events_api, envelope_id: e03032af-5d89-4835-a6b4-be39620b3e3a)
