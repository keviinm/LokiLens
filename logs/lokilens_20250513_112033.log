2025-05-13 11:20:33,958 - s3 - INFO - [s3_operations.py:14] - Initializing S3 operations
2025-05-13 11:20:33,959 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
2025-05-13 11:20:33,960 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-call.apigateway to before-call.api-gateway
2025-05-13 11:20:33,961 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
2025-05-13 11:20:33,961 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
2025-05-13 11:20:33,961 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
2025-05-13 11:20:33,962 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
2025-05-13 11:20:33,962 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
2025-05-13 11:20:33,963 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
2025-05-13 11:20:33,963 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
2025-05-13 11:20:33,963 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
2025-05-13 11:20:33,963 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
2025-05-13 11:20:33,971 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/endpoints.json
2025-05-13 11:20:33,987 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/sdk-default-configuration.json
2025-05-13 11:20:33,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-service-name: calling handler <function handle_service_name_alias at 0x1058d7420>
2025-05-13 11:20:34,008 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-05-13 11:20:34,016 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-05-13 11:20:34,036 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-05-13 11:20:34,045 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/partitions.json
2025-05-13 11:20:34,046 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x10585d800>
2025-05-13 11:20:34,046 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x105970f40>
2025-05-13 11:20:34,063 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x10585d580>
2025-05-13 11:20:34,063 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_service
2025-05-13 11:20:34,063 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_global
2025-05-13 11:20:34,063 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_service
2025-05-13 11:20:34,063 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_global
2025-05-13 11:20:34,063 - botocore.configprovider - DEBUG - [configprovider.py:1005] - No configured endpoint found.
2025-05-13 11:20:34,070 - botocore.endpoint - DEBUG - [endpoint.py:414] - Setting s3 timeout as (60, 60)
2025-05-13 11:20:34,072 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/_retry.json
2025-05-13 11:20:34,072 - botocore.client - DEBUG - [client.py:290] - Registering retry handlers for service: s3
2025-05-13 11:20:34,073 - botocore.utils - DEBUG - [utils.py:1718] - Registering S3 region redirector handler
2025-05-13 11:20:34,073 - botocore.utils - DEBUG - [utils.py:1666] - Registering S3Express Identity Resolver
2025-05-13 11:20:34,073 - s3 - INFO - [s3_operations.py:24] - S3 client initialized successfully
2025-05-13 11:20:34,074 - mcp.server.lowlevel.server - DEBUG - [server.py:146] - Initializing server 'LokiLens MCP'
2025-05-13 11:20:34,074 - mcp.server.lowlevel.server - DEBUG - [server.py:385] - Registering handler for ListToolsRequest
2025-05-13 11:20:34,074 - fastapi_mcp.server - DEBUG - [server.py:34] - Registering handler for CallToolRequest
2025-05-13 11:20:34,076 - mcp.server.sse - DEBUG - [sse.py:84] - SseServerTransport initialized with endpoint: /mcp/messages/
2025-05-13 11:20:34,076 - fastapi_mcp.server - INFO - [server.py:285] - No auth config provided, skipping auth setup
2025-05-13 11:20:34,076 - fastapi_mcp.server - INFO - [server.py:359] - MCP server listening at /mcp
2025-05-13 11:30:06,401 - mcp.server.sse - DEBUG - [sse.py:92] - Setting up SSE connection
2025-05-13 11:30:06,409 - mcp.server.sse - DEBUG - [sse.py:105] - Created new session with ID: eb407222-3247-40db-b4b6-1dbb9b30a9c2
2025-05-13 11:30:06,437 - mcp.server.sse - DEBUG - [sse.py:143] - Starting SSE response task
2025-05-13 11:30:06,437 - mcp.server.sse - DEBUG - [sse.py:146] - Yielding read and write streams
2025-05-13 11:30:06,443 - mcp.server.sse - DEBUG - [sse.py:112] - Starting SSE writer
2025-05-13 11:30:06,444 - mcp.server.sse - DEBUG - [sse.py:115] - Sent endpoint event: /mcp/messages/?session_id=eb407222324740dbb4b61dbb9b30a9c2
2025-05-13 11:30:06,444 - sse_starlette.sse - DEBUG - [sse.py:161] - chunk: b'event: endpoint\r\ndata: /mcp/messages/?session_id=eb407222324740dbb4b61dbb9b30a9c2\r\n\r\n'
2025-05-13 11:30:06,446 - sse_starlette.sse - DEBUG - [sse.py:182] - Got event: http.disconnect. Stop streaming.
2025-05-13 11:30:06,446 - root - DEBUG - [sse.py:141] - Client session disconnected eb407222-3247-40db-b4b6-1dbb9b30a9c2
2025-05-13 11:30:35,122 - app.app - INFO - [app.py:140] - Received API request: search_id=672375962477797376, time_ranges=['202502022329']
2025-05-13 11:30:35,126 - app.app - INFO - [app.py:158] - Starting search for ID: 672375962477797376
2025-05-13 11:30:35,126 - app.app - INFO - [app.py:159] - Time ranges: ['202502022329']
2025-05-13 11:30:35,126 - app.app - INFO - [app.py:160] - Using bucket: cellogs
2025-05-13 11:30:35,126 - app.app - DEBUG - [app.py:79] - Attempting to parse timestamp: 202502022329
2025-05-13 11:30:35,132 - app.app - DEBUG - [app.py:92] - Successfully parsed timestamp with format %Y%m%d%H%M: 2025-02-02 23:29:00
2025-05-13 11:30:35,132 - app.app - INFO - [app.py:166] - Searching for timestamp: 2025-02-02 23:29:00
2025-05-13 11:30:35,132 - app.app - INFO - [app.py:170] - Searching for S3 files with prefix: 202502022329
2025-05-13 11:30:35,132 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: logs/202502022329
2025-05-13 11:30:35,135 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1058fd1c0>
2025-05-13 11:30:35,135 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1058d7ce0>
2025-05-13 11:30:35,135 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x1058fdf80>
2025-05-13 11:30:35,135 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:35,135 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:35,135 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1058d7b00>
2025-05-13 11:30:35,138 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x1058fe700>
2025-05-13 11:30:35,138 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x1058fe160>
2025-05-13 11:30:35,138 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:35,139 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'logs/202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:30:35,140 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:30:35,140 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:30:35,140 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:30:35,140 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1058fc0e0>
2025-05-13 11:30:35,140 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:35,140 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1058d76a0>
2025-05-13 11:30:35,140 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x1058fe660>
2025-05-13 11:30:35,141 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x1058fd620>
2025-05-13 11:30:35,141 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'logs/202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x10640e120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'logs/202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'logs/202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 11:30:35,141 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x10640dfd0>>
2025-05-13 11:30:35,141 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:35,141 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1058d7920>
2025-05-13 11:30:35,141 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1058fe0c0>
2025-05-13 11:30:35,141 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1058fe7a0>
2025-05-13 11:30:35,141 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:35,142 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:30:35,142 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=logs%2F202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T083035Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:30:35,143 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T083035Z
20250513/us-east-1/s3/aws4_request
b3274a2eccf94b8adf7e25b03a714a0ceaffd013b334f0bc8fdbf48008dfd367
2025-05-13 11:30:35,143 - botocore.auth - DEBUG - [auth.py:436] - Signature:
1c2353425a5abe6a208b5f05a10332e1548d6cd91657c7ac7b5a9b578288e2c4
2025-05-13 11:30:35,143 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x106397890>>
2025-05-13 11:30:35,143 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x1058fdee0>
2025-05-13 11:30:35,143 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T083035Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=1c2353425a5abe6a208b5f05a10332e1548d6cd91657c7ac7b5a9b578288e2c4', 'amz-sdk-invocation-id': b'33d14cc4-925c-4f03-a8c1-8e00b0bb83d9', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:30:35,147 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:30:35,149 - urllib3.connectionpool - DEBUG - [connectionpool.py:1049] - Starting new HTTPS connection (1): cellogs.s3.amazonaws.com:443
2025-05-13 11:30:35,949 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=logs%2F202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 11:30:35,949 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x1058fe480>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1058fe2a0>
2025-05-13 11:30:35,951 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': '/xdRFZiODoN1bcEiwrIEgGMJfwTfT3C9oxegQ7ZOtM8yOfm7dtzPuBz3w39w0TgIU5MtB4K1m2s=', 'x-amz-request-id': '557EYJJ3PDYR24K8', 'Date': 'Tue, 13 May 2025 08:30:36 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 11:30:35,951 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>logs/202502022329</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1058fe5c0>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1064941a0>
2025-05-13 11:30:35,951 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x1058fd300>
2025-05-13 11:30:35,951 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: kubernetes.var.log.containers/202502022329
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1058fd1c0>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1058d7ce0>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x1058fdf80>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1058d7b00>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x1058fe700>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x1058fe160>
2025-05-13 11:30:35,951 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:35,951 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'kubernetes.var.log.containers/202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:30:35,952 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:30:35,952 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:30:35,952 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1058fc0e0>
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1058d76a0>
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x1058fe660>
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x1058fd620>
2025-05-13 11:30:35,952 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'kubernetes.var.log.containers/202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x10640e120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x10640dfd0>>
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1058d7920>
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1058fe0c0>
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1058fe7a0>
2025-05-13 11:30:35,952 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:35,952 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:30:35,952 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=kubernetes.var.log.containers%2F202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T083035Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:30:35,952 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T083035Z
20250513/us-east-1/s3/aws4_request
15358dd2b6800be22de18ed0178a974239db115122c89461293f285f4b43d381
2025-05-13 11:30:35,952 - botocore.auth - DEBUG - [auth.py:436] - Signature:
789e4cb2214ab3378b0df99a72660b3f8d19f05395d9148cad5d081ace0b3ae6
2025-05-13 11:30:35,953 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x106397890>>
2025-05-13 11:30:35,953 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x1058fdee0>
2025-05-13 11:30:35,953 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T083035Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=789e4cb2214ab3378b0df99a72660b3f8d19f05395d9148cad5d081ace0b3ae6', 'amz-sdk-invocation-id': b'c50dcbc8-3c50-4c56-a235-3ffc6b5fd269', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:30:35,953 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:30:36,206 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 11:30:36,206 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x1058fe480>
2025-05-13 11:30:36,206 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1058fe2a0>
2025-05-13 11:30:36,206 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'SLQlwEBl78zFye/G1zPX92tp/lo/3nJ3oat2AYKIPBauy0e4pAepE06ewU46oW1aUJyqFm8hKIE=', 'x-amz-request-id': '557DS30EYV0ETG8Q', 'Date': 'Tue, 13 May 2025 08:30:37 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 11:30:36,207 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>kubernetes.var.log.containers/202502022329</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1058fe5c0>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1064941a0>
2025-05-13 11:30:36,207 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x1058fd300>
2025-05-13 11:30:36,207 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: 202502022329
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1058fd1c0>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1058d7ce0>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x1058fdf80>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1058d7b00>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x1058fe700>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x1058fe160>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:36,207 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': '202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:30:36,207 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:30:36,207 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:30:36,207 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1058fc0e0>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1058d76a0>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x1058fe660>
2025-05-13 11:30:36,207 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x1058fd620>
2025-05-13 11:30:36,207 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': '202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x10640e120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': '202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': '202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 11:30:36,208 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x10640dfd0>>
2025-05-13 11:30:36,208 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:36,208 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1058d7920>
2025-05-13 11:30:36,208 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1058fe0c0>
2025-05-13 11:30:36,208 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1058fe7a0>
2025-05-13 11:30:36,208 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:36,208 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:30:36,208 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T083036Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:30:36,208 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T083036Z
20250513/us-east-1/s3/aws4_request
88d0c2df755ecd1ce42b22eb4076cd90d116c5b895a9b617cb198ee23b5dfa7f
2025-05-13 11:30:36,208 - botocore.auth - DEBUG - [auth.py:436] - Signature:
bbde016d3fd91978c314ea274594f1b896b2d135bb2f2bb8cfa04f1b6918a312
2025-05-13 11:30:36,208 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x106397890>>
2025-05-13 11:30:36,208 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x1058fdee0>
2025-05-13 11:30:36,208 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T083036Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=bbde016d3fd91978c314ea274594f1b896b2d135bb2f2bb8cfa04f1b6918a312', 'amz-sdk-invocation-id': b'95a918f9-d251-4f67-8dc1-120be262d21c', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:30:36,208 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:30:36,455 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 11:30:36,456 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x1058fe480>
2025-05-13 11:30:36,456 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1058fe2a0>
2025-05-13 11:30:36,456 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'cuQU9bga53yfUkyV1Y4s0B7l+7noJvJx6s617N1CyPR3x+2JFVcXSMEcvI0Wi0ojjclRs4lGGOo=', 'x-amz-request-id': '5574Q0HHF6RVC6TS', 'Date': 'Tue, 13 May 2025 08:30:37 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 11:30:36,456 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>202502022329</Prefix><KeyCount>3</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated><Contents><Key>202502022329_11.gz</Key><LastModified>2025-02-06T12:20:31.000Z</LastModified><ETag>&quot;2a5c590614a9ea9585cfa4ff37e0e948&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>857</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>202502022329_16.gz</Key><LastModified>2025-02-06T12:20:34.000Z</LastModified><ETag>&quot;0a132731b8895ac922d0484826b9eae0&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>126877</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>202502022329_9.gz</Key><LastModified>2025-02-06T12:20:30.000Z</LastModified><ETag>&quot;5960b6f6c1aebf300645013a5f60f721&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>662</Size><StorageClass>STANDARD</StorageClass></Contents></ListBucketResult>'
2025-05-13 11:30:36,458 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1058fe5c0>
2025-05-13 11:30:36,458 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1064941a0>
2025-05-13 11:30:36,458 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:30:36,458 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:36,458 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x1058fd300>
2025-05-13 11:30:36,459 - s3 - INFO - [s3_operations.py:126] - Found 3 files with prefix 202502022329
2025-05-13 11:30:36,459 - app.app - INFO - [app.py:178] - Found 3 files with prefix 202502022329
2025-05-13 11:30:36,459 - app.app - DEBUG - [app.py:181] - Files found: ['202502022329_11.gz', '202502022329_16.gz', '202502022329_9.gz']
2025-05-13 11:30:36,459 - app.app - INFO - [app.py:185] - Processing file: 202502022329_11.gz
2025-05-13 11:30:36,459 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1058d7d80>
2025-05-13 11:30:36,459 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1058d7ce0>
2025-05-13 11:30:36,459 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x1058fdf80>
2025-05-13 11:30:36,459 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:36,459 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:36,459 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1058d7b00>
2025-05-13 11:30:36,459 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x1058fe700>
2025-05-13 11:30:36,459 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x1058fe160>
2025-05-13 11:30:36,459 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:36,459 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_11.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:30:36,460 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:30:36,460 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:30:36,460 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:30:36,460 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1058fc0e0>
2025-05-13 11:30:36,460 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:36,460 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1058d76a0>
2025-05-13 11:30:36,460 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x1058fe660>
2025-05-13 11:30:36,460 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x1058fd620>
2025-05-13 11:30:36,460 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_11.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_11.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_11.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x10640e120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_11.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_11.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 11:30:36,461 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x10640dfd0>>
2025-05-13 11:30:36,461 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:36,461 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1058d7920>
2025-05-13 11:30:36,461 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1058fe0c0>
2025-05-13 11:30:36,461 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1058fe7a0>
2025-05-13 11:30:36,461 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:36,461 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:30:36,461 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_11.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T083036Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:30:36,461 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T083036Z
20250513/us-east-1/s3/aws4_request
334484bd455b8f37f55a33a26fef5aca141d978a0402fe641dc82815e93fd5f1
2025-05-13 11:30:36,461 - botocore.auth - DEBUG - [auth.py:436] - Signature:
3536624893f65ce01bf0b0ad53c95747e8828fee34f28c848c5a3d8cdbd3a298
2025-05-13 11:30:36,461 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x106397890>>
2025-05-13 11:30:36,461 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x1058fdee0>
2025-05-13 11:30:36,461 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_11.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T083036Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=3536624893f65ce01bf0b0ad53c95747e8828fee34f28c848c5a3d8cdbd3a298', 'amz-sdk-invocation-id': b'8f5dd1f1-110e-4ac0-8658-adfacc6c5ffb', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:30:36,462 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:30:36,764 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_11.gz HTTP/1.1" 200 857
2025-05-13 11:30:36,775 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 11:30:36,775 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x1058fe480>
2025-05-13 11:30:36,775 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1058fe2a0>
2025-05-13 11:30:36,777 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'xtaRkod266fX7cRp0GFgJzH2UvFPQcx1oxDdugkCf/WqF7X92+gYn0/3QIHYy3qszWDmADe451M=', 'x-amz-request-id': '557636KCHFF6Z653', 'Date': 'Tue, 13 May 2025 08:30:37 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:31 GMT', 'ETag': '"2a5c590614a9ea9585cfa4ff37e0e948"', 'x-amz-checksum-crc64nvme': 'ZS20/Riisl0=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '857', 'Server': 'AmazonS3'}
2025-05-13 11:30:36,777 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x106713be0>
2025-05-13 11:30:36,777 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1058fe5c0>
2025-05-13 11:30:36,780 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1064941a0>
2025-05-13 11:30:36,780 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:30:36,780 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:36,780 - app.app - DEBUG - [app.py:187] - File content length: 857
2025-05-13 11:30:36,781 - app.app - INFO - [app.py:185] - Processing file: 202502022329_16.gz
2025-05-13 11:30:36,784 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1058d7d80>
2025-05-13 11:30:36,784 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1058d7ce0>
2025-05-13 11:30:36,784 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x1058fdf80>
2025-05-13 11:30:36,784 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:36,784 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:36,784 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1058d7b00>
2025-05-13 11:30:36,784 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x1058fe700>
2025-05-13 11:30:36,784 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x1058fe160>
2025-05-13 11:30:36,784 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:36,784 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_16.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:30:36,785 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:30:36,785 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:30:36,785 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1058fc0e0>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1058d76a0>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x1058fe660>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x1058fd620>
2025-05-13 11:30:36,785 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_16.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_16.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_16.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x10640e120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_16.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_16.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x10640dfd0>>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1058d7920>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1058fe0c0>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1058fe7a0>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:36,785 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:30:36,785 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_16.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T083036Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:30:36,785 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T083036Z
20250513/us-east-1/s3/aws4_request
1bc7049d5f9259c066037560ec07d2cc080356fb46bfc78d524e77be8b089476
2025-05-13 11:30:36,785 - botocore.auth - DEBUG - [auth.py:436] - Signature:
8a341528e71bdf1ddbd3af9e2672f0ef4058254d78679aa9e77227f1c49d3317
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x106397890>>
2025-05-13 11:30:36,785 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x1058fdee0>
2025-05-13 11:30:36,785 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_16.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T083036Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=8a341528e71bdf1ddbd3af9e2672f0ef4058254d78679aa9e77227f1c49d3317', 'amz-sdk-invocation-id': b'f156839d-eade-4045-8f4d-7bbceaa07901', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:30:36,786 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:30:37,099 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_16.gz HTTP/1.1" 200 126877
2025-05-13 11:30:37,099 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 11:30:37,099 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x1058fe480>
2025-05-13 11:30:37,099 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1058fe2a0>
2025-05-13 11:30:37,099 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': '3bZ/RhohIjp/7YnM2jXwh48zqKr5jC1ziacnW5ePDjx/UWHAADTtM4G5wZIkNB5oHUssQch93pY=', 'x-amz-request-id': '6K2KVPAZX24QR9H8', 'Date': 'Tue, 13 May 2025 08:30:38 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:34 GMT', 'ETag': '"0a132731b8895ac922d0484826b9eae0"', 'x-amz-checksum-crc64nvme': 'kMtAdae3Sso=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '126877', 'Server': 'AmazonS3'}
2025-05-13 11:30:37,099 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x106710fd0>
2025-05-13 11:30:37,100 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1058fe5c0>
2025-05-13 11:30:37,100 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1064941a0>
2025-05-13 11:30:37,100 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:30:37,100 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:37,584 - app.app - DEBUG - [app.py:187] - File content length: 126877
2025-05-13 11:30:37,589 - app.app - INFO - [app.py:191] - Found matches in file 202502022329_16.gz
2025-05-13 11:30:37,589 - app.app - DEBUG - [app.py:192] - Matches: defaultdict(<class 'list'>, {'checkout-request-service': ['2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}'], 'checkout-payment-service': ['2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\"extraData\\":{\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}},\\"amount_paid\\":1591.0,\\"payment_option_transaction_id\\":\\"9d72720e-3682-428e-9dbd-b474683a9d76\\",\\"gateway_transaction_id\\":\\"672375962477797376\\",\\"currency_code\\":\\"KES\\",\\"country_code\\":\\"KEN\\",\\"account_number\\":\\"acc_3209028\\",\\"customer_name\\":\\"Customer\\",\\"payment_msisdn\\":254700000000,\\"payment_option_narration\\":\\"INV_6799f155a66887.86544965\\",\\"date_payment_received\\":\\"2025-01-29 12:42:06\\",\\"service_charge_amount\\":0.0,\\"service_code\\":\\"KQSBOX\\",\\"gateway_overall_status\\":139,\\"payment_option_code\\":\\"DTBKE-MB\\",\\"psedo_service_code\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}']})
2025-05-13 11:30:37,590 - app.app - INFO - [app.py:185] - Processing file: 202502022329_9.gz
2025-05-13 11:30:37,590 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1058d7d80>
2025-05-13 11:30:37,590 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1058d7ce0>
2025-05-13 11:30:37,590 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x1058fdf80>
2025-05-13 11:30:37,590 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:37,590 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:37,590 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1058d7b00>
2025-05-13 11:30:37,590 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x1058fe700>
2025-05-13 11:30:37,590 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x1058fe160>
2025-05-13 11:30:37,590 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:37,590 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_9.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:30:37,590 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:30:37,590 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:30:37,590 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1058fc0e0>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1058d76a0>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x1058fe660>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x1058fd620>
2025-05-13 11:30:37,591 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_9.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_9.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_9.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x10640e120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_9.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_9.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x10640dfd0>>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1059830e0>>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1058d7920>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1058fe0c0>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1058fe7a0>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x106494440>>
2025-05-13 11:30:37,591 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:30:37,591 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_9.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T083037Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:30:37,591 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T083037Z
20250513/us-east-1/s3/aws4_request
f1fa1409603103e731ef53ac48f104aeda39dab9c4e432b3cd0314356d4e7b6b
2025-05-13 11:30:37,591 - botocore.auth - DEBUG - [auth.py:436] - Signature:
18ace1f4d7d7c9749c13ea65a74f569d86462f6c0e75cb359caab0bcadb9c546
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x106397890>>
2025-05-13 11:30:37,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x1058fdee0>
2025-05-13 11:30:37,591 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_9.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T083037Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=18ace1f4d7d7c9749c13ea65a74f569d86462f6c0e75cb359caab0bcadb9c546', 'amz-sdk-invocation-id': b'8d9141a8-f834-4576-b84d-c37046fa1a2c', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:30:37,592 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:30:37,893 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_9.gz HTTP/1.1" 200 662
2025-05-13 11:30:37,893 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 11:30:37,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x1058fe480>
2025-05-13 11:30:37,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1058fe2a0>
2025-05-13 11:30:37,893 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'vygXgmN9huG8o1LT57Qu932MInt9U8K3M3rLp0FvWytB9mSRDA0v77AXyNtL1+8slgxUMJNNzFg=', 'x-amz-request-id': '6K2HSZBECG40BS6W', 'Date': 'Tue, 13 May 2025 08:30:38 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:30 GMT', 'ETag': '"5960b6f6c1aebf300645013a5f60f721"', 'x-amz-checksum-crc64nvme': 'x/BnhXcMiJc=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '662', 'Server': 'AmazonS3'}
2025-05-13 11:30:37,893 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x106712e60>
2025-05-13 11:30:37,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1058fe5c0>
2025-05-13 11:30:37,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1064941a0>
2025-05-13 11:30:37,893 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:30:37,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1064942f0>>
2025-05-13 11:30:37,893 - app.app - DEBUG - [app.py:187] - File content length: 662
2025-05-13 11:30:37,893 - app.app - INFO - [app.py:206] - Added 10 results for timestamp 202502022329
2025-05-13 11:30:37,893 - app.app - INFO - [app.py:224] - Total results found: 10
2025-05-13 11:30:37,894 - app.app - DEBUG - [app.py:226] - Results: {'checkout-request-service': [{'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}], 'checkout-payment-service': [{'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\"extraData\\":{\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}},\\"amount_paid\\":1591.0,\\"payment_option_transaction_id\\":\\"9d72720e-3682-428e-9dbd-b474683a9d76\\",\\"gateway_transaction_id\\":\\"672375962477797376\\",\\"currency_code\\":\\"KES\\",\\"country_code\\":\\"KEN\\",\\"account_number\\":\\"acc_3209028\\",\\"customer_name\\":\\"Customer\\",\\"payment_msisdn\\":254700000000,\\"payment_option_narration\\":\\"INV_6799f155a66887.86544965\\",\\"date_payment_received\\":\\"2025-01-29 12:42:06\\",\\"service_charge_amount\\":0.0,\\"service_code\\":\\"KQSBOX\\",\\"gateway_overall_status\\":139,\\"payment_option_code\\":\\"DTBKE-MB\\",\\"psedo_service_code\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}]}
