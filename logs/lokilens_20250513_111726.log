2025-05-13 11:17:26,364 - s3 - INFO - [s3_operations.py:14] - Initializing S3 operations
2025-05-13 11:17:26,365 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
2025-05-13 11:17:26,366 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-call.apigateway to before-call.api-gateway
2025-05-13 11:17:26,366 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
2025-05-13 11:17:26,366 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
2025-05-13 11:17:26,366 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
2025-05-13 11:17:26,367 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
2025-05-13 11:17:26,367 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
2025-05-13 11:17:26,368 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
2025-05-13 11:17:26,368 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
2025-05-13 11:17:26,368 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
2025-05-13 11:17:26,368 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
2025-05-13 11:17:26,371 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/endpoints.json
2025-05-13 11:17:26,381 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/sdk-default-configuration.json
2025-05-13 11:17:26,382 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-service-name: calling handler <function handle_service_name_alias at 0x1081eb420>
2025-05-13 11:17:26,395 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-05-13 11:17:26,400 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-05-13 11:17:26,411 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-05-13 11:17:26,420 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/partitions.json
2025-05-13 11:17:26,421 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x10816d800>
2025-05-13 11:17:26,421 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x108284f40>
2025-05-13 11:17:26,431 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x10816d580>
2025-05-13 11:17:26,431 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_service
2025-05-13 11:17:26,431 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_global
2025-05-13 11:17:26,432 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_service
2025-05-13 11:17:26,432 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_global
2025-05-13 11:17:26,432 - botocore.configprovider - DEBUG - [configprovider.py:1005] - No configured endpoint found.
2025-05-13 11:17:26,437 - botocore.endpoint - DEBUG - [endpoint.py:414] - Setting s3 timeout as (60, 60)
2025-05-13 11:17:26,440 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/_retry.json
2025-05-13 11:17:26,440 - botocore.client - DEBUG - [client.py:290] - Registering retry handlers for service: s3
2025-05-13 11:17:26,440 - botocore.utils - DEBUG - [utils.py:1718] - Registering S3 region redirector handler
2025-05-13 11:17:26,440 - botocore.utils - DEBUG - [utils.py:1666] - Registering S3Express Identity Resolver
2025-05-13 11:17:26,440 - s3 - INFO - [s3_operations.py:24] - S3 client initialized successfully
2025-05-13 11:17:26,442 - mcp.server.lowlevel.server - DEBUG - [server.py:146] - Initializing server 'LokiLens MCP'
2025-05-13 11:17:26,442 - mcp.server.lowlevel.server - DEBUG - [server.py:385] - Registering handler for ListToolsRequest
2025-05-13 11:17:26,442 - fastapi_mcp.server - DEBUG - [server.py:34] - Registering handler for CallToolRequest
2025-05-13 11:17:26,443 - mcp.server.sse - DEBUG - [sse.py:84] - SseServerTransport initialized with endpoint: /mcp/messages/
2025-05-13 11:17:26,443 - fastapi_mcp.server - INFO - [server.py:285] - No auth config provided, skipping auth setup
2025-05-13 11:17:26,443 - fastapi_mcp.server - INFO - [server.py:359] - MCP server listening at /mcp
2025-05-13 11:18:00,002 - mcp.server.sse - DEBUG - [sse.py:92] - Setting up SSE connection
2025-05-13 11:18:00,003 - mcp.server.sse - DEBUG - [sse.py:105] - Created new session with ID: c56df8d4-dd6d-41c0-99df-b6ae50bfd4ea
2025-05-13 11:18:00,015 - mcp.server.sse - DEBUG - [sse.py:143] - Starting SSE response task
2025-05-13 11:18:00,015 - mcp.server.sse - DEBUG - [sse.py:146] - Yielding read and write streams
2025-05-13 11:18:00,016 - mcp.server.sse - DEBUG - [sse.py:112] - Starting SSE writer
2025-05-13 11:18:00,016 - mcp.server.sse - DEBUG - [sse.py:115] - Sent endpoint event: /mcp/messages/?session_id=c56df8d4dd6d41c099dfb6ae50bfd4ea
2025-05-13 11:18:00,017 - sse_starlette.sse - DEBUG - [sse.py:161] - chunk: b'event: endpoint\r\ndata: /mcp/messages/?session_id=c56df8d4dd6d41c099dfb6ae50bfd4ea\r\n\r\n'
2025-05-13 11:18:00,019 - sse_starlette.sse - DEBUG - [sse.py:182] - Got event: http.disconnect. Stop streaming.
2025-05-13 11:18:00,019 - root - DEBUG - [sse.py:141] - Client session disconnected c56df8d4-dd6d-41c0-99df-b6ae50bfd4ea
2025-05-13 11:18:21,953 - app.app - INFO - [app.py:140] - Received API request: search_id=672375962477797376, time_ranges=['202502022329']
2025-05-13 11:18:21,954 - app.app - INFO - [app.py:158] - Starting search for ID: 672375962477797376
2025-05-13 11:18:21,954 - app.app - INFO - [app.py:159] - Time ranges: ['202502022329']
2025-05-13 11:18:21,954 - app.app - INFO - [app.py:160] - Using bucket: cellogs
2025-05-13 11:18:21,954 - app.app - DEBUG - [app.py:79] - Attempting to parse timestamp: 202502022329
2025-05-13 11:18:21,956 - app.app - DEBUG - [app.py:92] - Successfully parsed timestamp with format %Y%m%d%H%M: 2025-02-02 23:29:00
2025-05-13 11:18:21,956 - app.app - INFO - [app.py:166] - Searching for timestamp: 2025-02-02 23:29:00
2025-05-13 11:18:21,956 - app.app - INFO - [app.py:170] - Searching for S3 files with prefix: 202502022329
2025-05-13 11:18:21,956 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: logs/202502022329
2025-05-13 11:18:21,957 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1082111c0>
2025-05-13 11:18:21,957 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1081ebce0>
2025-05-13 11:18:21,957 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x108211f80>
2025-05-13 11:18:21,957 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:21,957 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:21,957 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1081ebb00>
2025-05-13 11:18:21,957 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x108212700>
2025-05-13 11:18:21,957 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x108212160>
2025-05-13 11:18:21,957 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:21,958 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'logs/202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:18:21,958 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:18:21,958 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:18:21,958 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:18:21,958 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1082100e0>
2025-05-13 11:18:21,958 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:21,958 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1081eb6a0>
2025-05-13 11:18:21,958 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x108212660>
2025-05-13 11:18:21,958 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x108211620>
2025-05-13 11:18:21,958 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'logs/202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108d22120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'logs/202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'logs/202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 11:18:21,959 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108d21fd0>>
2025-05-13 11:18:21,959 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:21,959 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1081eb920>
2025-05-13 11:18:21,959 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1082120c0>
2025-05-13 11:18:21,959 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1082127a0>
2025-05-13 11:18:21,959 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:21,960 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:18:21,960 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=logs%2F202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T081821Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:18:21,960 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T081821Z
20250513/us-east-1/s3/aws4_request
abd4cb8a343bf7beff5825ed48fd6db783b4043ad74a2826507486bad90e55bd
2025-05-13 11:18:21,960 - botocore.auth - DEBUG - [auth.py:436] - Signature:
5a45a14faddc2099398c1c88d3a62b3dd0282a36fe182a922698edf5d13f126f
2025-05-13 11:18:21,960 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x108cab890>>
2025-05-13 11:18:21,960 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x108211ee0>
2025-05-13 11:18:21,960 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T081821Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=5a45a14faddc2099398c1c88d3a62b3dd0282a36fe182a922698edf5d13f126f', 'amz-sdk-invocation-id': b'00f02d15-5191-4411-9b78-e702fb716c40', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:18:21,966 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:18:21,966 - urllib3.connectionpool - DEBUG - [connectionpool.py:1049] - Starting new HTTPS connection (1): cellogs.s3.amazonaws.com:443
2025-05-13 11:18:22,789 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=logs%2F202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 11:18:22,789 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x108212480>
2025-05-13 11:18:22,790 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1082122a0>
2025-05-13 11:18:22,790 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'j2zkw0C543TKgaPp2ege2XCNvQor6e8rcQCg1tgaGQP4wOE/XuXlBWDMRYs7izqYV8J7wHL1GAc=', 'x-amz-request-id': 'R1A18HTTF5RYB2Z0', 'Date': 'Tue, 13 May 2025 08:18:23 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 11:18:22,790 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>logs/202502022329</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 11:18:22,790 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1082125c0>
2025-05-13 11:18:22,790 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x108da81a0>
2025-05-13 11:18:22,790 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:18:22,790 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x108211300>
2025-05-13 11:18:22,791 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: kubernetes.var.log.containers/202502022329
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1082111c0>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1081ebce0>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x108211f80>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1081ebb00>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x108212700>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x108212160>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:22,791 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'kubernetes.var.log.containers/202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:18:22,791 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:18:22,791 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:18:22,791 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1082100e0>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1081eb6a0>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x108212660>
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x108211620>
2025-05-13 11:18:22,791 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'kubernetes.var.log.containers/202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108d22120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 11:18:22,791 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108d21fd0>>
2025-05-13 11:18:22,792 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:22,792 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1081eb920>
2025-05-13 11:18:22,792 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1082120c0>
2025-05-13 11:18:22,792 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1082127a0>
2025-05-13 11:18:22,792 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:22,792 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:18:22,792 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=kubernetes.var.log.containers%2F202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T081822Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:18:22,792 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T081822Z
20250513/us-east-1/s3/aws4_request
91560783be9a7c2e30f07bb7b958261c5719cb504be66c6f1e14a62144720019
2025-05-13 11:18:22,792 - botocore.auth - DEBUG - [auth.py:436] - Signature:
68456374f4e40aec2fee85b4958c0aaa3c730370b91ba1ebc99ee35bd7ea2551
2025-05-13 11:18:22,792 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x108cab890>>
2025-05-13 11:18:22,792 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x108211ee0>
2025-05-13 11:18:22,792 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T081822Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=68456374f4e40aec2fee85b4958c0aaa3c730370b91ba1ebc99ee35bd7ea2551', 'amz-sdk-invocation-id': b'63928776-082c-4591-907a-7506771d9079', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:18:22,792 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:18:23,053 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 11:18:23,053 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x108212480>
2025-05-13 11:18:23,053 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1082122a0>
2025-05-13 11:18:23,053 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'DRvXTtATaWmC2Vcq7nW6VW6ZVRnIS3E6Zh5ifPvOWeoeineJt1qL8MPFC6RWbGFxNVfz+7h3ezI=', 'x-amz-request-id': '7G90WD71S27TSEM9', 'Date': 'Tue, 13 May 2025 08:18:24 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 11:18:23,053 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>kubernetes.var.log.containers/202502022329</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1082125c0>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x108da81a0>
2025-05-13 11:18:23,054 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x108211300>
2025-05-13 11:18:23,054 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: 202502022329
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1082111c0>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1081ebce0>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x108211f80>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1081ebb00>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x108212700>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x108212160>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:23,054 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': '202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:18:23,054 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:18:23,054 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:18:23,054 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1082100e0>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1081eb6a0>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x108212660>
2025-05-13 11:18:23,054 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x108211620>
2025-05-13 11:18:23,054 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': '202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108d22120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': '202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': '202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 11:18:23,055 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108d21fd0>>
2025-05-13 11:18:23,055 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:23,055 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1081eb920>
2025-05-13 11:18:23,055 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1082120c0>
2025-05-13 11:18:23,055 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1082127a0>
2025-05-13 11:18:23,055 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:23,055 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:18:23,055 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T081823Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:18:23,055 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T081823Z
20250513/us-east-1/s3/aws4_request
0cd92037a259697f40f8cc8f6569dff8c0b48742dd928c2f8d7e2e6dfa32d1c7
2025-05-13 11:18:23,055 - botocore.auth - DEBUG - [auth.py:436] - Signature:
e45500323d182dea0a80863c260b2696c8a3094d3df67b00fce4f4b09e00137f
2025-05-13 11:18:23,055 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x108cab890>>
2025-05-13 11:18:23,055 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x108211ee0>
2025-05-13 11:18:23,055 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T081823Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=e45500323d182dea0a80863c260b2696c8a3094d3df67b00fce4f4b09e00137f', 'amz-sdk-invocation-id': b'b73f564c-f9df-4102-81e7-6bc18ccf817f', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:18:23,055 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:18:23,312 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 11:18:23,313 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x108212480>
2025-05-13 11:18:23,313 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1082122a0>
2025-05-13 11:18:23,313 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'Dd8s9ll5hfc9RGnuQMdyW5jS4QzioJTIzOwsFzR0qCpNGWbkO7ZYN1AAVqJP4Wb3y8rLcJajcEQ=', 'x-amz-request-id': '7G9D7Y6DVQN0EJYW', 'Date': 'Tue, 13 May 2025 08:18:24 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 11:18:23,313 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>202502022329</Prefix><KeyCount>3</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated><Contents><Key>202502022329_11.gz</Key><LastModified>2025-02-06T12:20:31.000Z</LastModified><ETag>&quot;2a5c590614a9ea9585cfa4ff37e0e948&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>857</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>202502022329_16.gz</Key><LastModified>2025-02-06T12:20:34.000Z</LastModified><ETag>&quot;0a132731b8895ac922d0484826b9eae0&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>126877</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>202502022329_9.gz</Key><LastModified>2025-02-06T12:20:30.000Z</LastModified><ETag>&quot;5960b6f6c1aebf300645013a5f60f721&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>662</Size><StorageClass>STANDARD</StorageClass></Contents></ListBucketResult>'
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1082125c0>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x108da81a0>
2025-05-13 11:18:23,315 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x108211300>
2025-05-13 11:18:23,315 - s3 - INFO - [s3_operations.py:126] - Found 3 files with prefix 202502022329
2025-05-13 11:18:23,315 - app.app - INFO - [app.py:178] - Found 3 files with prefix 202502022329
2025-05-13 11:18:23,315 - app.app - DEBUG - [app.py:181] - Files found: ['202502022329_11.gz', '202502022329_16.gz', '202502022329_9.gz']
2025-05-13 11:18:23,315 - app.app - INFO - [app.py:185] - Processing file: 202502022329_11.gz
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1081ebd80>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1081ebce0>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x108211f80>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1081ebb00>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x108212700>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x108212160>
2025-05-13 11:18:23,315 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:23,315 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_11.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:18:23,315 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:18:23,315 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:18:23,316 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1082100e0>
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1081eb6a0>
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x108212660>
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x108211620>
2025-05-13 11:18:23,316 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_11.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_11.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_11.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108d22120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_11.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_11.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108d21fd0>>
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1081eb920>
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1082120c0>
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1082127a0>
2025-05-13 11:18:23,316 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:23,316 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:18:23,316 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_11.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T081823Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:18:23,316 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T081823Z
20250513/us-east-1/s3/aws4_request
e33d5a74737c86bcac24f1dd7aa19ba5e06715cb8c89a7d30e39352f86abe487
2025-05-13 11:18:23,316 - botocore.auth - DEBUG - [auth.py:436] - Signature:
3b01112ceedf4e847830d0eb4b1accc5ab78df21e3c54f08635e8e6aa22eb525
2025-05-13 11:18:23,317 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x108cab890>>
2025-05-13 11:18:23,317 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x108211ee0>
2025-05-13 11:18:23,317 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_11.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T081823Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=3b01112ceedf4e847830d0eb4b1accc5ab78df21e3c54f08635e8e6aa22eb525', 'amz-sdk-invocation-id': b'26891ef8-448a-4958-a03a-7a6e436fdaf0', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:18:23,317 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:18:23,683 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_11.gz HTTP/1.1" 200 857
2025-05-13 11:18:23,683 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 11:18:23,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x108212480>
2025-05-13 11:18:23,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1082122a0>
2025-05-13 11:18:23,683 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'LdIfXfm+aYl/kcKEbzL/xFUfARFY1YVkQwQH663ASItGDWKvqBMpO8UZom5oi6Oh4jNJGfbOnII=', 'x-amz-request-id': '7G9F99TW0RKG0HHV', 'Date': 'Tue, 13 May 2025 08:18:24 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:31 GMT', 'ETag': '"2a5c590614a9ea9585cfa4ff37e0e948"', 'x-amz-checksum-crc64nvme': 'ZS20/Riisl0=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '857', 'Server': 'AmazonS3'}
2025-05-13 11:18:23,683 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x108e27700>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1082125c0>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x108da81a0>
2025-05-13 11:18:23,684 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:23,684 - app.app - DEBUG - [app.py:187] - File content length: 857
2025-05-13 11:18:23,684 - app.app - INFO - [app.py:185] - Processing file: 202502022329_16.gz
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1081ebd80>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1081ebce0>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x108211f80>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1081ebb00>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x108212700>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x108212160>
2025-05-13 11:18:23,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:23,684 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_16.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:18:23,684 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:18:23,684 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:18:23,684 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1082100e0>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1081eb6a0>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x108212660>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x108211620>
2025-05-13 11:18:23,685 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_16.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_16.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_16.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108d22120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_16.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_16.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108d21fd0>>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1081eb920>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1082120c0>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1082127a0>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:23,685 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:18:23,685 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_16.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T081823Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:18:23,685 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T081823Z
20250513/us-east-1/s3/aws4_request
af95bf88b141e06936d038a143b706dd6d80c0d160d4633e2b7bc07e9d1ea451
2025-05-13 11:18:23,685 - botocore.auth - DEBUG - [auth.py:436] - Signature:
1e091429cbdaef599f91adcfac1644fc6b90f8bcd0d1e8ada62fc4a9ef787527
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x108cab890>>
2025-05-13 11:18:23,685 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x108211ee0>
2025-05-13 11:18:23,685 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_16.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T081823Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=1e091429cbdaef599f91adcfac1644fc6b90f8bcd0d1e8ada62fc4a9ef787527', 'amz-sdk-invocation-id': b'cc875f3d-42b0-42c0-b264-607d3de6b999', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:18:23,685 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:18:24,016 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_16.gz HTTP/1.1" 200 126877
2025-05-13 11:18:24,016 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 11:18:24,016 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x108212480>
2025-05-13 11:18:24,016 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1082122a0>
2025-05-13 11:18:24,016 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': '+6LHina1y93NLb4x7GSlUggsjUZL29mywFz2Pj8qsJIuGVLHOLDIGOdsxSkFjn2aHKop0ayIWvU=', 'x-amz-request-id': 'VAJARSPHK1AJRHNA', 'Date': 'Tue, 13 May 2025 08:18:25 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:34 GMT', 'ETag': '"0a132731b8895ac922d0484826b9eae0"', 'x-amz-checksum-crc64nvme': 'kMtAdae3Sso=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '126877', 'Server': 'AmazonS3'}
2025-05-13 11:18:24,016 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x108e26590>
2025-05-13 11:18:24,016 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1082125c0>
2025-05-13 11:18:24,016 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x108da81a0>
2025-05-13 11:18:24,016 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:18:24,016 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:24,506 - app.app - DEBUG - [app.py:187] - File content length: 126877
2025-05-13 11:18:24,511 - app.app - INFO - [app.py:191] - Found matches in file 202502022329_16.gz
2025-05-13 11:18:24,511 - app.app - DEBUG - [app.py:192] - Matches: defaultdict(<class 'list'>, {'checkout-request-service': ['2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}'], 'checkout-payment-service': ['2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\"extraData\\":{\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}},\\"amount_paid\\":1591.0,\\"payment_option_transaction_id\\":\\"9d72720e-3682-428e-9dbd-b474683a9d76\\",\\"gateway_transaction_id\\":\\"672375962477797376\\",\\"currency_code\\":\\"KES\\",\\"country_code\\":\\"KEN\\",\\"account_number\\":\\"acc_3209028\\",\\"customer_name\\":\\"Customer\\",\\"payment_msisdn\\":254700000000,\\"payment_option_narration\\":\\"INV_6799f155a66887.86544965\\",\\"date_payment_received\\":\\"2025-01-29 12:42:06\\",\\"service_charge_amount\\":0.0,\\"service_code\\":\\"KQSBOX\\",\\"gateway_overall_status\\":139,\\"payment_option_code\\":\\"DTBKE-MB\\",\\"psedo_service_code\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}']})
2025-05-13 11:18:24,512 - app.app - INFO - [app.py:185] - Processing file: 202502022329_9.gz
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1081ebd80>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1081ebce0>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x108211f80>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1081ebb00>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x108212700>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x108212160>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:24,512 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_9.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 11:18:24,512 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 11:18:24,512 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 11:18:24,512 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1082100e0>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:24,512 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1081eb6a0>
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x108212660>
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x108211620>
2025-05-13 11:18:24,513 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_9.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_9.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_9.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108d22120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_9.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_9.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108d21fd0>>
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1082970e0>>
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1081eb920>
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1082120c0>
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1082127a0>
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x108da8440>>
2025-05-13 11:18:24,513 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 11:18:24,513 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_9.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T081824Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 11:18:24,513 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T081824Z
20250513/us-east-1/s3/aws4_request
dad24c11a22599bc985458c69e4e83c1bbc440b2b88452b8ce8dc42ccff9ab10
2025-05-13 11:18:24,513 - botocore.auth - DEBUG - [auth.py:436] - Signature:
dcd55d537feadeb5d4641c2e90ac126b1439c996a87f3bac10480156bbd4d851
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x108cab890>>
2025-05-13 11:18:24,513 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x108211ee0>
2025-05-13 11:18:24,513 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_9.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T081824Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=dcd55d537feadeb5d4641c2e90ac126b1439c996a87f3bac10480156bbd4d851', 'amz-sdk-invocation-id': b'865df756-853c-49ae-b38c-d7d808fe1ce9', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 11:18:24,514 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 11:18:24,781 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_9.gz HTTP/1.1" 200 662
2025-05-13 11:18:24,781 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 11:18:24,781 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x108212480>
2025-05-13 11:18:24,781 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1082122a0>
2025-05-13 11:18:24,781 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'ENx1SzWCvarZXplM2OjI5d8M+nXbpU5jIKuevOfg5rE9JcN9io/9UiNKgojWDwZjTktkRCmO5J8=', 'x-amz-request-id': 'VAJBG308KHVTJKX5', 'Date': 'Tue, 13 May 2025 08:18:25 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:30 GMT', 'ETag': '"5960b6f6c1aebf300645013a5f60f721"', 'x-amz-checksum-crc64nvme': 'x/BnhXcMiJc=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '662', 'Server': 'AmazonS3'}
2025-05-13 11:18:24,781 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x108e27640>
2025-05-13 11:18:24,782 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1082125c0>
2025-05-13 11:18:24,782 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x108da81a0>
2025-05-13 11:18:24,782 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 11:18:24,782 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x108da82f0>>
2025-05-13 11:18:24,782 - app.app - DEBUG - [app.py:187] - File content length: 662
2025-05-13 11:18:24,782 - app.app - INFO - [app.py:206] - Added 10 results for timestamp 202502022329
2025-05-13 11:18:24,782 - app.app - INFO - [app.py:224] - Total results found: 10
2025-05-13 11:18:24,782 - app.app - DEBUG - [app.py:226] - Results: {'checkout-request-service': [{'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}], 'checkout-payment-service': [{'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\"extraData\\":{\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}},\\"amount_paid\\":1591.0,\\"payment_option_transaction_id\\":\\"9d72720e-3682-428e-9dbd-b474683a9d76\\",\\"gateway_transaction_id\\":\\"672375962477797376\\",\\"currency_code\\":\\"KES\\",\\"country_code\\":\\"KEN\\",\\"account_number\\":\\"acc_3209028\\",\\"customer_name\\":\\"Customer\\",\\"payment_msisdn\\":254700000000,\\"payment_option_narration\\":\\"INV_6799f155a66887.86544965\\",\\"date_payment_received\\":\\"2025-01-29 12:42:06\\",\\"service_charge_amount\\":0.0,\\"service_code\\":\\"KQSBOX\\",\\"gateway_overall_status\\":139,\\"payment_option_code\\":\\"DTBKE-MB\\",\\"psedo_service_code\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}]}
