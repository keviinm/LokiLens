2025-05-13 10:02:58,994 - slack - INFO - [slack_app.py:24] - Loading environment variables...
2025-05-13 10:02:58,995 - slack - INFO - [slack_app.py:26] - Environment variables loaded successfully
2025-05-13 10:02:58,995 - slack - INFO - [slack_app.py:29] - Initializing Slack app...
2025-05-13 10:02:59,034 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 10:02:59,573 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 07:02:59 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '05a7d30b45964bbb073cb7b211d519e2', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'commands,chat:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCLuo2CnVmn6alGFrcKtewABAAQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '189', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-cemgrltd,envoy-edge-cpt-nqbcbnxt', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '253', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-laua', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https:\/\/cell-logs.slack.com\/","team":"Cell-logs","user":"lokilens","team_id":"T08RN80K1N3","user_id":"U08SQGNTJU8","bot_id":"B08SQGNSACQ","is_enterprise_install":false}
2025-05-13 10:02:59,574 - slack - INFO - [slack_app.py:31] - Slack app initialized successfully
2025-05-13 10:02:59,574 - slack - INFO - [slack_app.py:34] - Initializing S3 operations...
2025-05-13 10:02:59,574 - s3 - INFO - [s3_operations.py:14] - Initializing S3 operations
2025-05-13 10:02:59,574 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
2025-05-13 10:02:59,575 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-call.apigateway to before-call.api-gateway
2025-05-13 10:02:59,576 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
2025-05-13 10:02:59,576 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
2025-05-13 10:02:59,576 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
2025-05-13 10:02:59,576 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
2025-05-13 10:02:59,577 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
2025-05-13 10:02:59,577 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
2025-05-13 10:02:59,578 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
2025-05-13 10:02:59,578 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
2025-05-13 10:02:59,578 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
2025-05-13 10:02:59,581 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/endpoints.json
2025-05-13 10:02:59,593 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/sdk-default-configuration.json
2025-05-13 10:02:59,593 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-service-name: calling handler <function handle_service_name_alias at 0x101e6d620>
2025-05-13 10:02:59,613 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-05-13 10:02:59,619 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-05-13 10:02:59,637 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-05-13 10:02:59,639 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/partitions.json
2025-05-13 10:02:59,640 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x101d936a0>
2025-05-13 10:02:59,640 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x1039ade40>
2025-05-13 10:02:59,656 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x101d93420>
2025-05-13 10:02:59,656 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_service
2025-05-13 10:02:59,656 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_global
2025-05-13 10:02:59,656 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_service
2025-05-13 10:02:59,656 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_global
2025-05-13 10:02:59,656 - botocore.configprovider - DEBUG - [configprovider.py:1005] - No configured endpoint found.
2025-05-13 10:02:59,657 - botocore.endpoint - DEBUG - [endpoint.py:414] - Setting s3 timeout as (60, 60)
2025-05-13 10:02:59,658 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/_retry.json
2025-05-13 10:02:59,659 - botocore.client - DEBUG - [client.py:290] - Registering retry handlers for service: s3
2025-05-13 10:02:59,659 - botocore.utils - DEBUG - [utils.py:1718] - Registering S3 region redirector handler
2025-05-13 10:02:59,659 - botocore.utils - DEBUG - [utils.py:1666] - Registering S3Express Identity Resolver
2025-05-13 10:02:59,659 - s3 - INFO - [s3_operations.py:24] - S3 client initialized successfully
2025-05-13 10:02:59,659 - slack - INFO - [slack_app.py:39] - S3 operations initialized successfully
2025-05-13 10:02:59,659 - slack - INFO - [slack_app.py:42] - Initializing OpenAI client...
2025-05-13 10:02:59,679 - slack - INFO - [slack_app.py:44] - OpenAI client initialized successfully
2025-05-13 10:02:59,679 - slack - INFO - [slack_app.py:47] - Initializing MCP client...
2025-05-13 10:02:59,679 - mcp - INFO - [mcp_client.py:30] - Initializing LogSearchClient...
2025-05-13 10:02:59,679 - mcp - INFO - [mcp_client.py:45] - Initializing OpenAI client...
2025-05-13 10:02:59,685 - mcp - INFO - [mcp_client.py:48] - OpenAI client initialized successfully
2025-05-13 10:02:59,685 - mcp - INFO - [mcp_client.py:53] - Initializing MCP tools...
2025-05-13 10:02:59,685 - mcp - INFO - [mcp_client.py:165] - Connecting to MCP server at http://localhost:8000/mcp
2025-05-13 10:02:59,687 - urllib3.connectionpool - DEBUG - [connectionpool.py:241] - Starting new HTTP connection (1): localhost:8000
2025-05-13 10:02:59,695 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - http://localhost:8000 "GET /mcp HTTP/1.1" 200 None
2025-05-13 10:02:59,695 - mcp - INFO - [mcp_client.py:180] - Response status code: 200
2025-05-13 10:02:59,695 - mcp - INFO - [mcp_client.py:181] - Response headers: {'date': 'Tue, 13 May 2025 07:02:59 GMT', 'server': 'uvicorn', 'cache-control': 'no-store', 'connection': 'keep-alive', 'x-accel-buffering': 'no', 'content-type': 'text/event-stream; charset=utf-8', 'Transfer-Encoding': 'chunked'}
2025-05-13 10:02:59,695 - sseclient - DEBUG - [__init__.py:32] - Initialized SSE client from event source <Response [200]>
2025-05-13 10:02:59,695 - sseclient - DEBUG - [__init__.py:108] - Dispatching endpoint event, 58 bytes...
2025-05-13 10:02:59,695 - mcp - INFO - [mcp_client.py:190] - Received session ID: f13968dcb2094a70bb522b55597316ef
2025-05-13 10:02:59,695 - mcp - INFO - [mcp_client.py:56] - MCP tools initialized successfully
2025-05-13 10:02:59,695 - slack - INFO - [slack_app.py:49] - MCP client initialized successfully
2025-05-13 10:02:59,695 - __main__ - INFO - [main.py:34] - 🚀 Starting Loki Lens application...
2025-05-13 10:02:59,696 - s3 - INFO - [s3_operations.py:14] - Initializing S3 operations
2025-05-13 10:02:59,696 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-service-name: calling handler <function handle_service_name_alias at 0x101e6d620>
2025-05-13 10:02:59,696 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x101d936a0>
2025-05-13 10:02:59,696 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x1039ade40>
2025-05-13 10:02:59,696 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x101d93420>
2025-05-13 10:02:59,696 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_service
2025-05-13 10:02:59,696 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_global
2025-05-13 10:02:59,696 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_service
2025-05-13 10:02:59,696 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_global
2025-05-13 10:02:59,696 - botocore.configprovider - DEBUG - [configprovider.py:1005] - No configured endpoint found.
2025-05-13 10:02:59,697 - botocore.endpoint - DEBUG - [endpoint.py:414] - Setting s3 timeout as (60, 60)
2025-05-13 10:02:59,698 - botocore.client - DEBUG - [client.py:290] - Registering retry handlers for service: s3
2025-05-13 10:02:59,698 - botocore.utils - DEBUG - [utils.py:1718] - Registering S3 region redirector handler
2025-05-13 10:02:59,698 - botocore.utils - DEBUG - [utils.py:1666] - Registering S3Express Identity Resolver
2025-05-13 10:02:59,699 - s3 - INFO - [s3_operations.py:24] - S3 client initialized successfully
2025-05-13 10:02:59,699 - slack - INFO - [slack_app.py:251] - Starting Slack app in Socket Mode
2025-05-13 10:02:59,699 - __main__ - INFO - [main.py:53] - ✅ Slack integration started
2025-05-13 10:02:59,724 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/apps.connections.open, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 10:03:00,345 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 07:03:00 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '642a5e8b85ed7894fc1360b62ccfb67f', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'x-robots-tag': 'noindex,nofollow', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'connections:write', 'x-oauth-scopes': 'connections:write,authorizations:read', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCLupPE_t3c5EvTSLhcdXQAAkC8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '173', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-jznbxsau,envoy-edge-cpt-ngllflrp', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '304', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cntg', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"wss:\/\/wss-primary.slack.com\/link\/?ticket=89bb3c0a-24a0-482e-8366-3922e86ab0db&app_id=80ecbf266142da985b68b05f1ff313c100b9cdf30b305f7e8a16dce5f531ab94"}
2025-05-13 10:03:01,314 - slack_bolt.App - INFO - [client.py:193] - A new session has been established (session id: 1edd0f54-ebab-4385-b432-b4a345ffc280)
2025-05-13 10:03:01,321 - slack_bolt.App - INFO - [base_handler.py:51] - ⚡️ Bolt app is running!
2025-05-13 10:03:01,358 - slack_bolt.App - INFO - [client.py:266] - Starting to receive messages from a new connection (session id: 1edd0f54-ebab-4385-b432-b4a345ffc280)
2025-05-13 10:03:01,364 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"type":"hello","num_connections":1,"debug_info":{"host":"applink-6","build_number":117,"approximate_connection_time":18060},"connection_info":{"app_id":"A08SQGEHMSL"}})
2025-05-13 10:03:01,364 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 10:03:01,371 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 10:03:01,371 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: hello, envelope_id: None)
2025-05-13 10:03:01,371 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: hello, envelope_id: None)
2025-05-13 10:03:11,025 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"98276335-bb20-48b4-ad64-fe5cd7a32924","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","team_domain":"cell-logs","channel_id":"C08RN80PTP1","channel_name":"all-cell-logs","user_id":"U08RN80KECX","user_name":"emmanuel.kipngetich","command":"\/lokilens","text":"67890 happened on May 13th at 9:33 AM","api_app_id":"A08SQGEHMSL","is_enterprise_install":"false","response_url":"https:\/\/hooks.slack.com\/commands\/T08RN80K1N3\/8900010252545\/IyxzwJvDGrvd44HJHaZ02Yq9","trigger_id":"8900010267921.8872272647751.0b98c0cbc7ff6c496227268c518ca095"},"type":"slash_commands","accepts_response_payload":true})
2025-05-13 10:03:11,032 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 10:03:11,038 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 10:03:11,058 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: slash_commands, envelope_id: 98276335-bb20-48b4-ad64-fe5cd7a32924)
2025-05-13 10:03:11,062 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 10:03:11,075 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 10:03:11,081 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 10:03:11,081 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 10:03:11,081 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 10:03:11,087 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 10:03:11,088 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 10:03:11,088 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 10:03:11,088 - slack_bolt.App - DEBUG - [app.py:612] - Running listener: handle_lokilens_command ...
2025-05-13 10:03:11,088 - slack - INFO - [slack_app.py:206] - Received /lokilens command: {'token': 'K4ZhpQOf4Bh1W7IgNZugkX3V', 'team_id': 'T08RN80K1N3', 'team_domain': 'cell-logs', 'channel_id': 'C08RN80PTP1', 'channel_name': 'all-cell-logs', 'user_id': 'U08RN80KECX', 'user_name': 'emmanuel.kipngetich', 'command': '/lokilens', 'text': '67890 happened on May 13th at 9:33 AM', 'api_app_id': 'A08SQGEHMSL', 'is_enterprise_install': 'false', 'response_url': 'https://hooks.slack.com/commands/T08RN80K1N3/8900010252545/IyxzwJvDGrvd44HJHaZ02Yq9', 'trigger_id': '8900010267921.8872272647751.0b98c0cbc7ff6c496227268c518ca095'}
2025-05-13 10:03:11,088 - slack - DEBUG - [slack_app.py:211] - Command text: 67890 happened on May 13th at 9:33 AM
2025-05-13 10:03:11,094 - slack_bolt.App - DEBUG - [thread_runner.py:202] - Responding with status: 200 body: "" (5 millis)
2025-05-13 10:03:11,094 - slack - INFO - [slack_app.py:220] - Starting natural language parsing
2025-05-13 10:03:11,107 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 1edd0f54-ebab-4385-b432-b4a345ffc280, message: {"envelope_id": "98276335-bb20-48b4-ad64-fe5cd7a32924"})
2025-05-13 10:03:11,107 - slack - INFO - [slack_app.py:87] - Parsing natural language input: 67890 happened on May 13th at 9:33 AM
2025-05-13 10:03:11,119 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 58 milliseconds
2025-05-13 10:03:11,120 - slack - DEBUG - [slack_app.py:105] - Sending request to OpenAI for parsing
2025-05-13 10:03:11,137 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: slash_commands, envelope_id: 98276335-bb20-48b4-ad64-fe5cd7a32924)
2025-05-13 10:03:17,290 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e3508223-c138-40f2-86a3-d93c74ecf959', 'json_data': {'messages': [{'role': 'user', 'content': "\n    Parse the following text into a search ID and a time range.\n    The time range should be in the format YYYYMMDDHHMM (e.g., 202205130933 for May 13, 2022 at 09:33).\n    If the time is not specified, use the current time.\n    If the date is not specified, use today's date.\n    \n    Text: 67890 happened on May 13th at 9:33 AM\n    \n    Return ONLY the search ID and time range in this exact format:\n    search_id: <id>\n    time_range: <YYYYMMDDHHMM>\n    \n    Do not include any other text or explanation.\n    "}], 'model': 'gpt-4', 'max_tokens': 100}}
2025-05-13 10:03:17,462 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 10:03:17,463 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-13 10:03:17,504 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1087970e0>
2025-05-13 10:03:17,505 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x1086029f0> server_hostname='api.openai.com' timeout=5.0
2025-05-13 10:03:17,550 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x108b4a210>
2025-05-13 10:03:17,557 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 10:03:17,563 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 10:03:17,569 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 10:03:17,582 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 10:03:17,589 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 10:03:18,731 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 07:03:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'879'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'881'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9870'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_25af24f63e725601af172da6c5182dce'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=m6a9zbGSyzNCxNW.La90uMn5s5_RzOA6EsL3Ad.UK90-1747119798-1.0.1.1-xFren8nHQb8c0p2lyVlbqu.gxRxirSYaiN6YJPMRzd575umzkXwcs4qa1zVGJOkX0Kv2LUOWz4vDRbs8e55_oNYLvZHUjKxKiSN0F.Lklyg; path=/; expires=Tue, 13-May-25 07:33:18 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=xgo0mMfKt0J1JUSFf.RedwIn1vQVtkYBEeiXPObEY5A-1747119798996-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f04b909bbd8a6b-MBA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 10:03:18,744 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 10:03:18,757 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 10:03:18,795 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 10:03:18,801 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 10:03:18,807 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 10:03:18,820 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 13 May 2025 07:03:18 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-hhmri584teit9d0pqdaekcnd'), ('openai-processing-ms', '879'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '881'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '10000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '9870'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '780ms'), ('x-request-id', 'req_25af24f63e725601af172da6c5182dce'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=m6a9zbGSyzNCxNW.La90uMn5s5_RzOA6EsL3Ad.UK90-1747119798-1.0.1.1-xFren8nHQb8c0p2lyVlbqu.gxRxirSYaiN6YJPMRzd575umzkXwcs4qa1zVGJOkX0Kv2LUOWz4vDRbs8e55_oNYLvZHUjKxKiSN0F.Lklyg; path=/; expires=Tue, 13-May-25 07:33:18 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=xgo0mMfKt0J1JUSFf.RedwIn1vQVtkYBEeiXPObEY5A-1747119798996-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '93f04b909bbd8a6b-MBA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-13 10:03:18,833 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_25af24f63e725601af172da6c5182dce
2025-05-13 10:03:18,834 - slack - DEBUG - [slack_app.py:114] - Received parsing response: search_id: 67890
time_range: 202205130933
2025-05-13 10:03:18,835 - slack - INFO - [slack_app.py:123] - Successfully parsed input - search_id: 67890, time_range: 202205130933
2025-05-13 10:03:18,835 - slack - INFO - [slack_app.py:222] - Parsed input - search_id: 67890, time_range: 202205130933
2025-05-13 10:03:18,840 - slack - INFO - [slack_app.py:225] - Searching logs using MCP client
2025-05-13 10:03:18,840 - mcp - INFO - [mcp_client.py:239] - Searching logs for ID: 67890 with time ranges: ['202205130933']
2025-05-13 10:03:18,860 - urllib3.connectionpool - DEBUG - [connectionpool.py:241] - Starting new HTTP connection (1): localhost:8000
2025-05-13 10:03:20,180 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - http://localhost:8000 "POST /api/search HTTP/1.1" 200 83
2025-05-13 10:03:20,181 - slack - DEBUG - [slack_app.py:227] - MCP client response: {'search_id': '67890', 'time_ranges': ['202205130933'], 'results': {}, 'total_results': 0}
2025-05-13 10:03:20,181 - slack - INFO - [slack_app.py:237] - Found 0 containers with logs
2025-05-13 10:03:20,181 - slack - INFO - [slack_app.py:240] - Generating response
2025-05-13 10:03:20,181 - slack - INFO - [slack_app.py:53] - Generating response for search_id: 67890
2025-05-13 10:03:20,187 - slack - WARNING - [slack_app.py:56] - No logs found for ID: 67890
2025-05-13 10:03:20,187 - slack - INFO - [slack_app.py:242] - Sending response to Slack
2025-05-13 10:03:20,188 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'C08RN80PTP1', 'text': 'No logs found for ID: 67890. Would you like to try another search?', 'team_id': 'T08RN80K1N3'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 10:03:20,808 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 07:03:20 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '1dababc893e127992851bc21f4b6e906', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'commands,chat:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCLuuDr5SI7Shv9zYR0hawABAAQ', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '884', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-tkyisrry,envoy-edge-cpt-mjtlqirg', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '306', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-dijh', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C08RN80PTP1","ts":"1747119800.898649","message":{"user":"U08SQGNTJU8","type":"message","ts":"1747119800.898649","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"No logs found for ID: 67890. Would you like to try another search?","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","name":"Lokilens","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1747104773,"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"SGHo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No logs found for ID: 67890. Would you like to try another search?"}]}]}]}}
2025-05-13 10:19:39,767 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"ded4b1ab-9d91-4628-93e7-d434cb92e470","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","team_domain":"cell-logs","channel_id":"C08RN80PTP1","channel_name":"all-cell-logs","user_id":"U08RN80KECX","user_name":"emmanuel.kipngetich","command":"\/lokilens","text":"672375962477797376 February 2, 2025, at 23:29","api_app_id":"A08SQGEHMSL","is_enterprise_install":"false","response_url":"https:\/\/hooks.slack.com\/commands\/T08RN80K1N3\/8885171984549\/nZKgThTkwgVd7qQcxnBKORX3","trigger_id":"8885171984645.8872272647751.cb4d30f41147b3b7737b0e2c67447e53"},"type":"slash_commands","accepts_response_payload":true})
2025-05-13 10:19:39,805 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 10:19:39,812 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 10:19:39,858 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: slash_commands, envelope_id: ded4b1ab-9d91-4628-93e7-d434cb92e470)
2025-05-13 10:19:39,896 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 10:19:39,909 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 10:19:39,909 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 10:19:39,923 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 10:19:39,936 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 10:19:39,936 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 10:19:39,948 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 10:19:39,962 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 10:19:39,976 - slack_bolt.App - DEBUG - [app.py:612] - Running listener: handle_lokilens_command ...
2025-05-13 10:19:40,001 - slack - INFO - [slack_app.py:206] - Received /lokilens command: {'token': 'K4ZhpQOf4Bh1W7IgNZugkX3V', 'team_id': 'T08RN80K1N3', 'team_domain': 'cell-logs', 'channel_id': 'C08RN80PTP1', 'channel_name': 'all-cell-logs', 'user_id': 'U08RN80KECX', 'user_name': 'emmanuel.kipngetich', 'command': '/lokilens', 'text': '672375962477797376 February 2, 2025, at 23:29', 'api_app_id': 'A08SQGEHMSL', 'is_enterprise_install': 'false', 'response_url': 'https://hooks.slack.com/commands/T08RN80K1N3/8885171984549/nZKgThTkwgVd7qQcxnBKORX3', 'trigger_id': '8885171984645.8872272647751.cb4d30f41147b3b7737b0e2c67447e53'}
2025-05-13 10:19:40,020 - slack - DEBUG - [slack_app.py:211] - Command text: 672375962477797376 February 2, 2025, at 23:29
2025-05-13 10:19:40,026 - slack_bolt.App - DEBUG - [thread_runner.py:202] - Responding with status: 200 body: "" (38 millis)
2025-05-13 10:19:40,033 - slack - INFO - [slack_app.py:220] - Starting natural language parsing
2025-05-13 10:19:40,046 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 1edd0f54-ebab-4385-b432-b4a345ffc280, message: {"envelope_id": "ded4b1ab-9d91-4628-93e7-d434cb92e470"})
2025-05-13 10:19:40,046 - slack - INFO - [slack_app.py:87] - Parsing natural language input: 672375962477797376 February 2, 2025, at 23:29
2025-05-13 10:19:40,051 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 178 milliseconds
2025-05-13 10:19:40,070 - slack - DEBUG - [slack_app.py:105] - Sending request to OpenAI for parsing
2025-05-13 10:19:40,089 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: slash_commands, envelope_id: ded4b1ab-9d91-4628-93e7-d434cb92e470)
2025-05-13 10:19:40,178 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-03d98e3e-fe32-4c56-b838-128ea43adb8d', 'json_data': {'messages': [{'role': 'user', 'content': "\n    Parse the following text into a search ID and a time range.\n    The time range should be in the format YYYYMMDDHHMM (e.g., 202205130933 for May 13, 2022 at 09:33).\n    If the time is not specified, use the current time.\n    If the date is not specified, use today's date.\n    \n    Text: 672375962477797376 February 2, 2025, at 23:29\n    \n    Return ONLY the search ID and time range in this exact format:\n    search_id: <id>\n    time_range: <YYYYMMDDHHMM>\n    \n    Do not include any other text or explanation.\n    "}], 'model': 'gpt-4', 'max_tokens': 100}}
2025-05-13 10:19:40,207 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 10:19:40,229 - httpcore.connection - DEBUG - [_trace.py:47] - close.started
2025-05-13 10:19:40,252 - httpcore.connection - DEBUG - [_trace.py:47] - close.complete
2025-05-13 10:19:40,264 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-13 10:19:40,337 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x108b4b890>
2025-05-13 10:19:40,338 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x1086029f0> server_hostname='api.openai.com' timeout=5.0
2025-05-13 10:19:40,386 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10871ab10>
2025-05-13 10:19:40,398 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 10:19:40,416 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 10:19:40,423 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 10:19:40,435 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 10:19:40,435 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 10:19:42,259 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 07:19:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'930'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'941'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9868'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_911ba7e8d6c41fd35f856cd57c18e0ba'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=p.AArFeGSua9Cg5.sfP4jsCgv3o0BrAErkq2SbBOFjw-1747120782-1.0.1.1-.lwvxh5aR34VPpGVUnHLCrk.obmeUoAwVXQLUSNhBBRGy9o5wB.cNIDFzpKDXJ9ffI4059.WU7wdTVJt_M1o6oeKp3tU7l7fFJbNL_KAlbk; path=/; expires=Tue, 13-May-25 07:49:42 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f0638f8bb0b19c-NBO'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 10:19:42,274 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 10:19:42,287 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 10:19:42,332 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 10:19:42,345 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 10:19:42,358 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 10:19:42,377 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 07:19:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '930', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '941', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9868', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '792ms', 'x-request-id': 'req_911ba7e8d6c41fd35f856cd57c18e0ba', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=p.AArFeGSua9Cg5.sfP4jsCgv3o0BrAErkq2SbBOFjw-1747120782-1.0.1.1-.lwvxh5aR34VPpGVUnHLCrk.obmeUoAwVXQLUSNhBBRGy9o5wB.cNIDFzpKDXJ9ffI4059.WU7wdTVJt_M1o6oeKp3tU7l7fFJbNL_KAlbk; path=/; expires=Tue, 13-May-25 07:49:42 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f0638f8bb0b19c-NBO', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 10:19:42,389 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_911ba7e8d6c41fd35f856cd57c18e0ba
2025-05-13 10:19:42,394 - slack - DEBUG - [slack_app.py:114] - Received parsing response: search_id: 672375962477797376
time_range: 202502022329
2025-05-13 10:19:42,401 - slack - INFO - [slack_app.py:123] - Successfully parsed input - search_id: 672375962477797376, time_range: 202502022329
2025-05-13 10:19:42,407 - slack - INFO - [slack_app.py:222] - Parsed input - search_id: 672375962477797376, time_range: 202502022329
2025-05-13 10:19:42,413 - slack - INFO - [slack_app.py:225] - Searching logs using MCP client
2025-05-13 10:19:42,425 - mcp - INFO - [mcp_client.py:239] - Searching logs for ID: 672375962477797376 with time ranges: ['202502022329']
2025-05-13 10:19:42,499 - urllib3.connectionpool - DEBUG - [connectionpool.py:241] - Starting new HTTP connection (1): localhost:8000
2025-05-13 10:19:45,263 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - http://localhost:8000 "POST /api/search HTTP/1.1" 200 20802
2025-05-13 10:19:45,288 - slack - DEBUG - [slack_app.py:227] - MCP client response: {'search_id': '672375962477797376', 'time_ranges': ['202502022329'], 'results': {'checkout-request-service': [{'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}], 'checkout-payment-service': [{'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\"extraData\\":{\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}},\\"amount_paid\\":1591.0,\\"payment_option_transaction_id\\":\\"9d72720e-3682-428e-9dbd-b474683a9d76\\",\\"gateway_transaction_id\\":\\"672375962477797376\\",\\"currency_code\\":\\"KES\\",\\"country_code\\":\\"KEN\\",\\"account_number\\":\\"acc_3209028\\",\\"customer_name\\":\\"Customer\\",\\"payment_msisdn\\":254700000000,\\"payment_option_narration\\":\\"INV_6799f155a66887.86544965\\",\\"date_payment_received\\":\\"2025-01-29 12:42:06\\",\\"service_charge_amount\\":0.0,\\"service_code\\":\\"KQSBOX\\",\\"gateway_overall_status\\":139,\\"payment_option_code\\":\\"DTBKE-MB\\",\\"psedo_service_code\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}]}, 'total_results': 10}
2025-05-13 10:19:45,302 - slack - INFO - [slack_app.py:237] - Found 2 containers with logs
2025-05-13 10:19:45,308 - slack - INFO - [slack_app.py:240] - Generating response
2025-05-13 10:19:45,314 - slack - INFO - [slack_app.py:53] - Generating response for search_id: 672375962477797376
2025-05-13 10:19:45,327 - slack - DEBUG - [slack_app.py:60] - Formatting results for OpenAI prompt
2025-05-13 10:19:45,339 - slack - DEBUG - [slack_app.py:74] - Sending request to OpenAI
2025-05-13 10:19:45,347 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6d42a384-3b91-4847-b03c-c73d36ccd81a', 'json_data': {'messages': [{'role': 'user', 'content': '\n    I searched for logs with ID: 672375962477797376. Here are the results:\n    Container: checkout-request-service (2 matches)\n{\'container_name\': \'checkout-request-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\n{\'container_name\': \'checkout-request-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\nContainer: checkout-payment-service (8 matches)\n{\'container_name\': \'checkout-payment-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\\\"extraData\\\\":{\\\\"115651388\\\\":{\\\\"hubID\\\\":0,\\\\"callbackUrl\\\\":\\\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\\\"}},\\\\"amount_paid\\\\":1591.0,\\\\"payment_option_transaction_id\\\\":\\\\"9d72720e-3682-428e-9dbd-b474683a9d76\\\\",\\\\"gateway_transaction_id\\\\":\\\\"672375962477797376\\\\",\\\\"currency_code\\\\":\\\\"KES\\\\",\\\\"country_code\\\\":\\\\"KEN\\\\",\\\\"account_number\\\\":\\\\"acc_3209028\\\\",\\\\"customer_name\\\\":\\\\"Customer\\\\",\\\\"payment_msisdn\\\\":254700000000,\\\\"payment_option_narration\\\\":\\\\"INV_6799f155a66887.86544965\\\\",\\\\"date_payment_received\\\\":\\\\"2025-01-29 12:42:06\\\\",\\\\"service_charge_amount\\\\":0.0,\\\\"service_code\\\\":\\\\"KQSBOX\\\\",\\\\"gateway_overall_status\\\\":139,\\\\"payment_option_code\\\\":\\\\"DTBKE-MB\\\\",\\\\"psedo_service_code\\\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\n{\'container_name\': \'checkout-payment-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\\\"115651388\\\\":{\\\\"hubID\\\\":0,\\\\"callbackUrl\\\\":\\\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\n{\'container_name\': \'checkout-payment-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\n{\'container_name\': \'checkout-payment-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\n{\'container_name\': \'checkout-payment-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\n{\'container_name\': \'checkout-payment-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\n{\'container_name\': \'checkout-payment-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\n{\'container_name\': \'checkout-payment-service\', \'message\': \'2025-02-02T23:29:00+00:00\\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}\', \'timestamp\': \'202502022329\'}\n\n    Can you summarize these logs and suggest any follow-up actions or questions?\n    '}], 'model': 'gpt-4', 'max_tokens': 150}}
2025-05-13 10:19:45,359 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 10:19:45,379 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 10:19:45,396 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 10:19:45,402 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 10:19:45,413 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 10:19:45,414 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 10:19:53,216 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 07:19:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'7481'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'7484'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'5026'), (b'x-ratelimit-reset-requests', b'12.884s'), (b'x-ratelimit-reset-tokens', b'29.844s'), (b'x-request-id', b'req_f1b3ed9d4aa8a885a8ff0e527c6cd2be'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f063ae99a6b19c-NBO'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 10:19:53,234 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 10:19:53,246 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 10:19:53,277 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 10:19:53,290 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 10:19:53,302 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 10:19:53,344 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 07:19:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '7481', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '7484', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '5026', 'x-ratelimit-reset-requests': '12.884s', 'x-ratelimit-reset-tokens': '29.844s', 'x-request-id': 'req_f1b3ed9d4aa8a885a8ff0e527c6cd2be', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f063ae99a6b19c-NBO', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 10:19:53,357 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_f1b3ed9d4aa8a885a8ff0e527c6cd2be
2025-05-13 10:19:53,372 - slack - INFO - [slack_app.py:82] - Successfully generated response from OpenAI
2025-05-13 10:19:53,378 - slack - INFO - [slack_app.py:242] - Sending response to Slack
2025-05-13 10:19:53,394 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'C08RN80PTP1', 'text': "From the logs provided, there seems to be two key services involved: the checkout-request-service and the checkout-payment-service. \n\nThe checkout-request-service was successfully searching and finding transactions based on the requested gatewayTransactionId: 672375962477797376. \n\nThe checkout-payment-service received a payment payload and consecutively provided several successful responses related to service code: KQSBOX. However, while trying to save the payment request, an error occurred. The error message doesn't provide any details about the cause of the issue. \n\nThis indicates there might be a problem within the checkout-payment-service, specifically, while saving the payment requests. \n\nAs a follow-up action, an investigation should be initiated to identify the exact cause that made saving the payment", 'team_id': 'T08RN80K1N3'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 10:19:54,302 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 07:19:54 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '5bfffc5e13ac190cdac86fd12585a670', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'commands,chat:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCLyms65MfxPJ2Ik3g6NrgAAAAc', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '2405', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ngpydany,envoy-edge-bom-njinjxbb', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '298', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-afvz', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C08RN80PTP1","ts":"1747120794.328659","message":{"user":"U08SQGNTJU8","type":"message","ts":"1747120794.328659","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"From the logs provided, there seems to be two key services involved: the checkout-request-service and the checkout-payment-service. \n\nThe checkout-request-service was successfully searching and finding transactions based on the requested gatewayTransactionId: 672375962477797376. \n\nThe checkout-payment-service received a payment payload and consecutively provided several successful responses related to service code: KQSBOX. However, while trying to save the payment request, an error occurred. The error message doesn't provide any details about the cause of the issue. \n\nThis indicates there might be a problem within the checkout-payment-service, specifically, while saving the payment requests. \n\nAs a follow-up action, an investigation should be initiated to identify the exact cause that made saving the payment","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","name":"Lokilens","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1747104773,"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"BW0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From the logs provided, there seems to be two key services involved: the checkout-request-service and the checkout-payment-service. \n\nThe checkout-request-service was successfully searching and finding transactions based on the requested gatewayTransactionId: 672375962477797376. \n\nThe checkout-payment-service received a payment payload and consecutively provided several successful responses related to service code: KQSBOX. However, while trying to save the payment request, an error occurred. The error message doesn't provide any details about the cause of the issue. \n\nThis indicates there might be a problem within the checkout-payment-service, specifically, while saving the payment requests. \n\nAs a follow-up action, an investigation should be initiated to identify the exact cause that made saving the payment"}]}]}]}}
2025-05-13 10:30:10,840 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"85f62253-ec2e-4d40-8676-7ea7858b9829","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","team_domain":"cell-logs","channel_id":"C08RN80PTP1","channel_name":"all-cell-logs","user_id":"U08RN80KECX","user_name":"emmanuel.kipngetich","command":"\/lokilens","text":"what are the errors that happened on  February 2, 2025, at 23:29","api_app_id":"A08SQGEHMSL","is_enterprise_install":"false","response_url":"https:\/\/hooks.slack.com\/commands\/T08RN80K1N3\/8883724737491\/K1AMhF31Lq2czzbzoSKly7kW","trigger_id":"8883724737667.8872272647751.ea185d860c68acb356da69e55326217e"},"type":"slash_commands","accepts_response_payload":true})
2025-05-13 10:30:10,860 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 10:30:10,867 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 10:30:10,915 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: slash_commands, envelope_id: 85f62253-ec2e-4d40-8676-7ea7858b9829)
2025-05-13 10:30:10,957 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 10:30:10,963 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 10:30:10,975 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 10:30:10,989 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 10:30:11,002 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 10:30:11,015 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 10:30:11,027 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 10:30:11,062 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 10:30:11,074 - slack_bolt.App - DEBUG - [app.py:612] - Running listener: handle_lokilens_command ...
2025-05-13 10:30:11,099 - slack - INFO - [slack_app.py:206] - Received /lokilens command: {'token': 'K4ZhpQOf4Bh1W7IgNZugkX3V', 'team_id': 'T08RN80K1N3', 'team_domain': 'cell-logs', 'channel_id': 'C08RN80PTP1', 'channel_name': 'all-cell-logs', 'user_id': 'U08RN80KECX', 'user_name': 'emmanuel.kipngetich', 'command': '/lokilens', 'text': 'what are the errors that happened on  February 2, 2025, at 23:29', 'api_app_id': 'A08SQGEHMSL', 'is_enterprise_install': 'false', 'response_url': 'https://hooks.slack.com/commands/T08RN80K1N3/8883724737491/K1AMhF31Lq2czzbzoSKly7kW', 'trigger_id': '8883724737667.8872272647751.ea185d860c68acb356da69e55326217e'}
2025-05-13 10:30:11,118 - slack - DEBUG - [slack_app.py:211] - Command text: what are the errors that happened on  February 2, 2025, at 23:29
2025-05-13 10:30:11,124 - slack_bolt.App - DEBUG - [thread_runner.py:202] - Responding with status: 200 body: "" (37 millis)
2025-05-13 10:30:11,130 - slack - INFO - [slack_app.py:220] - Starting natural language parsing
2025-05-13 10:30:11,137 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 1edd0f54-ebab-4385-b432-b4a345ffc280, message: {"envelope_id": "85f62253-ec2e-4d40-8676-7ea7858b9829"})
2025-05-13 10:30:11,155 - slack - INFO - [slack_app.py:87] - Parsing natural language input: what are the errors that happened on  February 2, 2025, at 23:29
2025-05-13 10:30:11,179 - slack - DEBUG - [slack_app.py:105] - Sending request to OpenAI for parsing
2025-05-13 10:30:11,185 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 244 milliseconds
2025-05-13 10:30:11,215 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: slash_commands, envelope_id: 85f62253-ec2e-4d40-8676-7ea7858b9829)
2025-05-13 10:30:11,226 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c665e457-1834-4b3b-8dbb-9385574fb762', 'json_data': {'messages': [{'role': 'user', 'content': "\n    Parse the following text into a search ID and a time range.\n    The time range should be in the format YYYYMMDDHHMM (e.g., 202205130933 for May 13, 2022 at 09:33).\n    If the time is not specified, use the current time.\n    If the date is not specified, use today's date.\n    \n    Text: what are the errors that happened on  February 2, 2025, at 23:29\n    \n    Return ONLY the search ID and time range in this exact format:\n    search_id: <id>\n    time_range: <YYYYMMDDHHMM>\n    \n    Do not include any other text or explanation.\n    "}], 'model': 'gpt-4', 'max_tokens': 100}}
2025-05-13 10:30:11,252 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 10:30:11,273 - httpcore.connection - DEBUG - [_trace.py:47] - close.started
2025-05-13 10:30:11,305 - httpcore.connection - DEBUG - [_trace.py:47] - close.complete
2025-05-13 10:30:11,318 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-13 10:30:11,373 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10871b6f0>
2025-05-13 10:30:11,373 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x1086029f0> server_hostname='api.openai.com' timeout=5.0
2025-05-13 10:30:11,426 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1086979b0>
2025-05-13 10:30:11,432 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 10:30:11,446 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 10:30:11,458 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 10:30:11,482 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 10:30:11,494 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 10:30:13,097 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 07:30:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'725'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'728'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9863'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_253bfe45612700700305354c07a0b14d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f072f779af8a5e-MBA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 10:30:13,114 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 10:30:13,128 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 10:30:13,134 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 10:30:13,147 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 10:30:13,153 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 10:30:13,166 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 07:30:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '725', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '728', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9863', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '822ms', 'x-request-id': 'req_253bfe45612700700305354c07a0b14d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f072f779af8a5e-MBA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 10:30:13,181 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_253bfe45612700700305354c07a0b14d
2025-05-13 10:30:13,197 - slack - DEBUG - [slack_app.py:114] - Received parsing response: search_id: errors
time_range: 202502022329
2025-05-13 10:30:13,209 - slack - INFO - [slack_app.py:123] - Successfully parsed input - search_id: errors, time_range: 202502022329
2025-05-13 10:30:13,222 - slack - INFO - [slack_app.py:222] - Parsed input - search_id: errors, time_range: 202502022329
2025-05-13 10:30:13,228 - slack - INFO - [slack_app.py:225] - Searching logs using MCP client
2025-05-13 10:30:13,228 - mcp - INFO - [mcp_client.py:239] - Searching logs for ID: errors with time ranges: ['202502022329']
2025-05-13 10:30:13,263 - urllib3.connectionpool - DEBUG - [connectionpool.py:241] - Starting new HTTP connection (1): localhost:8000
2025-05-13 10:30:15,981 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - http://localhost:8000 "POST /api/search HTTP/1.1" 200 84
2025-05-13 10:30:16,000 - slack - DEBUG - [slack_app.py:227] - MCP client response: {'search_id': 'errors', 'time_ranges': ['202502022329'], 'results': {}, 'total_results': 0}
2025-05-13 10:30:16,001 - slack - INFO - [slack_app.py:237] - Found 0 containers with logs
2025-05-13 10:30:16,007 - slack - INFO - [slack_app.py:240] - Generating response
2025-05-13 10:30:16,013 - slack - INFO - [slack_app.py:53] - Generating response for search_id: errors
2025-05-13 10:30:16,019 - slack - WARNING - [slack_app.py:56] - No logs found for ID: errors
2025-05-13 10:30:16,019 - slack - INFO - [slack_app.py:242] - Sending response to Slack
2025-05-13 10:30:16,026 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'C08RN80PTP1', 'text': 'No logs found for ID: errors. Would you like to try another search?', 'team_id': 'T08RN80K1N3'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 10:30:16,903 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 07:30:16 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '4da52040ce4a6dcc4a1172171b6b153d', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'commands,chat:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCL1CJl7a5OArAaV5ddlMgAAADI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '886', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ifgefhum,envoy-edge-bom-dgaqkbgv', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '269', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-aarm', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C08RN80PTP1","ts":"1747121416.936999","message":{"user":"U08SQGNTJU8","type":"message","ts":"1747121416.936999","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"No logs found for ID: errors. Would you like to try another search?","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","name":"Lokilens","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1747104773,"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"t1en","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No logs found for ID: errors. Would you like to try another search?"}]}]}]}}
2025-05-13 10:44:37,912 - slack_bolt.App - DEBUG - [client.py:236] - on_message invoked: (message: {"envelope_id":"9cb0408a-9ade-4f8a-aa16-8cb1778f7362","payload":{"token":"K4ZhpQOf4Bh1W7IgNZugkX3V","team_id":"T08RN80K1N3","team_domain":"cell-logs","channel_id":"C08RN80PTP1","channel_name":"all-cell-logs","user_id":"U08RN80KECX","user_name":"emmanuel.kipngetich","command":"\/lokilens","text":"what errors occurred in the payment service on February 2, 2025 at 23:29","api_app_id":"A08SQGEHMSL","is_enterprise_install":"false","response_url":"https:\/\/hooks.slack.com\/commands\/T08RN80K1N3\/8891082427956\/tYFzlHTeHRO0JprlzFMq4OPu","trigger_id":"8891082469364.8872272647751.1b1d6c91b992443b91f8522b31909960"},"type":"slash_commands","accepts_response_payload":true})
2025-05-13 10:44:37,931 - slack_bolt.App - DEBUG - [client.py:99] - A new message enqueued (current queue size: 1)
2025-05-13 10:44:37,937 - slack_bolt.App - DEBUG - [client.py:105] - A message dequeued (current queue size: 0)
2025-05-13 10:44:37,973 - slack_bolt.App - DEBUG - [client.py:125] - Message processing started (type: slash_commands, envelope_id: 9cb0408a-9ade-4f8a-aa16-8cb1778f7362)
2025-05-13 10:44:38,001 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ssl_check.ssl_check.SslCheck
2025-05-13 10:44:38,014 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.request_verification.request_verification.RequestVerification
2025-05-13 10:44:38,027 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.authorization.single_team_authorization.SingleTeamAuthorization
2025-05-13 10:44:38,041 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.ignoring_self_events.ignoring_self_events.IgnoringSelfEvents
2025-05-13 10:44:38,053 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.url_verification.url_verification.UrlVerification
2025-05-13 10:44:38,066 - slack_bolt.App - DEBUG - [app.py:561] - Applying slack_bolt.middleware.attaching_function_token.attaching_function_token.AttachingFunctionToken
2025-05-13 10:44:38,079 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_loki_command ...
2025-05-13 10:44:38,093 - slack_bolt.App - DEBUG - [app.py:588] - Checking listener: handle_lokilens_command ...
2025-05-13 10:44:38,106 - slack_bolt.App - DEBUG - [app.py:612] - Running listener: handle_lokilens_command ...
2025-05-13 10:44:38,119 - slack - INFO - [slack_app.py:206] - Received /lokilens command: {'token': 'K4ZhpQOf4Bh1W7IgNZugkX3V', 'team_id': 'T08RN80K1N3', 'team_domain': 'cell-logs', 'channel_id': 'C08RN80PTP1', 'channel_name': 'all-cell-logs', 'user_id': 'U08RN80KECX', 'user_name': 'emmanuel.kipngetich', 'command': '/lokilens', 'text': 'what errors occurred in the payment service on February 2, 2025 at 23:29', 'api_app_id': 'A08SQGEHMSL', 'is_enterprise_install': 'false', 'response_url': 'https://hooks.slack.com/commands/T08RN80K1N3/8891082427956/tYFzlHTeHRO0JprlzFMq4OPu', 'trigger_id': '8891082469364.8872272647751.1b1d6c91b992443b91f8522b31909960'}
2025-05-13 10:44:38,137 - slack - DEBUG - [slack_app.py:211] - Command text: what errors occurred in the payment service on February 2, 2025 at 23:29
2025-05-13 10:44:38,144 - slack_bolt.App - DEBUG - [thread_runner.py:202] - Responding with status: 200 body: "" (25 millis)
2025-05-13 10:44:38,150 - slack - INFO - [slack_app.py:220] - Starting natural language parsing
2025-05-13 10:44:38,170 - slack_bolt.App - DEBUG - [client.py:201] - Sending a message (session id: 1edd0f54-ebab-4385-b432-b4a345ffc280, message: {"envelope_id": "9cb0408a-9ade-4f8a-aa16-8cb1778f7362"})
2025-05-13 10:44:38,170 - slack - INFO - [slack_app.py:87] - Parsing natural language input: what errors occurred in the payment service on February 2, 2025 at 23:29
2025-05-13 10:44:38,176 - slack_bolt.App - DEBUG - [internals.py:42] - Response time: 189 milliseconds
2025-05-13 10:44:38,176 - slack - DEBUG - [slack_app.py:105] - Sending request to OpenAI for parsing
2025-05-13 10:44:38,189 - slack_bolt.App - DEBUG - [client.py:150] - Message processing completed (type: slash_commands, envelope_id: 9cb0408a-9ade-4f8a-aa16-8cb1778f7362)
2025-05-13 10:44:38,251 - openai._base_client - DEBUG - [_base_client.py:482] - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e3b2727c-702c-4c4e-9f3d-989b4b6903b5', 'json_data': {'messages': [{'role': 'user', 'content': "\n    Parse the following text into a search ID and a time range.\n    The time range should be in the format YYYYMMDDHHMM (e.g., 202205130933 for May 13, 2022 at 09:33).\n    If the time is not specified, use the current time.\n    If the date is not specified, use today's date.\n    \n    Text: what errors occurred in the payment service on February 2, 2025 at 23:29\n    \n    Return ONLY the search ID and time range in this exact format:\n    search_id: <id>\n    time_range: <YYYYMMDDHHMM>\n    \n    Do not include any other text or explanation.\n    "}], 'model': 'gpt-4', 'max_tokens': 100}}
2025-05-13 10:44:38,276 - openai._base_client - DEBUG - [_base_client.py:965] - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-13 10:44:38,297 - httpcore.connection - DEBUG - [_trace.py:47] - close.started
2025-05-13 10:44:38,321 - httpcore.connection - DEBUG - [_trace.py:47] - close.complete
2025-05-13 10:44:38,334 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-13 10:44:38,402 - httpcore.connection - DEBUG - [_trace.py:47] - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x108a3e140>
2025-05-13 10:44:38,409 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.started ssl_context=<ssl.SSLContext object at 0x1086029f0> server_hostname='api.openai.com' timeout=5.0
2025-05-13 10:44:38,461 - httpcore.connection - DEBUG - [_trace.py:47] - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x108c05e10>
2025-05-13 10:44:38,474 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.started request=<Request [b'POST']>
2025-05-13 10:44:38,480 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_headers.complete
2025-05-13 10:44:38,493 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.started request=<Request [b'POST']>
2025-05-13 10:44:38,518 - httpcore.http11 - DEBUG - [_trace.py:47] - send_request_body.complete
2025-05-13 10:44:38,531 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.started request=<Request [b'POST']>
2025-05-13 10:44:40,379 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 13 May 2025 07:44:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hhmri584teit9d0pqdaekcnd'), (b'openai-processing-ms', b'953'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'956'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'10000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'9861'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_833bcbab969fca29281bd96d681acfe6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=aw2rLv.sjiz3jJi9e7p8ab5uJr6R5yf9_En8sFQabBI-1747122280-1.0.1.1-RMSDUW4OdZDQFp1zt8508SNdi7QcAPAIIIbha41I9ZNG1uqbL8eVOn6vrGOfBTEJM5U1JywSvNxfdFEUQDfaBAcn.WgX1WULHU.QQk83B0U; path=/; expires=Tue, 13-May-25 08:14:40 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93f088227dc40372-NBO'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-13 10:44:40,395 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-13 10:44:40,408 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.started request=<Request [b'POST']>
2025-05-13 10:44:40,453 - httpcore.http11 - DEBUG - [_trace.py:47] - receive_response_body.complete
2025-05-13 10:44:40,465 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.started
2025-05-13 10:44:40,472 - httpcore.http11 - DEBUG - [_trace.py:47] - response_closed.complete
2025-05-13 10:44:40,525 - openai._base_client - DEBUG - [_base_client.py:1003] - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 13 May 2025 07:44:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hhmri584teit9d0pqdaekcnd', 'openai-processing-ms': '953', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '956', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '10000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '9861', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '834ms', 'x-request-id': 'req_833bcbab969fca29281bd96d681acfe6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=aw2rLv.sjiz3jJi9e7p8ab5uJr6R5yf9_En8sFQabBI-1747122280-1.0.1.1-RMSDUW4OdZDQFp1zt8508SNdi7QcAPAIIIbha41I9ZNG1uqbL8eVOn6vrGOfBTEJM5U1JywSvNxfdFEUQDfaBAcn.WgX1WULHU.QQk83B0U; path=/; expires=Tue, 13-May-25 08:14:40 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '93f088227dc40372-NBO', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-13 10:44:40,539 - openai._base_client - DEBUG - [_base_client.py:1011] - request_id: req_833bcbab969fca29281bd96d681acfe6
2025-05-13 10:44:40,555 - slack - DEBUG - [slack_app.py:114] - Received parsing response: search_id: payment service errors
time_range: 202502022329
2025-05-13 10:44:40,568 - slack - INFO - [slack_app.py:123] - Successfully parsed input - search_id: payment service errors, time_range: 202502022329
2025-05-13 10:44:40,579 - slack - INFO - [slack_app.py:222] - Parsed input - search_id: payment service errors, time_range: 202502022329
2025-05-13 10:44:40,592 - slack - INFO - [slack_app.py:225] - Searching logs using MCP client
2025-05-13 10:44:40,605 - mcp - INFO - [mcp_client.py:239] - Searching logs for ID: payment service errors with time ranges: ['202502022329']
2025-05-13 10:44:40,711 - urllib3.connectionpool - DEBUG - [connectionpool.py:241] - Starting new HTTP connection (1): localhost:8000
2025-05-13 10:44:43,558 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - http://localhost:8000 "POST /api/search HTTP/1.1" 200 100
2025-05-13 10:44:43,579 - slack - DEBUG - [slack_app.py:227] - MCP client response: {'search_id': 'payment service errors', 'time_ranges': ['202502022329'], 'results': {}, 'total_results': 0}
2025-05-13 10:44:43,592 - slack - INFO - [slack_app.py:237] - Found 0 containers with logs
2025-05-13 10:44:43,597 - slack - INFO - [slack_app.py:240] - Generating response
2025-05-13 10:44:43,603 - slack - INFO - [slack_app.py:53] - Generating response for search_id: payment service errors
2025-05-13 10:44:43,615 - slack - WARNING - [slack_app.py:56] - No logs found for ID: payment service errors
2025-05-13 10:44:43,628 - slack - INFO - [slack_app.py:242] - Sending response to Slack
2025-05-13 10:44:43,641 - slack_bolt.App - DEBUG - [base_client.py:265] - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': 'C08RN80PTP1', 'text': 'No logs found for ID: payment service errors. Would you like to try another search?', 'team_id': 'T08RN80K1N3'}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Python/3.13.3 slackclient/3.35.0 Darwin/24.4.0'}
2025-05-13 10:44:44,677 - slack_bolt.App - DEBUG - [base_client.py:556] - Received the following response - status: 200, headers: {'date': 'Tue, 13 May 2025 07:44:44 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '786d91e2e8f6b2bf2f0ff85906409f52', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'commands,chat:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aCL4bLDlJR4oTFiuABo8eAAAIDA', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '918', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-wvavxwlk,envoy-edge-bom-xlwbjvhz', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '267', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-dgwm', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C08RN80PTP1","ts":"1747122284.575229","message":{"user":"U08SQGNTJU8","type":"message","ts":"1747122284.575229","bot_id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","text":"No logs found for ID: payment service errors. Would you like to try another search?","team":"T08RN80K1N3","bot_profile":{"id":"B08SQGNSACQ","app_id":"A08SQGEHMSL","user_id":"U08SQGNTJU8","name":"Lokilens","icons":{"image_36":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_36.png","image_48":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/bot_48.png","image_72":"https:\/\/a.slack-edge.com\/80588\/img\/plugins\/app\/service_72.png"},"deleted":false,"updated":1747104773,"team_id":"T08RN80K1N3"},"blocks":[{"type":"rich_text","block_id":"=ESr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No logs found for ID: payment service errors. Would you like to try another search?"}]}]}]}}
