2025-05-13 10:01:06,317 - s3 - INFO - [s3_operations.py:14] - Initializing S3 operations
2025-05-13 10:01:06,317 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from creating-client-class.iot-data to creating-client-class.iot-data-plane
2025-05-13 10:01:06,318 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-call.apigateway to before-call.api-gateway
2025-05-13 10:01:06,319 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.machinelearning.Predict to request-created.machine-learning.Predict
2025-05-13 10:01:06,319 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.autoscaling.CreateLaunchConfiguration to before-parameter-build.auto-scaling.CreateLaunchConfiguration
2025-05-13 10:01:06,319 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.route53 to before-parameter-build.route-53
2025-05-13 10:01:06,319 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from request-created.cloudsearchdomain.Search to request-created.cloudsearch-domain.Search
2025-05-13 10:01:06,320 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.autoscaling.CreateLaunchConfiguration.complete-section to docs.*.auto-scaling.CreateLaunchConfiguration.complete-section
2025-05-13 10:01:06,320 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.logs.CreateExportTask to before-parameter-build.cloudwatch-logs.CreateExportTask
2025-05-13 10:01:06,321 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.logs.CreateExportTask.complete-section to docs.*.cloudwatch-logs.CreateExportTask.complete-section
2025-05-13 10:01:06,321 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from before-parameter-build.cloudsearchdomain.Search to before-parameter-build.cloudsearch-domain.Search
2025-05-13 10:01:06,321 - botocore.hooks - DEBUG - [hooks.py:482] - Changing event name from docs.*.cloudsearchdomain.Search.complete-section to docs.*.cloudsearch-domain.Search.complete-section
2025-05-13 10:01:06,323 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/endpoints.json
2025-05-13 10:01:06,333 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/sdk-default-configuration.json
2025-05-13 10:01:06,333 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-service-name: calling handler <function handle_service_name_alias at 0x1076ff420>
2025-05-13 10:01:06,346 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-05-13 10:01:06,351 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-05-13 10:01:06,362 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-05-13 10:01:06,372 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/partitions.json
2025-05-13 10:01:06,373 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_post at 0x107679800>
2025-05-13 10:01:06,373 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function lazy_call.<locals>._handler at 0x10779cf40>
2025-05-13 10:01:06,382 - botocore.hooks - DEBUG - [hooks.py:238] - Event creating-client-class.s3: calling handler <function add_generate_presigned_url at 0x107679580>
2025-05-13 10:01:06,382 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_service
2025-05-13 10:01:06,382 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: environment_global
2025-05-13 10:01:06,382 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_service
2025-05-13 10:01:06,382 - botocore.configprovider - DEBUG - [configprovider.py:989] - Looking for endpoint for s3 via: config_global
2025-05-13 10:01:06,382 - botocore.configprovider - DEBUG - [configprovider.py:1005] - No configured endpoint found.
2025-05-13 10:01:06,386 - botocore.endpoint - DEBUG - [endpoint.py:414] - Setting s3 timeout as (60, 60)
2025-05-13 10:01:06,388 - botocore.loaders - DEBUG - [loaders.py:181] - Loading JSON file: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/botocore/data/_retry.json
2025-05-13 10:01:06,388 - botocore.client - DEBUG - [client.py:290] - Registering retry handlers for service: s3
2025-05-13 10:01:06,389 - botocore.utils - DEBUG - [utils.py:1718] - Registering S3 region redirector handler
2025-05-13 10:01:06,389 - botocore.utils - DEBUG - [utils.py:1666] - Registering S3Express Identity Resolver
2025-05-13 10:01:06,389 - s3 - INFO - [s3_operations.py:24] - S3 client initialized successfully
2025-05-13 10:01:06,390 - mcp.server.lowlevel.server - DEBUG - [server.py:146] - Initializing server 'LokiLens MCP'
2025-05-13 10:01:06,390 - mcp.server.lowlevel.server - DEBUG - [server.py:385] - Registering handler for ListToolsRequest
2025-05-13 10:01:06,390 - fastapi_mcp.server - DEBUG - [server.py:34] - Registering handler for CallToolRequest
2025-05-13 10:01:06,391 - mcp.server.sse - DEBUG - [sse.py:84] - SseServerTransport initialized with endpoint: /mcp/messages/
2025-05-13 10:01:06,391 - fastapi_mcp.server - INFO - [server.py:285] - No auth config provided, skipping auth setup
2025-05-13 10:01:06,391 - fastapi_mcp.server - INFO - [server.py:359] - MCP server listening at /mcp
2025-05-13 10:01:24,863 - mcp.server.sse - DEBUG - [sse.py:92] - Setting up SSE connection
2025-05-13 10:01:24,864 - mcp.server.sse - DEBUG - [sse.py:105] - Created new session with ID: 0a943aa9-2cf1-46ed-8e14-06f0840ab903
2025-05-13 10:01:24,871 - mcp.server.sse - DEBUG - [sse.py:143] - Starting SSE response task
2025-05-13 10:01:24,871 - mcp.server.sse - DEBUG - [sse.py:146] - Yielding read and write streams
2025-05-13 10:01:24,872 - mcp.server.sse - DEBUG - [sse.py:112] - Starting SSE writer
2025-05-13 10:01:24,873 - mcp.server.sse - DEBUG - [sse.py:115] - Sent endpoint event: /mcp/messages/?session_id=0a943aa92cf146ed8e1406f0840ab903
2025-05-13 10:01:24,873 - sse_starlette.sse - DEBUG - [sse.py:161] - chunk: b'event: endpoint\r\ndata: /mcp/messages/?session_id=0a943aa92cf146ed8e1406f0840ab903\r\n\r\n'
2025-05-13 10:01:24,874 - sse_starlette.sse - DEBUG - [sse.py:182] - Got event: http.disconnect. Stop streaming.
2025-05-13 10:01:24,874 - root - DEBUG - [sse.py:141] - Client session disconnected 0a943aa9-2cf1-46ed-8e14-06f0840ab903
2025-05-13 10:02:24,240 - app.app - INFO - [app.py:140] - Received API request: search_id=67890, time_ranges=['202205130933']
2025-05-13 10:02:24,241 - app.app - INFO - [app.py:158] - Starting search for ID: 67890
2025-05-13 10:02:24,241 - app.app - INFO - [app.py:159] - Time ranges: ['202205130933']
2025-05-13 10:02:24,241 - app.app - INFO - [app.py:160] - Using bucket: cellogs
2025-05-13 10:02:24,241 - app.app - DEBUG - [app.py:79] - Attempting to parse timestamp: 202205130933
2025-05-13 10:02:24,246 - app.app - DEBUG - [app.py:92] - Successfully parsed timestamp with format %Y%m%d%H%M: 2022-05-13 09:33:00
2025-05-13 10:02:24,246 - app.app - INFO - [app.py:166] - Searching for timestamp: 2022-05-13 09:33:00
2025-05-13 10:02:24,246 - app.app - INFO - [app.py:170] - Searching for S3 files with prefix: 202205130933
2025-05-13 10:02:24,246 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: logs/202205130933
2025-05-13 10:02:24,249 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:02:24,249 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:02:24,249 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:02:24,249 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:02:24,249 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:02:24,249 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:02:24,250 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:02:24,251 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:02:24,251 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:02:24,251 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'logs/202205130933', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:02:24,252 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:02:24,252 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:02:24,252 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:02:24,253 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:02:24,253 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:02:24,253 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:02:24,253 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:02:24,253 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:02:24,253 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'logs/202205130933', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202205130933&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'logs/202205130933', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'logs/202205130933'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:02:24,254 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:02:24,254 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:02:24,254 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:02:24,254 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:02:24,254 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:02:24,254 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:02:24,255 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:02:24,255 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=logs%2F202205130933
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T070224Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:02:24,255 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T070224Z
20250513/us-east-1/s3/aws4_request
a0e302b70957bd92326dc12b5af63ae00a1880a478ae5297be0a3fe2d6afafaa
2025-05-13 10:02:24,255 - botocore.auth - DEBUG - [auth.py:436] - Signature:
48202a5a1823d94135bdbcc9bb4040d7cf304ba752efa95b7376e3f330bc3c09
2025-05-13 10:02:24,255 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:02:24,255 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:02:24,255 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202205130933&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T070224Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=48202a5a1823d94135bdbcc9bb4040d7cf304ba752efa95b7376e3f330bc3c09', 'amz-sdk-invocation-id': b'f0fa7793-a1e2-4f69-a12b-2afcbcc52ce1', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:02:24,259 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:02:24,259 - urllib3.connectionpool - DEBUG - [connectionpool.py:1049] - Starting new HTTPS connection (1): cellogs.s3.amazonaws.com:443
2025-05-13 10:02:25,028 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=logs%2F202205130933&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:02:25,029 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:02:25,031 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'uPFR6HLjACIJiBb2EIx6bxg3PpFkN41VV7jF+fkXA0BmoYI1iSyqeMGnq4WwFGRMLON+MCCc3dQ=', 'x-amz-request-id': '5773WKQH9TVQ7A2F', 'Date': 'Tue, 13 May 2025 07:02:26 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:02:25,031 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>logs/202205130933</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:02:25,031 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:02:25,031 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: kubernetes.var.log.containers/202205130933
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:02:25,031 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:02:25,032 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'kubernetes.var.log.containers/202205130933', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:02:25,032 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:02:25,032 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:02:25,032 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:02:25,032 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'kubernetes.var.log.containers/202205130933', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202205130933&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202205130933', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202205130933'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:02:25,032 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:02:25,033 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:02:25,033 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=kubernetes.var.log.containers%2F202205130933
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T070225Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:02:25,033 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T070225Z
20250513/us-east-1/s3/aws4_request
69d13457e963cfb93e7fec0f8bcf1d99db890a128078ea47e08ccc13846aad1d
2025-05-13 10:02:25,033 - botocore.auth - DEBUG - [auth.py:436] - Signature:
1fea45ff2f3a0414c1a0550cce5fb9b15fb4198a902aa538563d5b0c7a61f2c1
2025-05-13 10:02:25,033 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:02:25,033 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:02:25,033 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202205130933&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T070225Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=1fea45ff2f3a0414c1a0550cce5fb9b15fb4198a902aa538563d5b0c7a61f2c1', 'amz-sdk-invocation-id': b'1b738a92-c18b-4b9d-a778-3bb96c350229', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:02:25,033 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:02:25,305 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=kubernetes.var.log.containers%2F202205130933&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:02:25,305 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'SreI3ib+soaRfXMxpJjVxg+oTmWg/5HgPaD0SwDtLlf0k47tzD27dFpmx78x+b7AAIJ6ODuVpBg=', 'x-amz-request-id': '577DQ4AN5X9S3FT4', 'Date': 'Tue, 13 May 2025 07:02:26 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:02:25,305 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>kubernetes.var.log.containers/202205130933</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:02:25,305 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:02:25,305 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: 202205130933
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:02:25,305 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:02:25,305 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': '202205130933', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:02:25,306 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:02:25,306 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:02:25,306 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:02:25,306 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': '202205130933', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202205130933&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': '202205130933', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': '202205130933'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:02:25,306 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:02:25,306 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=202205130933
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T070225Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:02:25,306 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T070225Z
20250513/us-east-1/s3/aws4_request
f37eb40598c96b273da104e381199951002281940bc0730fee72883063b7d1e3
2025-05-13 10:02:25,306 - botocore.auth - DEBUG - [auth.py:436] - Signature:
00140a1c512058646941ff998ef4c9a8769681d1c80bc35d5996f4f16b660cda
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:02:25,306 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:02:25,306 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202205130933&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T070225Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=00140a1c512058646941ff998ef4c9a8769681d1c80bc35d5996f4f16b660cda', 'amz-sdk-invocation-id': b'831dcce6-ba56-4ecb-ad08-de19b0c26f7c', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:02:25,306 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:02:25,560 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=202205130933&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:02:25,560 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:02:25,560 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:02:25,560 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': '/X5Hi4OyXZF/MLZerqkysyGDhn9wazbtcfORi5SvDuR7kKCIiVSCmRFEGkdTJ16iGGhOthwL9cs=', 'x-amz-request-id': '5777HFSZ33Y07S4H', 'Date': 'Tue, 13 May 2025 07:02:26 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:02:25,560 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>202205130933</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:02:25,560 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:02:25,560 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:02:25,560 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:02:25,560 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:02:25,560 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:02:25,560 - app.app - INFO - [app.py:178] - Found 0 files with prefix 202205130933
2025-05-13 10:02:25,560 - app.app - INFO - [app.py:224] - Total results found: 0
2025-05-13 10:02:59,692 - mcp.server.sse - DEBUG - [sse.py:92] - Setting up SSE connection
2025-05-13 10:02:59,693 - mcp.server.sse - DEBUG - [sse.py:105] - Created new session with ID: f13968dc-b209-4a70-bb52-2b55597316ef
2025-05-13 10:02:59,693 - mcp.server.sse - DEBUG - [sse.py:143] - Starting SSE response task
2025-05-13 10:02:59,693 - mcp.server.sse - DEBUG - [sse.py:146] - Yielding read and write streams
2025-05-13 10:02:59,694 - mcp.server.sse - DEBUG - [sse.py:112] - Starting SSE writer
2025-05-13 10:02:59,695 - mcp.server.sse - DEBUG - [sse.py:115] - Sent endpoint event: /mcp/messages/?session_id=f13968dcb2094a70bb522b55597316ef
2025-05-13 10:02:59,695 - sse_starlette.sse - DEBUG - [sse.py:161] - chunk: b'event: endpoint\r\ndata: /mcp/messages/?session_id=f13968dcb2094a70bb522b55597316ef\r\n\r\n'
2025-05-13 10:02:59,695 - sse_starlette.sse - DEBUG - [sse.py:182] - Got event: http.disconnect. Stop streaming.
2025-05-13 10:02:59,696 - root - DEBUG - [sse.py:141] - Client session disconnected f13968dc-b209-4a70-bb52-2b55597316ef
2025-05-13 10:03:18,906 - app.app - INFO - [app.py:140] - Received API request: search_id=67890, time_ranges=['202205130933']
2025-05-13 10:03:18,907 - app.app - INFO - [app.py:158] - Starting search for ID: 67890
2025-05-13 10:03:18,907 - app.app - INFO - [app.py:159] - Time ranges: ['202205130933']
2025-05-13 10:03:18,907 - app.app - INFO - [app.py:160] - Using bucket: cellogs
2025-05-13 10:03:18,907 - app.app - DEBUG - [app.py:79] - Attempting to parse timestamp: 202205130933
2025-05-13 10:03:18,908 - app.app - DEBUG - [app.py:92] - Successfully parsed timestamp with format %Y%m%d%H%M: 2022-05-13 09:33:00
2025-05-13 10:03:18,908 - app.app - INFO - [app.py:166] - Searching for timestamp: 2022-05-13 09:33:00
2025-05-13 10:03:18,908 - app.app - INFO - [app.py:170] - Searching for S3 files with prefix: 202205130933
2025-05-13 10:03:18,908 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: logs/202205130933
2025-05-13 10:03:18,908 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:03:18,909 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:03:18,909 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:03:18,909 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:03:18,909 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:03:18,909 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:03:18,909 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:03:18,909 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:03:18,909 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:03:18,909 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'logs/202205130933', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:03:18,909 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:03:18,909 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:03:18,910 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:03:18,910 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:03:18,910 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:03:18,910 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:03:18,910 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:03:18,910 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:03:18,910 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'logs/202205130933', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202205130933&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'logs/202205130933', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'logs/202205130933'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:03:18,911 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:03:18,911 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:03:18,911 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:03:18,911 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:03:18,911 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:03:18,911 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:03:18,912 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:03:18,912 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=logs%2F202205130933
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T070318Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:03:18,912 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T070318Z
20250513/us-east-1/s3/aws4_request
0ad1b47eb1515a0deab12f573a2630b73a0997cd1e9cf7598a4cc1ccd8678d86
2025-05-13 10:03:18,912 - botocore.auth - DEBUG - [auth.py:436] - Signature:
5a31bb0ba05f60cecd6ba9c8c0fd10a20571b090741b50a94d45ab518bdaaf62
2025-05-13 10:03:18,912 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:03:18,912 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:03:18,912 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202205130933&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T070318Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=5a31bb0ba05f60cecd6ba9c8c0fd10a20571b090741b50a94d45ab518bdaaf62', 'amz-sdk-invocation-id': b'e3891087-ef2f-4d4d-9ed0-c220d3f4c764', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:03:18,913 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:03:18,913 - urllib3.connectionpool - DEBUG - [connectionpool.py:289] - Resetting dropped connection: cellogs.s3.amazonaws.com
2025-05-13 10:03:19,682 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=logs%2F202205130933&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:03:19,683 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'OD/L0kJ0xzE5zRmd2yc9ZlxFrGD/qtKiUovlEURv8TN51dn/ySlZrEnCUxxyo5jN4tpcEVdCYBk=', 'x-amz-request-id': 'N27PTKZVZ254Y091', 'Date': 'Tue, 13 May 2025 07:03:20 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:03:19,683 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>logs/202205130933</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:03:19,683 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:03:19,683 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: kubernetes.var.log.containers/202205130933
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:03:19,683 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:03:19,683 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'kubernetes.var.log.containers/202205130933', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:03:19,683 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:03:19,683 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:03:19,684 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:03:19,684 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'kubernetes.var.log.containers/202205130933', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202205130933&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202205130933', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202205130933'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:03:19,684 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:03:19,684 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=kubernetes.var.log.containers%2F202205130933
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T070319Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:03:19,684 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T070319Z
20250513/us-east-1/s3/aws4_request
c4160755abfea45a20d092206e12c663190bddfa7fa7d3b274bba8243f16c9b2
2025-05-13 10:03:19,684 - botocore.auth - DEBUG - [auth.py:436] - Signature:
ca74ccfc2ad755f6e3bba4dbaecde6e2c6f9a467f19fd3920834bbc07149b008
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:03:19,684 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:03:19,684 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202205130933&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T070319Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=ca74ccfc2ad755f6e3bba4dbaecde6e2c6f9a467f19fd3920834bbc07149b008', 'amz-sdk-invocation-id': b'e1134584-627c-49e5-9f44-e1fe8a39361d', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:03:19,684 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:03:19,922 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=kubernetes.var.log.containers%2F202205130933&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:03:19,922 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:03:19,922 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:03:19,922 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': '33U+Y6l9OF8Lu1dZVRNV/b2LzuE4iEq8Dx08jCF1x5cTwNUvc5Gzx6qJyVMpx7SSIujIqE7BKYQ=', 'x-amz-request-id': 'DFZJ0X163Z6ZGQM4', 'Date': 'Tue, 13 May 2025 07:03:21 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:03:19,922 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>kubernetes.var.log.containers/202205130933</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:03:19,925 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:03:19,925 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:03:19,925 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:03:19,925 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:03:19,925 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:03:19,925 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: 202205130933
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:03:19,926 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': '202205130933', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:03:19,926 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:03:19,926 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:03:19,926 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:03:19,926 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:03:19,927 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:03:19,927 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:03:19,927 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:03:19,927 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': '202205130933', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202205130933&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': '202205130933', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': '202205130933'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:03:19,927 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:03:19,927 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:03:19,927 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:03:19,928 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:03:19,928 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:03:19,928 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:03:19,928 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:03:19,928 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=202205130933
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T070319Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:03:19,928 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T070319Z
20250513/us-east-1/s3/aws4_request
db9616ca1e9825f1fb89d4485f94dd821e249b020f9e4f5adecc5e5bc1e22f1e
2025-05-13 10:03:19,928 - botocore.auth - DEBUG - [auth.py:436] - Signature:
c17c6be85c1bd3cfed5477b85506db4f05c74514779bec6e459b20fb3165d291
2025-05-13 10:03:19,928 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:03:19,928 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:03:19,929 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202205130933&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T070319Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=c17c6be85c1bd3cfed5477b85506db4f05c74514779bec6e459b20fb3165d291', 'amz-sdk-invocation-id': b'c9468245-882c-4491-89a5-22c8c4039ac5', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:03:19,929 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:03:20,166 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=202205130933&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:03:20,166 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:03:20,166 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:03:20,166 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'MrZkKLiAdvz+3sICWRCOZcRkMhWW+QndEI345q6vrVCJizeJ023Ht0vCjhm9kKHcD/B/ZoVYCIg=', 'x-amz-request-id': 'DFZKXYZJ63J8EM5Z', 'Date': 'Tue, 13 May 2025 07:03:21 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:03:20,166 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>202205130933</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:03:20,166 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:03:20,166 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:03:20,166 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:03:20,166 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:03:20,167 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:03:20,167 - app.app - INFO - [app.py:178] - Found 0 files with prefix 202205130933
2025-05-13 10:03:20,167 - app.app - INFO - [app.py:224] - Total results found: 0
2025-05-13 10:19:42,574 - app.app - INFO - [app.py:140] - Received API request: search_id=672375962477797376, time_ranges=['202502022329']
2025-05-13 10:19:42,578 - app.app - INFO - [app.py:158] - Starting search for ID: 672375962477797376
2025-05-13 10:19:42,578 - app.app - INFO - [app.py:159] - Time ranges: ['202502022329']
2025-05-13 10:19:42,578 - app.app - INFO - [app.py:160] - Using bucket: cellogs
2025-05-13 10:19:42,578 - app.app - DEBUG - [app.py:79] - Attempting to parse timestamp: 202502022329
2025-05-13 10:19:42,579 - app.app - DEBUG - [app.py:92] - Successfully parsed timestamp with format %Y%m%d%H%M: 2025-02-02 23:29:00
2025-05-13 10:19:42,579 - app.app - INFO - [app.py:166] - Searching for timestamp: 2025-02-02 23:29:00
2025-05-13 10:19:42,579 - app.app - INFO - [app.py:170] - Searching for S3 files with prefix: 202502022329
2025-05-13 10:19:42,580 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: logs/202502022329
2025-05-13 10:19:42,581 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:19:42,581 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:19:42,582 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:19:42,582 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:42,582 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:42,583 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:19:42,583 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:19:42,583 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:19:42,583 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:42,584 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'logs/202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:19:42,589 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:19:42,589 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:19:42,589 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:19:42,591 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:19:42,592 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:42,592 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:19:42,592 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:19:42,592 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:19:42,592 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'logs/202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'logs/202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'logs/202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:19:42,593 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:19:42,593 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:42,593 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:19:42,593 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:19:42,593 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:19:42,593 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:42,595 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:19:42,595 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=logs%2F202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T071942Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:19:42,595 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T071942Z
20250513/us-east-1/s3/aws4_request
504ee4481ea31a7f3344f3c206dcf5c610c89f7f9e0313957301907120967eae
2025-05-13 10:19:42,596 - botocore.auth - DEBUG - [auth.py:436] - Signature:
8388b0446e907af2c8ce2d9e3683758df2ec8dc91e86aeaacd495228d5c214d6
2025-05-13 10:19:42,596 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:19:42,596 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:19:42,596 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T071942Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=8388b0446e907af2c8ce2d9e3683758df2ec8dc91e86aeaacd495228d5c214d6', 'amz-sdk-invocation-id': b'fc08406f-0251-4817-9c0b-06729a6650ee', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:19:42,597 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:19:42,598 - urllib3.connectionpool - DEBUG - [connectionpool.py:289] - Resetting dropped connection: cellogs.s3.amazonaws.com
2025-05-13 10:19:43,374 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=logs%2F202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:19:43,374 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:19:43,376 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:19:43,376 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'qKMdUTbzGx3DinCbHXvrNJ3bTMNznHHNGkYpX05N4RPmHVUtqbSz8NuwjiOurKUynutYw1x6p6Q=', 'x-amz-request-id': 'A4B2W42TJN295DE9', 'Date': 'Tue, 13 May 2025 07:19:44 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:19:43,376 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>logs/202502022329</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:19:43,377 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:19:43,377 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: kubernetes.var.log.containers/202502022329
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:19:43,377 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:43,377 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'kubernetes.var.log.containers/202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:19:43,378 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:19:43,378 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:19:43,378 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:19:43,378 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'kubernetes.var.log.containers/202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:19:43,378 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:43,378 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:19:43,378 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=kubernetes.var.log.containers%2F202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T071943Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:19:43,379 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T071943Z
20250513/us-east-1/s3/aws4_request
44fe0552cf39a9be466cefb53f73c3d5fb6d3611e48344ed094997d85b0dca53
2025-05-13 10:19:43,379 - botocore.auth - DEBUG - [auth.py:436] - Signature:
a956d34123ae154ae722c08e9335c67fdfa393bb5e3bf37d4a9a250e2746c749
2025-05-13 10:19:43,379 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:19:43,379 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:19:43,380 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T071943Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=a956d34123ae154ae722c08e9335c67fdfa393bb5e3bf37d4a9a250e2746c749', 'amz-sdk-invocation-id': b'7e80cbf5-2663-44b9-b58e-7fd83f301435', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:19:43,380 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:19:43,627 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:19:43,627 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:19:43,628 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:19:43,628 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': '6Tjw8i2xopYlf9GFNKKPF0KM4cOgB0+DWphqElqNLKR0KEDBRWrH/OCB2OnPK8f4uWBZ5nmfN8Q=', 'x-amz-request-id': 'A4B38DZ54WY81341', 'Date': 'Tue, 13 May 2025 07:19:44 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:19:43,628 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>kubernetes.var.log.containers/202502022329</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:19:43,628 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:19:43,629 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:19:43,629 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: 202502022329
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:19:43,629 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:43,629 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': '202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:19:43,629 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:19:43,629 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:19:43,629 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:19:43,630 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': '202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': '202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': '202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:19:43,630 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:43,631 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:19:43,631 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T071943Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:19:43,631 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T071943Z
20250513/us-east-1/s3/aws4_request
4c0a92b4aa84f576329eb05ab2fdb0ca67524542b69c882a92fd47bf6029fb18
2025-05-13 10:19:43,631 - botocore.auth - DEBUG - [auth.py:436] - Signature:
141471b7a519e26673efd720393e2014ca144d4e46f0e0700de4cdf72175a1d5
2025-05-13 10:19:43,631 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:19:43,631 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:19:43,631 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T071943Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=141471b7a519e26673efd720393e2014ca144d4e46f0e0700de4cdf72175a1d5', 'amz-sdk-invocation-id': b'33a80b21-f30b-4d2d-9e7c-161a44da9cc9', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:19:43,631 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:19:43,879 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:19:43,879 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:19:43,879 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:19:43,879 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'hRp023d2ht7jghyWSshcmKoIdQ/Kg4K8LgKUmf2WtQ8OasUVmwVqYs9mLEo6FM2XzzhQZLBMVRg=', 'x-amz-request-id': '1R21H84KV8HFVX9K', 'Date': 'Tue, 13 May 2025 07:19:45 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:19:43,879 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>202502022329</Prefix><KeyCount>3</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated><Contents><Key>202502022329_11.gz</Key><LastModified>2025-02-06T12:20:31.000Z</LastModified><ETag>&quot;2a5c590614a9ea9585cfa4ff37e0e948&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>857</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>202502022329_16.gz</Key><LastModified>2025-02-06T12:20:34.000Z</LastModified><ETag>&quot;0a132731b8895ac922d0484826b9eae0&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>126877</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>202502022329_9.gz</Key><LastModified>2025-02-06T12:20:30.000Z</LastModified><ETag>&quot;5960b6f6c1aebf300645013a5f60f721&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>662</Size><StorageClass>STANDARD</StorageClass></Contents></ListBucketResult>'
2025-05-13 10:19:43,890 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:19:43,890 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:19:43,890 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:19:43,890 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:43,890 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:19:43,890 - s3 - INFO - [s3_operations.py:126] - Found 3 files with prefix 202502022329
2025-05-13 10:19:43,890 - app.app - INFO - [app.py:178] - Found 3 files with prefix 202502022329
2025-05-13 10:19:43,890 - app.app - DEBUG - [app.py:181] - Files found: ['202502022329_11.gz', '202502022329_16.gz', '202502022329_9.gz']
2025-05-13 10:19:43,890 - app.app - INFO - [app.py:185] - Processing file: 202502022329_11.gz
2025-05-13 10:19:43,891 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1076ffd80>
2025-05-13 10:19:43,891 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:19:43,891 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:19:43,892 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:43,892 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:43,892 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:19:43,892 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:19:43,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:19:43,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:43,893 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_11.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:19:43,893 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:19:43,893 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:19:43,893 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:19:43,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:19:43,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:43,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:19:43,893 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:19:43,894 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:19:43,894 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_11.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_11.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_11.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_11.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_11.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 10:19:43,895 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:19:43,895 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:43,895 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:19:43,896 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:19:43,896 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:19:43,896 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:43,896 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:19:43,896 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_11.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T071943Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:19:43,896 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T071943Z
20250513/us-east-1/s3/aws4_request
95c849315d0a5b12b4d3ccfb1e49de839c60adb9f6b102a6f9e941fb89bf0a60
2025-05-13 10:19:43,896 - botocore.auth - DEBUG - [auth.py:436] - Signature:
648842b8c336eaa35258688861523f0525d5e9d1dd068db473a776f1e78aaa0a
2025-05-13 10:19:43,896 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:19:43,896 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:19:43,896 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_11.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T071943Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=648842b8c336eaa35258688861523f0525d5e9d1dd068db473a776f1e78aaa0a', 'amz-sdk-invocation-id': b'33fac620-9576-4ad1-8d89-ba0ce97f7309', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:19:43,897 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:19:44,172 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_11.gz HTTP/1.1" 200 857
2025-05-13 10:19:44,173 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 10:19:44,173 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:19:44,173 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:19:44,173 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'I+zXFG0zINf9LlDu2id2F2Kb52sxsErV8FBukE9Gj89cGqdCW8y6qJO6EtozFPW2WtCKNPdFAM8=', 'x-amz-request-id': '1R29KG7EPJ46SRQ3', 'Date': 'Tue, 13 May 2025 07:19:45 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:31 GMT', 'ETag': '"2a5c590614a9ea9585cfa4ff37e0e948"', 'x-amz-checksum-crc64nvme': 'ZS20/Riisl0=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '857', 'Server': 'AmazonS3'}
2025-05-13 10:19:44,173 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x10837cf10>
2025-05-13 10:19:44,177 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:19:44,177 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:19:44,177 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:19:44,177 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:44,177 - app.app - DEBUG - [app.py:187] - File content length: 857
2025-05-13 10:19:44,180 - app.app - INFO - [app.py:185] - Processing file: 202502022329_16.gz
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1076ffd80>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:44,181 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_16.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:19:44,181 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:19:44,181 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:19:44,181 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:19:44,181 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_16.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_16.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_16.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_16.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_16.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:19:44,181 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:44,182 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:19:44,182 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_16.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T071944Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:19:44,182 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T071944Z
20250513/us-east-1/s3/aws4_request
2fb110dab09c9e0b370cf0a151b1ac9ecf2ca1e7948312b4d0167d35ef658dfd
2025-05-13 10:19:44,182 - botocore.auth - DEBUG - [auth.py:436] - Signature:
bb1743b6d38a965db158d1845fef4d230ed52e9acd317681f832e32ca69709f1
2025-05-13 10:19:44,182 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:19:44,182 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:19:44,182 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_16.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T071944Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=bb1743b6d38a965db158d1845fef4d230ed52e9acd317681f832e32ca69709f1', 'amz-sdk-invocation-id': b'a1deca63-d897-4d62-bee1-bcc89230fdd7', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:19:44,182 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:19:44,504 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_16.gz HTTP/1.1" 200 126877
2025-05-13 10:19:44,504 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 10:19:44,504 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:19:44,504 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:19:44,504 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'zfNqazHFDQxCapZp4QnIMmuiCgaXUio2BN96VzWLsFhwWIdosDQw8UFOH3yDbAMKDntXv3yJn44=', 'x-amz-request-id': '1R20HD1S2F01JE30', 'Date': 'Tue, 13 May 2025 07:19:45 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:34 GMT', 'ETag': '"0a132731b8895ac922d0484826b9eae0"', 'x-amz-checksum-crc64nvme': 'kMtAdae3Sso=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '126877', 'Server': 'AmazonS3'}
2025-05-13 10:19:44,504 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x10837d2d0>
2025-05-13 10:19:44,504 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:19:44,504 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:19:44,504 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:19:44,505 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:44,980 - app.app - DEBUG - [app.py:187] - File content length: 126877
2025-05-13 10:19:44,986 - app.app - INFO - [app.py:191] - Found matches in file 202502022329_16.gz
2025-05-13 10:19:44,986 - app.app - DEBUG - [app.py:192] - Matches: defaultdict(<class 'list'>, {'checkout-request-service': ['2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}'], 'checkout-payment-service': ['2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\"extraData\\":{\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}},\\"amount_paid\\":1591.0,\\"payment_option_transaction_id\\":\\"9d72720e-3682-428e-9dbd-b474683a9d76\\",\\"gateway_transaction_id\\":\\"672375962477797376\\",\\"currency_code\\":\\"KES\\",\\"country_code\\":\\"KEN\\",\\"account_number\\":\\"acc_3209028\\",\\"customer_name\\":\\"Customer\\",\\"payment_msisdn\\":254700000000,\\"payment_option_narration\\":\\"INV_6799f155a66887.86544965\\",\\"date_payment_received\\":\\"2025-01-29 12:42:06\\",\\"service_charge_amount\\":0.0,\\"service_code\\":\\"KQSBOX\\",\\"gateway_overall_status\\":139,\\"payment_option_code\\":\\"DTBKE-MB\\",\\"psedo_service_code\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}']})
2025-05-13 10:19:44,987 - app.app - INFO - [app.py:185] - Processing file: 202502022329_9.gz
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1076ffd80>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:44,987 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_9.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:19:44,987 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:19:44,987 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:19:44,987 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:44,987 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:19:44,988 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_9.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_9.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_9.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_9.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_9.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:19:44,988 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:19:44,988 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_9.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T071944Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:19:44,988 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T071944Z
20250513/us-east-1/s3/aws4_request
652fc4dd8891747a57f8119f1cfc76b0f0db258e8fa421a1600bbe60bdb8fe19
2025-05-13 10:19:44,988 - botocore.auth - DEBUG - [auth.py:436] - Signature:
1c18a4f094e7f7015ce5fb46596ba84301013891c205bd395eb881821fe1b078
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:19:44,988 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:19:44,988 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_9.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T071944Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=1c18a4f094e7f7015ce5fb46596ba84301013891c205bd395eb881821fe1b078', 'amz-sdk-invocation-id': b'659639a1-402c-4fd5-afec-35ddc7064f7e', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:19:44,988 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:19:45,246 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_9.gz HTTP/1.1" 200 662
2025-05-13 10:19:45,247 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 10:19:45,247 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:19:45,247 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:19:45,247 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'fVUS8Dq/u9HM4tOCcQq8xc+ITIpuq7k8E1mbXrs9gN8wUW8mEY8QsNu9z9AoF9U0LPzVHn8Y7XM=', 'x-amz-request-id': '2BQGYQF17FMHNA79', 'Date': 'Tue, 13 May 2025 07:19:46 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:30 GMT', 'ETag': '"5960b6f6c1aebf300645013a5f60f721"', 'x-amz-checksum-crc64nvme': 'x/BnhXcMiJc=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '662', 'Server': 'AmazonS3'}
2025-05-13 10:19:45,247 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x10837cfd0>
2025-05-13 10:19:45,247 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:19:45,247 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:19:45,247 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:19:45,247 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:19:45,247 - app.app - DEBUG - [app.py:187] - File content length: 662
2025-05-13 10:19:45,247 - app.app - INFO - [app.py:206] - Added 10 results for timestamp 202502022329
2025-05-13 10:19:45,247 - app.app - INFO - [app.py:224] - Total results found: 10
2025-05-13 10:19:45,248 - app.app - DEBUG - [app.py:226] - Results: {'checkout-request-service': [{'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-request-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-request-service-778b5dbb86-m9b8x_approval_checkout-request-service-e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0.log\t{"time":"2025-02-02T23:29:00.202066773Z","stream":"stdout","logtag":"F","message":"2025-02-02T23:29:00.201Z  INFO [checkout-request-service,679fffbc000000000a0679f695451425,7d144dc0fdcb2009] 1 --- [checkout-request-service] [nio-8080-exec-3] [679fffbc000000000a0679f695451425-7d144dc0fdcb2009] com.cellulant.configuration.Logger       : TRACE-ID : 679fffbc000000000a0679f695451425 | SPAN-ID : 7d144dc0fdcb2009 | com.cellulant.services.CheckoutRequestService | Checkout-request-service:Finding transaction based on gatewayTransactionId=672375962477797376","kubernetes":{"pod_name":"checkout-request-service-778b5dbb86-m9b8x","namespace_name":"approval","pod_id":"101d3d24-2784-46e4-9cf5-2ab4567d4764","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-request-service","app.kubernetes.io/name":"checkout-request-service","pod-template-hash":"778b5dbb86","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-request-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"host":"ip-10-107-118-6.eu-west-1.compute.internal","container_name":"checkout-request-service","docker_id":"e982c3072b460f6a7930514fe96781f85d4c6f2df40e3581cc72e9a33f9d84f0","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app@sha256:c03cf238e9f754ea116b379bc13f21eadb868b44a4e5bf1eb6743c0806f5bf27","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-request-service/app:approval-82285df3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}], 'checkout-payment-service': [{'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.18618989Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.186  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.controllers.PaymentController | Request payload: {\\"extraData\\":{\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}},\\"amount_paid\\":1591.0,\\"payment_option_transaction_id\\":\\"9d72720e-3682-428e-9dbd-b474683a9d76\\",\\"gateway_transaction_id\\":\\"672375962477797376\\",\\"currency_code\\":\\"KES\\",\\"country_code\\":\\"KEN\\",\\"account_number\\":\\"acc_3209028\\",\\"customer_name\\":\\"Customer\\",\\"payment_msisdn\\":254700000000,\\"payment_option_narration\\":\\"INV_6799f155a66887.86544965\\",\\"date_payment_received\\":\\"2025-01-29 12:42:06\\",\\"service_charge_amount\\":0.0,\\"service_code\\":\\"KQSBOX\\",\\"gateway_overall_status\\":139,\\"payment_option_code\\":\\"DTBKE-MB\\",\\"psedo_service_code\\":null}","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.187788894Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.187  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | Received the payment payload: PaymentInputDto(amountPaid=1591.0, paymentOptionTransactionId=9d72720e-3682-428e-9dbd-b474683a9d76, gatewayTransactionId=672375962477797376, currencyCode=KES, countryCode=KEN, accountNumber=acc_3209028, customerName=Customer, paymentMsisdn=254700000000, paymentOptionNarration=INV_6799f155a66887.86544965, datePaymentReceived=Wed Jan 29 12:42:06 UTC 2025, serviceChargeAmount=0.0, serviceCode=KQSBOX, gatewayOverallStatus=139, paymentOptionCode=DTBKE-MB, psedoServiceCode=null, extraData={\\"115651388\\":{\\"hubID\\":0,\\"callbackUrl\\":\\"https://webhook.site/56247f6d-83eb-4c89-8363-ef77d1fcd123\\"}})","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.205908023Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.205  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.212786936Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.212  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.220445314Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.220  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228701396Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.utils.CheckoutFunctionsUtility | 672375962477797376 ServiceCode : KQSBOX - Request Successful.","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.228790144Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.228  INFO [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Creating Service For Static Account... ","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}, {'container_name': 'checkout-payment-service', 'message': '2025-02-02T23:29:00+00:00\tkubernetes.var.log.containers.checkout-payment-service-7d998df944-hmk6j_approval_checkout-payment-service-daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66.log\t{"time":"2025-02-02T23:29:00.231421227Z","stream":"stdout","logtag":"F","message":"2025 Feb 02 23:29:00.231 ERROR [Checkout Payment Service,,,] 1 --- [nio-8080-exec-1] com.cellulant.configuration.Logger : TRACE-ID : 679fffbc360f5c257f24f104ef1a7ee8 | SPAN-ID : 0b8dc0597a29fb8b | com.cellulant.services.PaymentService | 672375962477797376 ServiceCode : KQSBOX - Error while saving the payment request: null","kubernetes":{"pod_name":"checkout-payment-service-7d998df944-hmk6j","namespace_name":"approval","pod_id":"8346f6de-d3b5-4601-9633-a2cb6cf84814","labels":{"admission.datadoghq.com/enabled":"true","app.kubernetes.io/instance":"checkout-payment-service","app.kubernetes.io/name":"checkout-payment-service","pod-template-hash":"7d998df944","tags.datadoghq.com/env":"approval","tags.datadoghq.com/service":"checkout-payment-service-approval"},"annotations":{"admission.datadoghq.com/java-lib.version":"v1.41.1"},"host":"ip-10-107-152-189.eu-west-1.compute.internal","container_name":"checkout-payment-service","docker_id":"daa91e5812a4d54f72bb9209db6ed98702d95a69f1336c973e4e271f772cad66","container_hash":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app@sha256:4230a44a0a4ec57cf66dda68e47a0a6d6ad7dd282a20545e7a749fe722f31416","container_image":"102430194655.dkr.ecr.us-east-2.amazonaws.com/checkout-payment-service/app:approval-f90710b3"},"kubernetes_namespace":{"name":"approval","labels":{"field.cattle.io/projectId":"p-vnx8p","kubernetes.io/metadata.name":"approval"}}}', 'timestamp': '202502022329'}]}
2025-05-13 10:30:13,348 - app.app - INFO - [app.py:140] - Received API request: search_id=errors, time_ranges=['202502022329']
2025-05-13 10:30:13,350 - app.app - INFO - [app.py:158] - Starting search for ID: errors
2025-05-13 10:30:13,350 - app.app - INFO - [app.py:159] - Time ranges: ['202502022329']
2025-05-13 10:30:13,350 - app.app - INFO - [app.py:160] - Using bucket: cellogs
2025-05-13 10:30:13,350 - app.app - DEBUG - [app.py:79] - Attempting to parse timestamp: 202502022329
2025-05-13 10:30:13,351 - app.app - DEBUG - [app.py:92] - Successfully parsed timestamp with format %Y%m%d%H%M: 2025-02-02 23:29:00
2025-05-13 10:30:13,351 - app.app - INFO - [app.py:166] - Searching for timestamp: 2025-02-02 23:29:00
2025-05-13 10:30:13,351 - app.app - INFO - [app.py:170] - Searching for S3 files with prefix: 202502022329
2025-05-13 10:30:13,352 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: logs/202502022329
2025-05-13 10:30:13,353 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:30:13,353 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:30:13,354 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:30:13,354 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:13,354 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:13,354 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:30:13,354 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:30:13,355 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:30:13,355 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:13,358 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'logs/202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:30:13,359 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:30:13,360 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:30:13,360 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:30:13,363 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:30:13,363 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:13,363 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:30:13,363 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:30:13,363 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:30:13,363 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'logs/202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'logs/202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'logs/202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:30:13,364 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:30:13,365 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:13,365 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:30:13,365 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:30:13,365 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:30:13,365 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:13,367 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:30:13,367 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=logs%2F202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T073013Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:30:13,367 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T073013Z
20250513/us-east-1/s3/aws4_request
8ea3e1e5e10d57a250c5263027aaa163e4156d5eadc42bcd9f73acd21694a354
2025-05-13 10:30:13,368 - botocore.auth - DEBUG - [auth.py:436] - Signature:
1613e2f615680fe231a4cc4d670430547239d938a16efbedd78dc131a1cd67a1
2025-05-13 10:30:13,368 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:30:13,368 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:30:13,369 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=logs%2F202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T073013Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=1613e2f615680fe231a4cc4d670430547239d938a16efbedd78dc131a1cd67a1', 'amz-sdk-invocation-id': b'22af04e1-9b9d-4b46-bb4b-178cc858dfa3', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:30:13,370 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:30:13,371 - urllib3.connectionpool - DEBUG - [connectionpool.py:289] - Resetting dropped connection: cellogs.s3.amazonaws.com
2025-05-13 10:30:14,120 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=logs%2F202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:30:14,120 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:30:14,122 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:30:14,122 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'dJkQ6vC3KiFHnhYLz8ukYrgG1BM1MHZl/s/FBR2eXrOOx5T8AaN7BCg/IRYFdhZdp6UDxVI4X9Ml33g7g+BGuaWFT11e62Zz', 'x-amz-request-id': 'XSEAENKCT19S9FAW', 'Date': 'Tue, 13 May 2025 07:30:15 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:30:14,122 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>logs/202502022329</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:30:14,123 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:30:14,123 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:30:14,123 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:30:14,123 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:30:14,124 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: kubernetes.var.log.containers/202502022329
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,124 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': 'kubernetes.var.log.containers/202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:30:14,124 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:30:14,124 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:30:14,124 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:14,124 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:30:14,125 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:30:14,125 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:30:14,125 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': 'kubernetes.var.log.containers/202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': 'kubernetes.var.log.containers/202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:30:14,125 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:30:14,125 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:14,125 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:30:14,125 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:30:14,125 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:30:14,125 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:14,125 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:30:14,125 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=kubernetes.var.log.containers%2F202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T073014Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:30:14,125 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T073014Z
20250513/us-east-1/s3/aws4_request
212504bf3ad53d2624f9f554c297d6f00c1a66398f3c7dc308c9a323b2548c3b
2025-05-13 10:30:14,125 - botocore.auth - DEBUG - [auth.py:436] - Signature:
399a235ddbe12b1722e474653f8dfab5dd0cccbcda92f1bf32646d4097e11756
2025-05-13 10:30:14,125 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:30:14,126 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:30:14,126 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T073014Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=399a235ddbe12b1722e474653f8dfab5dd0cccbcda92f1bf32646d4097e11756', 'amz-sdk-invocation-id': b'9420c888-6d28-44d3-a0eb-748cdb9bce83', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:30:14,126 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:30:14,365 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=kubernetes.var.log.containers%2F202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:30:14,365 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:30:14,366 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'D3nk6D3LMYvBb5eZ7YT/o704VkT7c6cpntXHlAmKwZJo5qdkqJTg1VRk45ISCfXSSbED47SCU06RVKaqdyjNAlg9GVP/xJL1', 'x-amz-request-id': 'XSEE7AGBNABAB4EN', 'Date': 'Tue, 13 May 2025 07:30:15 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:30:14,366 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>kubernetes.var.log.containers/202502022329</Prefix><KeyCount>0</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated></ListBucketResult>'
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:30:14,366 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:30:14,366 - s3 - DEBUG - [s3_operations.py:121] - Trying prefix: 202502022329
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function set_list_objects_encoding_type_url at 0x1077251c0>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.ListObjectsV2: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:30:14,366 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,366 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Prefix': '202502022329', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:30:14,366 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:30:14,366 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:30:14,366 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.ListObjectsV2: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:30:14,367 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=ListObjectsV2) with params: {'url_path': '?list-type=2', 'query_string': {'prefix': '202502022329', 'encoding-type': 'url'}, 'method': 'GET', 'headers': {'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/', 'url': 'https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202502022329&encoding-type=url', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 'encoding_type_auto_set': True, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Prefix': '202502022329', 'EncodingType': 'url'}}, 'input_params': {'Bucket': 'cellogs', 'Prefix': '202502022329'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}}}
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.ListObjectsV2: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.ListObjectsV2: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:14,367 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:30:14,367 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/
encoding-type=url&list-type=2&prefix=202502022329
host:cellogs.s3.amazonaws.com
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T073014Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:30:14,367 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T073014Z
20250513/us-east-1/s3/aws4_request
0e6082a1822a2e0e25f5fa7645703dfd22810e322ee2e15e3c47a36a6a3724e7
2025-05-13 10:30:14,367 - botocore.auth - DEBUG - [auth.py:436] - Signature:
b5d0639b10ce41dd1454680e0115b53e8ca48cf04442c6d9c15ca1633d5800de
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:30:14,367 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.ListObjectsV2: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:30:14,367 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://cellogs.s3.amazonaws.com/?list-type=2&prefix=202502022329&encoding-type=url, headers={'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T073014Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=b5d0639b10ce41dd1454680e0115b53e8ca48cf04442c6d9c15ca1633d5800de', 'amz-sdk-invocation-id': b'f598ea12-fb27-4f0a-8c01-6ecbfb9b0c6a', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:30:14,367 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:30:14,608 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /?list-type=2&prefix=202502022329&encoding-type=url HTTP/1.1" 200 None
2025-05-13 10:30:14,608 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:30:14,608 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.ListObjectsV2: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:30:14,608 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': '9+IDdPddDPvd4DZz1iypP8wOst83zdB9HY+QxctVhsS6ewIk/wxs/g47vIbYxuSG5+hodQB7Pw/izZ7ah0jWgqeTR/AkxPvg', 'x-amz-request-id': 'XSEEJ9BH6RAGGJZ5', 'Date': 'Tue, 13 May 2025 07:30:15 GMT', 'x-amz-bucket-region': 'us-east-1', 'Content-Type': 'application/xml', 'Transfer-Encoding': 'chunked', 'Server': 'AmazonS3'}
2025-05-13 10:30:14,609 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
b'<?xml version="1.0" encoding="UTF-8"?>\n<ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"><Name>cellogs</Name><Prefix>202502022329</Prefix><KeyCount>3</KeyCount><MaxKeys>1000</MaxKeys><EncodingType>url</EncodingType><IsTruncated>false</IsTruncated><Contents><Key>202502022329_11.gz</Key><LastModified>2025-02-06T12:20:31.000Z</LastModified><ETag>&quot;2a5c590614a9ea9585cfa4ff37e0e948&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>857</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>202502022329_16.gz</Key><LastModified>2025-02-06T12:20:34.000Z</LastModified><ETag>&quot;0a132731b8895ac922d0484826b9eae0&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>126877</Size><StorageClass>STANDARD</StorageClass></Contents><Contents><Key>202502022329_9.gz</Key><LastModified>2025-02-06T12:20:30.000Z</LastModified><ETag>&quot;5960b6f6c1aebf300645013a5f60f721&quot;</ETag><ChecksumAlgorithm>CRC64NVME</ChecksumAlgorithm><ChecksumType>FULL_OBJECT</ChecksumType><Size>662</Size><StorageClass>STANDARD</StorageClass></Contents></ListBucketResult>'
2025-05-13 10:30:14,611 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:30:14,611 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:30:14,611 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:30:14,611 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.ListObjectsV2: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,611 - botocore.hooks - DEBUG - [hooks.py:238] - Event after-call.s3.ListObjectsV2: calling handler <function decode_list_object_v2 at 0x107725300>
2025-05-13 10:30:14,612 - s3 - INFO - [s3_operations.py:126] - Found 3 files with prefix 202502022329
2025-05-13 10:30:14,612 - app.app - INFO - [app.py:178] - Found 3 files with prefix 202502022329
2025-05-13 10:30:14,612 - app.app - DEBUG - [app.py:181] - Files found: ['202502022329_11.gz', '202502022329_16.gz', '202502022329_9.gz']
2025-05-13 10:30:14,612 - app.app - INFO - [app.py:185] - Processing file: 202502022329_11.gz
2025-05-13 10:30:14,612 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1076ffd80>
2025-05-13 10:30:14,612 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:30:14,612 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:30:14,612 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,612 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:14,612 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:30:14,612 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:30:14,612 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:30:14,612 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,612 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_11.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:30:14,612 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:30:14,612 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:30:14,612 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:30:14,613 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_11.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_11.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_11.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_11.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_11.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:14,613 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:30:14,613 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_11.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T073014Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:30:14,613 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T073014Z
20250513/us-east-1/s3/aws4_request
cef995daf68830114a6cac2a4998dc43e9457605717b0216ee30a5671c99042a
2025-05-13 10:30:14,613 - botocore.auth - DEBUG - [auth.py:436] - Signature:
2bb16d867fe4b07070a712b7027d8ffb99f82820c1c8f98d507d29a1c808a968
2025-05-13 10:30:14,613 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:30:14,614 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:30:14,614 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_11.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T073014Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=2bb16d867fe4b07070a712b7027d8ffb99f82820c1c8f98d507d29a1c808a968', 'amz-sdk-invocation-id': b'f340c4a9-6e98-41ff-9b8d-068d5d5efaf5', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:30:14,614 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:30:14,864 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_11.gz HTTP/1.1" 200 857
2025-05-13 10:30:14,864 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 10:30:14,864 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:30:14,865 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:30:14,865 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': '7+OroFz3ljhxC4tYqJWkiTAyNoBlYdnEL0zdsfgw+6K7VNYpXsLPWsyxOwyZHyTAzlywg2NDwukivb0LWLUly+HnHYFiZgVX', 'x-amz-request-id': 'B3DMYQ018BJN0NG5', 'Date': 'Tue, 13 May 2025 07:30:16 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:31 GMT', 'ETag': '"2a5c590614a9ea9585cfa4ff37e0e948"', 'x-amz-checksum-crc64nvme': 'ZS20/Riisl0=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '857', 'Server': 'AmazonS3'}
2025-05-13 10:30:14,865 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x10837d5d0>
2025-05-13 10:30:14,865 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:30:14,866 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:30:14,866 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:30:14,866 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,866 - app.app - DEBUG - [app.py:187] - File content length: 857
2025-05-13 10:30:14,867 - app.app - INFO - [app.py:185] - Processing file: 202502022329_16.gz
2025-05-13 10:30:14,867 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1076ffd80>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:14,868 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_16.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:30:14,868 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:30:14,868 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:30:14,868 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:30:14,868 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:30:14,868 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_16.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_16.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_16.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_16.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_16.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 10:30:14,869 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:30:14,869 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:14,869 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:30:14,869 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:30:14,869 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:30:14,869 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:14,869 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:30:14,869 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_16.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T073014Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:30:14,869 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T073014Z
20250513/us-east-1/s3/aws4_request
d54afa35ecea20a82db57428c9adacf47b487266ae67640153bd47fc9ae5dc15
2025-05-13 10:30:14,869 - botocore.auth - DEBUG - [auth.py:436] - Signature:
57cb33652d677a204f7c9e64cf54210946b82baf28e2efae4a6a4abcdc90e799
2025-05-13 10:30:14,869 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:30:14,869 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:30:14,869 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_16.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T073014Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=57cb33652d677a204f7c9e64cf54210946b82baf28e2efae4a6a4abcdc90e799', 'amz-sdk-invocation-id': b'3dcdcac8-35c2-4b81-beac-e72f649f54be', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:30:14,870 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:30:15,178 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_16.gz HTTP/1.1" 200 126877
2025-05-13 10:30:15,178 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 10:30:15,178 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:30:15,178 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:30:15,178 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'eEkDNBaTwPlagQY5c34ncq11IFr0XwynPYUDUE/85/rEGNm8nmGgBVvrHmm2qfar0M6jYq4IOSXHPazN11oY0UInNNqRd2/h', 'x-amz-request-id': 'B3DVSMD2SBHWK0HV', 'Date': 'Tue, 13 May 2025 07:30:16 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:34 GMT', 'ETag': '"0a132731b8895ac922d0484826b9eae0"', 'x-amz-checksum-crc64nvme': 'kMtAdae3Sso=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '126877', 'Server': 'AmazonS3'}
2025-05-13 10:30:15,178 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x10837d9f0>
2025-05-13 10:30:15,178 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:30:15,178 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:30:15,178 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:30:15,178 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:15,638 - app.app - DEBUG - [app.py:187] - File content length: 126877
2025-05-13 10:30:15,645 - app.app - INFO - [app.py:185] - Processing file: 202502022329_9.gz
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function sse_md5 at 0x1076ffd80>
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function validate_bucket_name at 0x1076ffce0>
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function remove_bucket_from_url_paths_from_model at 0x107725f80>
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.annotate_request_context of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <bound method ClientCreator._inject_s3_input_parameters of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function generate_idempotent_uuid at 0x1076ffb00>
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parameter-build.s3.GetObject: calling handler <function _handle_request_validation_mode_member at 0x107726700>
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <function customize_endpoint_resolver_builtins at 0x107726160>
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-endpoint-resolution.s3: calling handler <bound method S3RegionRedirectorv2.redirect_from_cache of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:15,646 - botocore.regions - DEBUG - [regions.py:505] - Calling endpoint provider with parameters: {'Bucket': 'cellogs', 'Region': 'us-east-1', 'UseFIPS': False, 'UseDualStack': False, 'ForcePathStyle': False, 'Accelerate': False, 'UseGlobalEndpoint': True, 'Key': '202502022329_9.gz', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-05-13 10:30:15,646 - botocore.regions - DEBUG - [regions.py:520] - Endpoint provider result: https://cellogs.s3.amazonaws.com
2025-05-13 10:30:15,646 - botocore.regions - DEBUG - [regions.py:686] - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-05-13 10:30:15,646 - botocore.regions - DEBUG - [regions.py:761] - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-05-13 10:30:15,646 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_expect_header at 0x1077240e0>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.apply_signing_cache_key of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_recursion_detection_header at 0x1076ff6a0>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function add_query_compatibility_header at 0x107726660>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-call.s3.GetObject: calling handler <function inject_api_version_header_if_needed at 0x107725620>
2025-05-13 10:30:15,647 - botocore.endpoint - DEBUG - [endpoint.py:114] - Making request for OperationModel(name=GetObject) with params: {'url_path': '/202502022329_9.gz', 'query_string': {}, 'method': 'GET', 'headers': {'x-amz-checksum-mode': 'ENABLED', 'User-Agent': 'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14'}, 'body': b'', 'auth_path': '/cellogs/202502022329_9.gz', 'url': 'https://cellogs.s3.amazonaws.com/202502022329_9.gz', 'context': {'client_region': 'us-east-1', 'client_config': <botocore.config.Config object at 0x108232120>, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'cellogs', 'params': {'Bucket': 'cellogs', 'Key': '202502022329_9.gz', 'ChecksumMode': 'ENABLED'}}, 'input_params': {'Bucket': 'cellogs', 'Key': '202502022329_9.gz'}, 'signing': {'region': 'us-east-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-east-1'}]}, 'checksum': {'response_algorithms': ['crc32', 'sha1', 'sha256']}}}
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x108231fd0>>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <bound method ClientCreator._default_s3_presign_to_sigv2 of <botocore.client.ClientCreator object at 0x1077ab0e0>>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event choose-signer.s3.GetObject: calling handler <function set_operation_specific_signer at 0x1076ff920>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function remove_arn_from_signing_path at 0x1077260c0>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <function _set_extra_headers_for_unsigned_request at 0x1077267a0>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-sign.s3.GetObject: calling handler <bound method S3ExpressIdentityResolver.resolve_s3express_identity of <botocore.utils.S3ExpressIdentityResolver object at 0x1082b4440>>
2025-05-13 10:30:15,647 - botocore.auth - DEBUG - [auth.py:431] - Calculating signature using v4 auth.
2025-05-13 10:30:15,647 - botocore.auth - DEBUG - [auth.py:432] - CanonicalRequest:
GET
/202502022329_9.gz

host:cellogs.s3.amazonaws.com
x-amz-checksum-mode:ENABLED
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250513T073015Z

host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-05-13 10:30:15,647 - botocore.auth - DEBUG - [auth.py:434] - StringToSign:
AWS4-HMAC-SHA256
20250513T073015Z
20250513/us-east-1/s3/aws4_request
4d0b111ed2083207c7a05870f6d5e5cf85ceea1216c25de85e9de38dd3de7192
2025-05-13 10:30:15,647 - botocore.auth - DEBUG - [auth.py:436] - Signature:
dec3894fd4821e218d1861807a1aa1872d2011924578c657210b6d78daffae34
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <bound method UserAgentString.rebuild_and_replace_user_agent_handler of <botocore.useragent.UserAgentString object at 0x1081bb750>>
2025-05-13 10:30:15,647 - botocore.hooks - DEBUG - [hooks.py:238] - Event request-created.s3.GetObject: calling handler <function add_retry_headers at 0x107725ee0>
2025-05-13 10:30:15,647 - botocore.endpoint - DEBUG - [endpoint.py:263] - Sending http request: <AWSPreparedRequest stream_output=True, method=GET, url=https://cellogs.s3.amazonaws.com/202502022329_9.gz, headers={'x-amz-checksum-mode': b'ENABLED', 'User-Agent': b'Boto3/1.38.14 md/Botocore#1.38.14 ua/2.1 os/macos#24.4.0 md/arch#arm64 lang/python#3.13.3 md/pyimpl#CPython cfg/retry-mode#legacy Botocore/1.38.14', 'X-Amz-Date': b'20250513T073015Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA6ODU3H55UQ4VFPCY/20250513/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-checksum-mode;x-amz-content-sha256;x-amz-date, Signature=dec3894fd4821e218d1861807a1aa1872d2011924578c657210b6d78daffae34', 'amz-sdk-invocation-id': b'8ce18f12-8ff7-45de-ae10-4ea0981e3a31', 'amz-sdk-request': b'attempt=1'}>
2025-05-13 10:30:15,647 - botocore.httpsession - DEBUG - [httpsession.py:97] - Certificate path: /Users/emmanuel.kipngetich/Downloads/2025/AI/LokiLens/venv/lib/python3.13/site-packages/certifi/cacert.pem
2025-05-13 10:30:15,961 - urllib3.connectionpool - DEBUG - [connectionpool.py:544] - https://cellogs.s3.amazonaws.com:443 "GET /202502022329_9.gz HTTP/1.1" 200 662
2025-05-13 10:30:15,962 - botocore.httpchecksum - DEBUG - [httpchecksum.py:494] - Skipping checksum validation. Response did not contain one of the following algorithms: ['crc32', 'sha1', 'sha256'].
2025-05-13 10:30:15,962 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function _handle_200_error at 0x107726480>
2025-05-13 10:30:15,962 - botocore.hooks - DEBUG - [hooks.py:238] - Event before-parse.s3.GetObject: calling handler <function handle_expires_header at 0x1077262a0>
2025-05-13 10:30:15,962 - botocore.parsers - DEBUG - [parsers.py:250] - Response headers: {'x-amz-id-2': 'Tg5Dawg0+PiTd7d9PUjmZ+9qxFtzBKlQzw3KlRLz88MR4BYVCmNaGhz6A2niu0XO+uso305H5m1L7UkAzwnAqUkOORmF8WHb', 'x-amz-request-id': 'M1Y47RRDQ4E8NSBR', 'Date': 'Tue, 13 May 2025 07:30:17 GMT', 'Last-Modified': 'Thu, 06 Feb 2025 12:20:30 GMT', 'ETag': '"5960b6f6c1aebf300645013a5f60f721"', 'x-amz-checksum-crc64nvme': 'x/BnhXcMiJc=', 'x-amz-checksum-type': 'FULL_OBJECT', 'x-amz-server-side-encryption': 'AES256', 'Accept-Ranges': 'bytes', 'Content-Type': 'application/x-gzip', 'Content-Length': '662', 'Server': 'AmazonS3'}
2025-05-13 10:30:15,962 - botocore.parsers - DEBUG - [parsers.py:251] - Response body:
<botocore.response.StreamingBody object at 0x10837d870>
2025-05-13 10:30:15,962 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <function _update_status_code at 0x1077265c0>
2025-05-13 10:30:15,962 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <botocore.retryhandler.RetryHandler object at 0x1082b41a0>
2025-05-13 10:30:15,962 - botocore.retryhandler - DEBUG - [retryhandler.py:211] - No retry needed.
2025-05-13 10:30:15,962 - botocore.hooks - DEBUG - [hooks.py:238] - Event needs-retry.s3.GetObject: calling handler <bound method S3RegionRedirectorv2.redirect_from_error of <botocore.utils.S3RegionRedirectorv2 object at 0x1082b42f0>>
2025-05-13 10:30:15,962 - app.app - DEBUG - [app.py:187] - File content length: 662
2025-05-13 10:30:15,962 - app.app - INFO - [app.py:224] - Total results found: 0
